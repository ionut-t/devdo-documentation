var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.259,1,0.852]],["body/components/AppComponent.html",[0,0.466,1,1.474,2,1.528,3,0.281,4,0.244,5,1.236,6,1.236,7,1.236,8,1.236,9,0.244,10,3.024,11,0.862,12,3.416,13,1.324,14,1.982,15,1.15,16,2.286,17,1.844,18,1.642,19,5.36,20,1.642,21,4.773,22,0.582,23,1.063,24,2.112,25,0.8,26,2.371,27,2.433,28,0.985,29,3.592,30,0.8,31,0.028,32,0.945,33,0.633,34,0.8,35,3.592,36,4.773,37,1.899,38,4.019,39,0.8,40,1.071,41,0.478,42,0.32,43,3.592,44,0.281,45,0.359,46,1.541,47,3.592,48,0.862,49,1.642,50,1.642,51,1.236,52,1.965,53,1.236,54,1.236,55,0.862,56,1.236,57,0.927,58,1.071,59,1.642,60,0.927,61,1.236,62,0.927,63,1.236,64,0.862,65,1.071,66,0.862,67,1.236,68,0.862,69,1.236,70,0.927,71,1.236,72,0.862,73,1.071,74,1.236,75,0.862,76,1.236,77,0.927,78,1.15,79,1.236,80,1.236,81,0.015,82,0.02,83,0.015]],["title/modules/AppModule.html",[84,1.057,85,2.179]],["body/modules/AppModule.html",[1,1.705,3,0.29,4,0.252,9,0.252,17,1.028,31,0.028,41,0.646,42,0.33,44,0.29,45,0.371,48,0.889,81,0.015,82,0.02,83,0.015,84,1.187,85,4.423,86,1.371,87,1.861,88,3.256,89,3.256,90,3.256,91,1.59,92,3.121,93,3.121,94,3.121,95,3.121,96,3.121,97,3.369,98,3.688,99,3.688,100,3.688,101,2.914,102,2.216,103,1.717,104,3.706,105,2.446,106,4.873,107,4.103,108,2.735,109,2.258,110,4.873,111,3.706,112,4.873,113,5.444,114,2.216,115,2.447,116,3.706,117,3.706,118,3.706,119,3.706,120,4.873,121,4.873,122,4.873,123,2.662]],["title/modules/AppRoutingModule.html",[84,1.057,97,1.804]],["body/modules/AppRoutingModule.html",[0,0.416,3,0.332,4,0.288,9,0.288,31,0.029,37,1.686,41,0.627,42,0.377,44,0.332,45,0.424,66,1.274,72,1.274,73,1.583,81,0.017,82,0.022,83,0.017,86,1.567,91,1.818,97,2.901,105,2.128,109,2.46,124,4.238,125,3.127,126,3.468,127,3.918,128,1.963,129,4.238,130,3.505,131,4.238,132,4.238,133,2.797,134,3.568,135,2.128,136,4.62,137,2.534,138,5.31,139,4.238,140,4.238,141,3.568,142,4.238,143,4.238,144,3.918,145,4.238,146,4.238]],["title/interfaces/AuthData.html",[147,1.804,148,2.179]],["body/interfaces/AuthData.html",[3,0.378,4,0.329,9,0.329,11,1.159,22,0.783,31,0.027,33,1.014,44,0.378,81,0.02,82,0.024,83,0.02,147,3.143,148,3.798,149,3.565,150,3.565,151,4.068,152,4.831,153,3.565,154,3.189,155,4.068,156,1.842,157,4.198,158,4.198,159,2.623]],["title/guards/AuthGuard.html",[130,2.179,160,2.179]],["body/guards/AuthGuard.html",[3,0.302,4,0.262,9,0.262,11,0.924,12,2.304,13,1.069,22,0.625,23,1.113,25,0.858,26,2.543,27,2.48,28,1.031,30,1.113,31,0.028,32,0.881,33,0.881,34,1.113,37,1.989,39,0.858,41,0.587,42,0.343,44,0.302,45,0.385,46,1.652,81,0.016,82,0.02,83,0.016,128,1.785,130,3.299,135,1.934,141,4.942,160,3.299,161,3.852,162,3.243,163,5.472,164,4.997,165,4.188,166,3.852,167,4.997,168,3.852,169,3.687,170,4.997,171,4.207,172,4.997,173,4.997,174,4.997,175,4.997,176,4.67,177,4.997,178,4.207,179,1.989,180,1.233,181,2.543,182,2.543,183,1.424,184,4.093,185,3.243,186,1.848,187,3.243]],["title/interceptors/AuthInterceptor.html",[99,1.974,188,1.974]],["body/interceptors/AuthInterceptor.html",[3,0.32,4,0.278,9,0.278,11,0.981,13,1.134,22,0.663,23,1.156,25,0.911,26,2.699,27,2.519,28,1.072,30,1.156,31,0.028,32,0.915,33,0.915,34,1.156,39,0.911,41,0.571,42,0.364,44,0.32,45,0.409,46,1.754,81,0.017,82,0.021,83,0.017,99,3.105,114,2.445,135,2.607,154,3.427,179,2.066,181,2.699,186,1.512,188,3.105,189,3.443,190,3.443,191,4.371,192,4.089,193,4.371,194,5.053,195,4.803,196,5.053,197,4.089,198,3.831,199,5.192,200,5.192,201,3.443,202,4.371,203,5.192,204,4.089,205,4.089,206,4.089,207,4.089,208,4.089,209,4.089,210,4.089]],["title/modules/AuthModule.html",[84,1.057,211,2.179]],["body/modules/AuthModule.html",[3,0.324,4,0.281,9,0.281,31,0.028,41,0.645,42,0.368,44,0.324,45,0.414,48,0.992,68,1.523,75,1.523,81,0.017,82,0.021,83,0.017,84,1.324,86,1.529,87,2.076,88,3.429,89,2.472,90,2.472,91,1.773,101,3.127,102,2.472,103,1.915,105,2.625,109,2.422,115,2.729,211,4.428,212,3.481,213,3.481,214,3.481,215,3.797,216,3.187,217,4.134,218,3.858,219,2.729,220,5.228,221,2.076,222,3.05,223,3.481,224,3.481,225,3.481]],["title/modules/AuthRoutingModule.html",[84,1.057,215,1.974]],["body/modules/AuthRoutingModule.html",[0,0.439,3,0.362,4,0.315,9,0.315,31,0.028,41,0.627,42,0.412,44,0.362,45,0.463,68,1.345,75,1.345,81,0.019,82,0.023,83,0.019,86,1.711,91,1.985,105,2.323,109,2.597,125,3.414,126,3.607,127,4.137,128,2.144,135,2.323,136,4.137,150,3.414,215,3.353,224,3.896,225,3.896,226,3.896,227,3.414,228,3.896]],["title/injectables/AuthService.html",[27,1.314,179,1.314]],["body/injectables/AuthService.html",[3,0.15,4,0.13,9,0.13,12,1.142,22,0.31,23,0.67,25,0.67,27,1.198,28,1.254,30,1.025,31,0.029,32,0.811,33,0.902,34,1.025,37,2.172,39,1.269,40,1.526,41,0.512,42,0.17,44,0.15,45,0.191,58,0.897,81,0.008,82,0.012,83,0.008,103,1.727,114,1.142,123,1.645,128,0.885,135,2.909,148,3.228,153,3.608,154,3.825,156,0.964,157,2.792,158,3.501,159,2.458,165,3.379,178,1.607,179,1.198,180,0.611,182,1.26,183,2.389,186,1.808,187,1.607,198,2.221,223,1.607,227,2.221,229,1.26,230,1.409,231,3.727,232,3.727,233,5.952,234,3.727,235,4.23,236,4.23,237,3.01,238,4.23,239,2.529,240,4.23,241,4.23,242,4.23,243,3.01,244,3.01,245,1.607,246,3.561,247,1.893,248,1.909,249,2.534,250,1.909,251,2.534,252,1.909,253,3.01,254,4.23,255,4.23,256,3.01,257,1.909,258,1.909,259,5.458,260,1.909,261,2.534,262,2.534,263,3.561,264,1.909,265,3.01,266,1.909,267,3.01,268,1.909,269,3.121,270,1.909,271,3.01,272,4.89,273,1.909,274,2.221,275,3.01,276,3.138,277,1.909,278,3.01,279,2.534,280,1.036,281,0.964,282,2.455,283,2.75,284,4.89,285,1.909,286,1.598,287,1.909,288,1.909,289,1.909,290,1.909,291,1.607,292,1.26,293,1.607,294,1.409,295,1.409,296,1.26,297,1.409,298,4.23,299,1.909,300,3.138,301,1.909,302,1.909,303,2.534,304,3.138,305,1.8,306,1.607,307,1.909,308,1.909,309,1.909,310,1.909,311,3.01,312,1.909,313,1.909,314,3.01,315,3.01,316,3.01,317,3.727,318,1.909,319,3.01,320,3.01,321,3.01,322,2.228,323,3.01,324,1.987,325,1.607,326,3.01,327,1.909,328,3.01,329,1.909,330,0.885,331,1.909,332,1.909,333,1.909,334,1.909,335,1.909,336,1.909,337,1.909,338,1.909,339,1.909,340,1.909,341,1.909,342,1.909,343,1.909,344,1.909,345,1.909,346,1.909,347,1.909]],["title/components/BoardComponent.html",[0,0.259,55,0.792]],["body/components/BoardComponent.html",[0,0.459,1,0.889,2,1.486,3,0.27,4,0.234,5,1.185,6,1.185,7,1.185,8,1.185,9,0.234,11,0.827,13,1.288,14,1.941,15,1.103,16,2.273,17,1.834,18,1.597,20,1.597,22,0.559,23,1.034,24,2.077,25,1.169,28,0.958,31,0.028,32,0.818,39,0.767,40,1.027,41,0.345,42,0.307,44,0.27,45,0.345,48,0.827,49,1.597,50,1.597,51,1.185,52,1.932,53,1.185,54,1.185,55,1.348,56,1.185,57,0.889,58,1.027,59,1.597,60,0.889,61,1.185,62,0.889,63,1.185,64,0.827,65,1.027,66,0.827,67,1.185,68,0.827,69,1.185,70,0.889,71,1.185,72,0.827,73,1.027,74,1.185,75,0.827,76,1.185,77,0.889,78,1.103,79,1.185,80,1.185,81,0.014,82,0.019,83,0.014,137,3.506,251,2.901,330,2.432,348,2.901,349,5.25,350,4.642,351,3.446,352,3.446,353,2.331,354,2.536,355,2.536,356,3.446,357,2.275,358,2.542,359,3.873,360,3.446,361,4.642,362,2.542,363,2.542,364,3.446,365,3.446,366,2.542,367,2.275,368,2.061,369,4.642,370,3.446,371,2.542,372,2.542,373,2.542,374,3.446,375,3.446,376,2.275,377,3.446,378,2.901]],["title/modules/BoardModule.html",[84,1.057,379,2.179]],["body/modules/BoardModule.html",[3,0.28,4,0.243,9,0.243,31,0.028,41,0.657,42,0.318,44,0.28,45,0.357,48,0.857,55,1.464,57,1.575,60,1.575,62,1.575,64,1.464,65,1.065,77,1.575,81,0.015,82,0.019,83,0.015,84,1.144,86,1.321,87,1.793,88,3.196,89,2.136,90,2.136,91,1.532,101,2.843,102,2.136,103,1.655,105,2.387,109,2.203,115,2.357,137,2.136,216,3.064,218,3.508,219,2.357,221,1.793,222,2.635,379,4.491,380,3.007,381,3.007,382,3.007,383,3.649,384,3.649,385,3.571,386,4.755,387,3.007,388,3.571,389,3.571,390,3.571,391,3.571,392,2.635,393,4.003,394,2.357,395,3.007,396,2.635,397,3.571]],["title/modules/BoardRoutingModule.html",[84,1.057,384,1.974]],["body/modules/BoardRoutingModule.html",[0,0.485,3,0.35,4,0.304,9,0.304,31,0.028,41,0.62,42,0.398,44,0.35,45,0.447,55,1.317,64,1.487,65,1.333,81,0.018,82,0.023,83,0.018,86,1.654,91,1.918,105,2.245,109,2.544,125,3.299,126,3.553,127,4.051,128,2.072,135,2.245,136,4.572,228,3.765,384,3.283,387,3.765,393,3.765,394,2.952,398,4.472,399,4.472,400,4.472,401,4.472]],["title/injectables/BoardService.html",[179,1.314,402,1.53]],["body/injectables/BoardService.html",[3,0.104,4,0.091,9,0.091,11,1.47,12,0.796,22,0.216,23,0.5,25,0.297,28,1.251,30,1.187,31,0.029,32,0.939,33,0.986,34,1.187,39,1.276,40,1.557,41,0.439,42,0.119,44,0.104,45,0.133,46,0.571,58,0.669,78,1.588,81,0.005,82,0.009,83,0.005,114,0.796,135,2.676,153,0.983,156,0.718,159,2.662,179,0.893,180,0.426,182,0.879,183,2.141,186,1.931,229,0.879,245,1.121,246,2.872,247,1.623,249,1.889,261,3.474,262,3.474,280,1.419,281,1.321,282,2.314,283,0.983,291,1.121,292,0.879,293,1.121,294,0.983,295,0.983,296,0.879,297,0.983,300,2.447,303,1.889,304,2.447,306,4.039,322,0.796,402,1.039,403,0.983,404,2.447,405,2.907,406,2.447,407,2.907,408,2.907,409,2.907,410,2.243,411,2.243,412,2.243,413,2.243,414,2.243,415,2.243,416,2.243,417,3.411,418,2.872,419,2.243,420,3.411,421,2.872,422,2.243,423,3.411,424,2.872,425,2.243,426,2.243,427,2.243,428,2.243,429,2.243,430,3.042,431,1.332,432,2.251,433,2.965,434,2.815,435,3.268,436,2.243,437,1.332,438,2.965,439,2.243,440,1.332,441,2.243,442,1.332,443,2.724,444,2.243,445,1.332,446,2.243,447,1.332,448,4.005,449,2.243,450,1.332,451,4.126,452,1.332,453,2.254,454,1.889,455,1.332,456,2.468,457,2.243,458,1.332,459,1.332,460,2.243,461,1.332,462,2.243,463,1.332,464,1.332,465,1.332,466,2.243,467,1.332,468,4.126,469,2.243,470,1.332,471,2.243,472,1.332,473,1.332,474,2.243,475,1.332,476,1.332,477,2.243,478,1.332,479,2.243,480,1.332,481,0.796,482,1.121,483,0.983,484,1.332,485,1.332,486,1.332,487,1.332,488,4.61,489,4.798,490,2.907,491,1.332,492,3.411,493,2.907,494,1.332,495,1.332,496,1.738,497,2.907,498,2.907,499,2.907,500,1.919,501,1.919,502,1.332,503,1.332,504,3.411,505,1.332,506,4.126,507,2.907,508,2.907,509,2.907,510,2.907,511,1.332,512,1.332,513,1.332,514,1.332,515,3.411,516,1.332,517,1.332,518,2.872,519,1.332,520,1.332,521,1.332,522,1.332,523,1.332,524,3.411,525,1.332,526,1.332,527,1.332,528,2.872,529,1.332,530,1.332,531,1.332]],["title/modules/CoreModule.html",[84,1.057,98,1.974]],["body/modules/CoreModule.html",[3,0.311,4,0.27,9,0.27,17,1.103,31,0.028,41,0.639,42,0.354,44,0.311,45,0.398,48,0.954,66,1.508,70,1.722,72,1.508,73,1.185,81,0.016,82,0.021,83,0.016,84,1.273,86,1.47,87,1.996,88,3.367,89,2.377,90,2.377,91,2.415,97,3.433,98,4.04,101,3.05,102,2.377,103,1.842,105,2.56,109,2.363,115,2.624,133,2.624,134,3.347,216,3.155,218,3.763,219,2.624,222,2.933,532,3.347,533,3.347,534,3.975,535,3.347,536,3.975,537,3.975,538,3.975]],["title/components/CreateTaskComponent.html",[0,0.259,57,0.852]],["body/components/CreateTaskComponent.html",[0,0.413,1,0.67,2,1.218,3,0.203,4,0.177,5,0.893,6,0.893,7,0.893,8,0.893,9,0.177,11,1.08,13,1.055,14,1.664,15,0.831,16,2.176,17,1.755,18,1.308,20,1.308,22,0.73,23,0.847,24,1.833,25,0.578,28,1.089,30,0.847,31,0.028,32,0.873,33,0.793,34,0.847,39,1.002,40,1.342,41,0.45,42,0.231,44,0.203,45,0.26,46,1.113,48,0.623,49,1.308,50,1.308,51,0.893,52,1.705,53,0.893,54,0.893,55,0.623,56,0.893,57,1.279,58,1.83,59,1.308,60,0.67,61,0.893,62,0.67,63,0.893,64,0.623,65,0.774,66,0.623,67,0.893,68,0.623,69,0.893,70,0.67,71,0.893,72,0.623,73,0.774,74,0.893,75,0.623,76,0.893,77,0.67,78,0.831,79,0.893,80,0.893,81,0.011,82,0.016,83,0.011,186,0.96,221,1.303,274,2.806,282,2.649,324,2.51,330,2.761,353,2.26,354,2.707,355,2.459,358,1.915,359,1.915,362,2.806,363,2.806,368,2.274,376,1.713,392,4.067,402,2.554,430,1.909,434,2.126,453,2.078,539,4.641,540,1.915,541,3.202,542,3.803,543,3.79,544,3.202,545,4.172,546,3.202,547,3.803,548,4.442,549,1.552,550,3.803,551,4.501,552,2.185,553,2.596,554,3.803,555,3.202,556,4.172,557,2.596,558,3.271,559,3.803,560,1.552,561,2.185,562,2.596,563,2.185,564,2.596,565,2.185,566,2.596,567,3.893,568,4.172,569,3.202,570,2.185,571,2.078,572,3.202,573,2.274,574,2.51,575,2.185,576,2.806,577,2.51,578,3.202,579,3.202,580,2.806,581,1.713,582,1.713,583,3.271,584,1.713,585,1.915,586,2.185,587,2.185,588,2.185,589,2.185,590,2.185,591,2.185,592,2.185,593,2.185,594,2.185,595,2.185,596,3.202,597,2.185,598,2.185,599,1.915,600,1.915,601,2.596]],["title/components/DoingComponent.html",[0,0.259,60,0.852]],["body/components/DoingComponent.html",[0,0.396,1,0.607,2,1.131,3,0.184,4,0.16,5,0.808,6,0.808,7,0.808,8,0.808,9,0.16,11,1.392,13,0.98,14,1.57,15,0.752,16,2.137,17,1.723,18,1.215,20,1.215,22,0.381,23,0.787,24,1.746,25,0.787,28,1.221,30,1.051,31,0.029,32,0.937,33,0.972,34,1.051,39,1.127,40,1.508,41,0.506,42,0.209,44,0.184,45,0.235,48,0.564,49,1.215,50,1.215,51,0.808,52,1.624,53,0.808,54,0.808,55,0.564,56,0.808,57,0.607,58,0.701,59,1.215,60,1.218,61,0.808,62,0.607,63,0.808,64,0.564,65,1.265,66,0.564,67,0.808,68,0.564,69,0.808,70,0.607,71,0.808,72,0.564,73,0.701,74,0.808,75,0.564,76,0.808,77,0.607,78,1.359,79,0.808,80,0.808,81,0.01,82,0.014,83,0.01,156,1.131,159,2.581,180,0.752,183,2.098,247,2.039,280,0.808,281,0.752,286,1.515,402,2.463,404,3.574,418,1.979,430,2.769,432,3.116,433,3.536,434,2.49,435,2.319,438,2.113,443,3.116,453,2.319,456,3.179,481,1.405,500,2.332,501,2.332,518,1.979,549,1.405,560,1.405,602,1.979,603,2.131,604,4.245,605,3.533,606,4.245,607,3.026,608,2.538,609,2.37,610,2.607,611,3.533,612,2.974,613,3.533,614,2.35,615,1.774,616,1.93,617,2.35,618,2.607,619,2.35,620,3.533,621,2.35,622,2.974,623,2.35,624,2.974,625,2.541,626,2.35,627,2.35,628,2.35,629,1.405,630,2.113,631,1.405,632,1.405,633,2.35,634,3.533,635,1.734,636,1.979,637,2.35,638,2.607,639,2.35,640,2.35,641,2.35,642,1.405,643,3.116,644,2.974,645,3.533]],["title/components/DoneComponent.html",[0,0.259,62,0.852]],["body/components/DoneComponent.html",[0,0.348,1,0.654,2,1.197,3,0.199,4,0.172,5,0.872,6,0.872,7,0.872,8,0.872,9,0.172,11,1.176,13,1.037,14,1.642,15,0.812,16,2.167,17,1.748,18,1.286,20,1.286,22,0.411,23,0.833,24,1.812,25,0.833,28,1.223,30,0.989,31,0.029,32,0.921,33,0.963,34,0.989,39,1.091,40,1.461,41,0.523,42,0.226,44,0.199,45,0.254,48,0.608,49,1.286,50,1.286,51,0.872,52,1.686,53,0.872,54,0.872,55,0.608,56,0.872,57,0.654,58,0.756,59,1.286,60,0.654,61,0.872,62,1.265,63,0.872,64,0.608,65,1.324,66,0.608,67,0.872,68,0.608,69,0.872,70,0.654,71,0.872,72,0.608,73,0.756,74,0.872,75,0.608,76,0.872,77,0.654,78,0.812,79,0.872,80,0.872,81,0.01,82,0.015,83,0.01,156,1.197,159,2.46,180,0.812,183,2.146,247,2.091,280,0.872,281,0.812,286,1.603,402,2.533,406,3.738,421,2.135,430,2.46,432,2.468,433,2.93,434,2.425,435,2.042,438,3.269,443,3.235,453,2.426,456,2.236,481,1.516,500,2.468,501,2.468,528,2.135,549,1.516,560,1.516,603,2.229,607,3.125,608,2.655,609,2.46,610,2.758,612,3.147,615,1.877,616,2.042,618,2.758,622,3.147,624,3.147,625,2.623,629,1.516,630,2.236,631,1.516,632,1.516,635,1.871,636,2.135,638,1.871,642,1.516,643,3.235,644,3.147,646,2.135,647,4.44,648,3.738,649,4.44,650,3.738,651,2.536,652,2.536,653,2.536,654,2.536,655,2.536,656,2.536,657,2.536,658,2.536,659,3.738,660,2.135,661,2.536,662,2.536]],["title/components/EditTaskComponent.html",[0,0.259,64,0.792]],["body/components/EditTaskComponent.html",[0,0.378,1,0.545,2,1.043,3,0.166,4,0.144,5,0.727,6,0.727,7,0.727,8,0.727,9,0.144,11,1.223,13,0.904,14,1.47,15,0.677,16,2.093,17,1.688,18,1.121,20,1.121,22,0.645,23,0.726,24,1.652,25,0.726,28,1.097,30,0.726,31,0.029,32,0.787,33,0.787,34,0.726,39,0.885,40,1.185,41,0.483,42,0.188,44,0.166,45,0.211,48,0.507,49,1.121,50,1.121,51,0.727,52,1.537,53,0.727,54,0.727,55,0.507,56,0.727,57,0.545,58,0.63,59,1.121,60,0.545,61,0.727,62,0.545,63,0.727,64,1.072,65,1.678,66,0.507,67,0.727,68,0.507,69,0.727,70,0.545,71,0.727,72,0.507,73,0.63,74,0.727,75,0.507,76,0.727,77,0.545,78,1.546,79,0.727,80,0.727,81,0.009,82,0.013,83,0.009,128,0.979,137,1.948,156,1.043,159,1.296,163,3.347,165,3.508,183,2.082,186,1.47,221,1.061,274,3.297,280,0.727,281,0.677,324,2.15,325,1.779,330,2.609,353,1.996,354,2.441,355,2.172,358,1.559,359,1.559,362,2.404,363,3.297,368,1.948,376,1.395,394,3.623,402,2.363,430,2.423,433,2.672,434,2.548,435,2.172,438,2.378,453,1.78,481,1.263,540,1.559,543,3.347,544,2.743,545,3.762,546,2.743,549,1.263,552,2.743,555,2.743,556,3.762,558,2.949,560,1.263,561,1.779,563,3.347,565,1.779,567,3.562,568,3.762,569,2.743,570,1.779,571,1.78,572,2.743,573,1.948,574,2.15,575,1.779,576,2.404,577,2.15,578,2.743,579,2.743,580,2.404,581,1.395,582,1.395,583,2.949,584,1.395,585,1.559,586,1.779,587,1.779,588,1.779,589,1.779,590,1.779,591,1.779,592,1.779,593,1.779,594,1.779,595,1.779,596,2.743,597,1.779,598,1.779,599,1.559,600,1.559,663,4.621,664,3.258,665,3.976,666,3.976,667,4.468,668,2.113,669,3.258,670,2.113,671,2.113,672,3.258,673,2.113,674,2.113,675,3.258,676,2.113,677,2.113,678,4.827,679,5.1,680,2.113,681,2.113,682,3.976,683,3.976,684,3.976,685,3.976,686,2.113,687,2.113,688,2.113,689,2.113,690,2.113,691,2.113,692,3.976,693,2.113,694,2.113,695,2.113]],["title/interceptors/ErrorInterceptor.html",[100,1.974,188,1.974]],["body/interceptors/ErrorInterceptor.html",[3,0.304,4,0.264,9,0.264,11,0.93,13,1.075,22,0.628,23,1.117,25,0.863,28,1.036,30,1.117,31,0.028,32,0.884,33,0.884,34,1.117,39,0.863,41,0.61,42,0.345,44,0.304,45,0.388,46,1.662,81,0.016,82,0.021,83,0.016,100,3,114,2.318,179,1.997,180,1.241,186,1.855,188,3,189,3.263,191,4.953,193,4.224,194,4.953,195,4.684,196,4.953,201,3.263,202,4.224,247,2.308,305,3,322,2.318,448,4.105,483,2.86,573,2.318,696,3.263,697,3.876,698,3.876,699,3.876,700,3.702,701,5.017,702,3.876,703,3.876,704,3.876,705,3.876,706,3.876,707,5.017,708,3.876,709,3.876,710,2.86,711,3.876,712,3.876,713,3.876,714,3.876,715,3.876,716,5.017,717,3.876,718,3.876,719,3.876]],["title/components/HomeComponent.html",[0,0.259,66,0.792]],["body/components/HomeComponent.html",[0,0.414,1,0.675,2,1.224,3,0.205,4,0.178,5,0.899,6,0.899,7,0.899,8,0.899,9,0.178,11,0.627,13,1.061,14,1.671,15,0.837,16,2.178,17,1.757,18,1.315,20,1.315,22,0.424,23,0.851,24,1.839,25,0.582,27,2.271,28,1.141,30,0.582,31,0.028,32,0.796,33,0.674,34,0.582,37,1.521,39,1.006,40,1.347,41,0.498,42,0.233,44,0.205,45,0.262,46,1.121,48,0.627,49,1.315,50,1.315,51,0.899,52,1.71,53,0.899,54,0.899,55,0.627,56,0.899,57,0.675,58,0.779,59,1.315,60,0.675,61,0.899,62,0.675,63,0.899,64,0.627,65,0.779,66,1.193,67,0.899,68,0.627,69,0.899,70,0.675,71,0.899,72,0.627,73,1.577,74,0.899,75,0.627,76,0.899,77,0.675,78,0.837,79,0.899,80,0.899,81,0.011,82,0.016,83,0.011,128,1.211,156,1.224,165,3.648,180,0.837,183,1.839,184,3.669,239,1.563,280,0.899,281,0.837,286,1.64,324,2.523,353,1.312,354,2.088,355,2.088,357,2.983,366,1.929,367,2.523,368,2.703,371,1.929,372,1.929,373,1.929,454,3.219,571,2.469,574,1.725,576,3.669,577,1.725,599,1.929,600,1.929,603,2.269,609,2.496,615,1.919,616,2.088,625,2.269,720,2.201,721,4.653,722,4.519,723,3.823,724,3.805,725,4.972,726,2.614,727,3.823,728,2.614,729,2.614,730,2.614,731,3.823,732,3.669,733,3.669,734,2.614,735,2.201,736,3.219,737,1.725,738,2.201,739,2.201,740,2.614,741,2.201,742,2.821,743,3.823,744,3.823,745,3.823,746,3.219,747,3.823,748,3.823,749,3.823,750,2.614,751,2.614,752,2.614,753,2.614,754,2.614,755,2.614,756,3.823,757,2.614,758,2.201,759,2.614,760,2.614,761,2.614,762,2.201,763,2.614,764,3.823,765,3.219,766,2.201,767,2.201,768,3.823,769,2.201,770,2.201,771,2.614,772,2.614,773,2.201,774,2.614,775,2.614,776,2.614,777,2.614,778,2.201,779,2.201]],["title/components/LoginComponent.html",[0,0.259,68,0.792]],["body/components/LoginComponent.html",[0,0.328,1,0.593,2,1.112,3,0.18,4,0.156,5,0.79,6,0.79,7,0.79,8,0.79,9,0.156,13,0.964,14,1.548,15,0.736,16,2.128,17,1.716,18,1.195,20,1.195,22,0.373,23,0.774,24,1.726,25,0.512,26,1.517,27,2.097,28,1.25,30,0.512,31,0.029,32,0.738,33,0.822,34,0.512,37,1.382,39,1.116,40,1.248,41,0.501,42,0.205,44,0.18,45,0.23,46,0.986,48,0.551,49,1.195,50,1.195,51,0.79,52,1.605,53,0.79,54,0.79,55,0.551,56,0.79,57,0.593,58,1.248,59,1.195,60,0.593,61,0.79,62,0.593,63,0.79,64,0.551,65,0.685,66,0.551,67,0.79,68,1.12,69,0.79,70,0.593,71,0.79,72,0.551,73,0.685,74,0.79,75,0.551,76,0.79,77,0.593,78,0.736,79,0.79,80,0.79,81,0.009,82,0.014,83,0.009,123,1.898,156,1.112,157,3.613,158,3.081,159,0.914,180,0.736,181,1.517,183,2.024,186,1.949,221,1.154,227,3.444,239,1.374,247,2.024,269,4.158,280,1.195,281,1.112,282,2.102,286,1.796,322,2.077,558,3.808,603,2.102,607,2.997,608,2.504,609,2.343,615,1.744,616,1.898,625,2.516,629,1.374,630,2.077,631,1.374,632,2.077,642,1.374,700,3.444,710,3.698,737,1.517,780,1.935,781,4.187,782,3.473,783,3.526,784,4.219,785,4.187,786,4.438,787,3.929,788,4.438,789,2.924,790,3.473,791,2.298,792,3.929,793,4.219,794,2.924,795,2.298,796,2.298,797,2.924,798,2.924,799,2.298,800,2.924,801,2.298,802,2.298,803,2.298,804,2.298,805,3.929,806,2.298,807,1.935,808,2.298,809,2.298,810,3.526,811,2.924,812,1.935,813,2.298,814,3.473,815,2.924,816,1.935,817,2.298,818,1.935,819,1.935,820,1.935,821,2.298,822,1.935,823,1.935,824,2.924,825,2.924]],["title/modules/MaterialModule.html",[84,1.057,216,1.657]],["body/modules/MaterialModule.html",[3,0.326,4,0.283,9,0.283,31,0.029,41,0.677,42,0.37,44,0.326,45,0.416,81,0.017,82,0.022,83,0.017,86,1.539,91,1.785,109,2.433,216,2.636,826,4.162,827,5.251,828,3.504,829,5.251,830,4.162,831,4.162,832,5.251,833,4.162,834,5.251,835,4.162,836,5.251,837,4.162,838,5.251,839,4.162,840,5.251,841,4.162,842,5.251,843,4.162,844,5.251,845,3.504,846,5.251,847,4.162,848,5.251,849,4.162,850,4.162,851,5.251,852,3.504,853,3.504,854,5.251,855,4.162]],["title/components/NavigationComponent.html",[0,0.259,70,0.852]],["body/components/NavigationComponent.html",[0,0.338,1,0.622,2,1.153,3,0.189,4,0.164,5,0.829,6,0.829,7,0.829,8,0.829,9,0.164,13,0.999,14,1.594,15,0.772,16,2.147,17,1.732,18,1.239,20,1.239,22,0.584,23,0.802,24,1.768,25,0.802,27,2.213,28,1.206,30,0.537,31,0.028,32,0.759,33,0.842,34,0.537,37,1.433,39,0.96,40,1.285,41,0.537,42,0.215,44,0.189,45,0.241,48,0.578,49,1.239,50,1.239,51,0.829,52,1.645,53,0.829,54,0.829,55,0.578,56,0.829,57,0.622,58,0.719,59,1.239,60,0.622,61,0.829,62,0.622,63,0.829,64,0.578,65,0.719,66,0.578,67,0.829,68,0.578,69,0.829,70,1.234,71,0.829,72,0.578,73,0.719,74,0.829,75,0.578,76,0.829,77,0.622,78,0.772,79,0.829,80,0.829,81,0.01,82,0.015,83,0.01,103,2.487,137,2.859,154,2.377,156,1.153,176,3.629,180,0.772,183,1.892,184,3.528,185,2.03,239,1.442,263,3.032,269,4.391,280,1.483,281,1.38,286,2.302,330,1.668,353,1.21,354,1.967,355,1.317,357,1.591,366,1.779,367,1.591,376,2.845,378,2.03,456,2.153,482,2.03,483,1.779,571,1.317,573,1.442,577,2.845,580,1.779,581,1.591,582,1.591,603,2.164,609,2.4,615,1.808,625,2.569,724,3.629,732,3.528,733,3.528,735,2.03,736,3.032,737,1.591,738,2.03,739,3.032,741,2.03,742,2.657,773,3.032,828,2.03,845,2.03,856,2.03,857,4.781,858,4.31,859,3.601,860,4.31,861,4.31,862,4.31,863,4.781,864,2.411,865,5.367,866,2.411,867,2.411,868,2.411,869,2.411,870,2.411,871,4.31,872,2.411,873,3.601,874,3.601,875,2.411,876,2.411,877,3.601,878,3.601,879,3.601,880,3.601,881,2.411,882,2.411,883,2.411,884,2.411,885,2.411,886,2.411,887,4.781,888,3.601,889,2.411,890,2.411,891,2.411,892,2.411,893,3.629,894,3.601,895,2.411,896,2.411,897,2.411,898,2.411,899,2.411,900,2.411,901,2.411,902,2.411]],["title/components/PageNotFoundComponent.html",[0,0.259,72,0.792]],["body/components/PageNotFoundComponent.html",[0,0.455,1,0.867,2,1.461,3,0.263,4,0.228,5,1.155,6,1.155,7,1.155,8,1.155,9,0.228,11,0.806,15,1.075,16,2.265,17,1.827,18,1.569,20,1.569,25,1.154,28,0.693,31,0.028,32,0.804,41,0.336,42,0.299,44,0.263,45,0.336,48,0.806,49,1.569,50,1.569,51,1.155,52,1.912,53,1.155,54,1.155,55,0.806,56,1.155,57,0.867,58,1.001,59,1.569,60,0.867,61,1.155,62,0.867,63,1.155,64,0.806,65,1.001,66,0.806,67,1.155,68,0.806,69,1.155,70,0.867,71,1.155,72,1.333,73,1.963,74,1.155,75,0.806,76,1.155,77,0.867,78,1.075,79,1.155,80,1.155,81,0.014,82,0.019,83,0.014,133,3.012,144,4.101,305,3.324,355,1.835,357,3.012,371,2.478,372,2.478,373,2.478,571,2.493,573,2.009,574,2.217,582,2.217,583,3.669,584,2.217,585,2.478,721,3.841,762,2.828,765,3.841,766,2.828,767,2.828,770,2.828,778,2.828,779,2.828,903,3.841,904,2.828,905,5.558,906,5.181,907,4.562,908,3.359,909,4.562,910,4.562,911,4.562,912,4.562,913,4.562,914,4.562,915,3.841,916,3.359,917,3.359,918,3.359]],["title/components/SignupComponent.html",[0,0.259,75,0.792]],["body/components/SignupComponent.html",[0,0.295,1,0.501,2,0.976,3,0.152,4,0.132,5,0.668,6,0.668,7,0.668,8,0.668,9,0.132,13,0.846,14,1.393,15,0.622,16,2.055,17,1.658,18,1.049,20,1.049,22,0.315,23,0.679,24,1.579,25,0.679,27,2.05,28,1.233,30,0.432,31,0.029,32,0.664,33,0.752,34,0.432,37,1.214,39,1.097,40,1.123,41,0.493,42,0.173,44,0.152,45,0.194,48,0.466,49,1.049,50,1.049,51,0.668,52,1.468,53,0.668,54,0.668,55,0.466,56,0.668,57,0.501,58,1.383,59,1.049,60,0.501,61,0.668,62,0.501,63,0.668,64,0.466,65,0.579,66,0.466,67,0.668,68,0.466,69,0.668,70,0.501,71,0.668,72,0.466,73,0.579,74,0.668,75,1.024,76,0.668,77,0.501,78,0.622,79,0.668,80,0.668,81,0.008,82,0.012,83,0.008,123,2.332,156,0.976,157,3.4,158,3.779,171,2.568,180,0.622,181,1.281,183,2.029,186,2.076,221,0.975,226,2.568,239,1.161,247,1.905,280,1.296,281,1.206,286,1.616,322,2.253,330,1.413,558,3.896,567,3.634,603,1.891,607,2.774,608,2.253,609,2.143,615,1.531,616,1.666,625,2.329,629,1.161,630,1.824,631,1.161,632,1.824,642,1.161,700,3.634,710,2.25,732,4.143,733,4.143,737,1.281,783,3.171,784,3.906,786,4.146,787,3.594,788,4.146,789,2.568,792,4.146,793,4.146,794,3.594,797,2.568,798,2.568,800,2.568,805,3.171,807,1.634,810,1.634,811,2.568,812,1.634,815,3.171,816,1.634,818,1.634,819,1.634,820,1.634,822,1.634,823,1.634,824,3.594,825,3.594,919,1.634,920,3.767,921,3.05,922,4.639,923,3.767,924,4.925,925,1.941,926,4.925,927,3.05,928,1.941,929,4.269,930,3.05,931,2.568,932,1.941,933,1.941,934,1.941,935,1.941,936,1.941,937,3.05,938,3.05,939,4.269,940,3.05,941,1.941,942,1.941,943,1.941,944,1.941,945,1.941,946,1.941,947,3.05,948,3.05,949,2.568,950,1.432,951,1.941,952,1.941,953,1.941,954,1.941,955,3.05,956,1.634,957,1.941,958,1.941,959,1.941,960,1.941,961,1.941,962,1.941,963,1.941,964,3.05]],["title/interfaces/Task.html",[147,1.804,434,1.416]],["body/interfaces/Task.html",[3,0.374,4,0.324,9,0.324,11,1.553,22,0.773,31,0.027,33,1.077,44,0.374,81,0.02,82,0.023,83,0.02,147,2.606,149,3.519,155,4.016,156,1.828,159,2.683,430,3.18,434,2.621,435,3.46,965,4.016]],["title/components/TodoComponent.html",[0,0.259,77,0.852]],["body/components/TodoComponent.html",[0,0.452,1,0.594,2,1.113,3,0.18,4,0.157,5,0.791,6,0.791,7,0.791,8,0.791,9,0.157,11,1.203,13,0.965,14,1.55,15,0.737,16,2.128,17,1.717,18,1.196,20,1.196,22,0.373,23,0.774,24,1.727,25,0.774,28,1.25,30,0.933,31,0.029,32,0.884,33,0.929,34,0.933,39,1.174,40,1.572,41,0.502,42,0.205,44,0.18,45,0.23,48,0.552,49,1.196,50,1.196,51,0.791,52,1.606,53,0.791,54,0.791,55,0.552,56,0.791,57,0.594,58,1.495,59,1.196,60,0.594,61,0.791,62,0.594,63,0.791,64,0.552,65,1.249,66,0.552,67,0.791,68,0.552,69,0.791,70,0.594,71,0.791,72,0.552,73,0.686,74,0.791,75,0.552,76,0.791,77,1.205,78,1.883,79,0.791,80,0.791,81,0.009,82,0.014,83,0.009,123,1.257,156,1.113,159,2.41,180,0.737,183,2.085,247,2.025,280,1.196,281,1.113,286,2.151,353,1.155,354,1.257,367,1.519,368,1.376,402,2.443,424,1.937,430,2.345,432,3.083,433,2.079,434,2.418,435,1.899,438,2.079,443,3.083,453,2.881,456,2.793,481,1.376,500,2.295,501,2.295,548,2.927,549,1.376,560,1.376,603,2.104,607,2.999,608,2.506,609,2.345,610,2.565,615,1.745,616,1.899,618,2.565,625,2.517,629,1.376,630,2.079,631,1.376,632,1.376,635,1.698,638,1.698,642,1.376,643,3.083,660,1.937,769,1.937,966,1.937,967,4.19,968,3.477,969,4.19,970,4.19,971,4.67,972,3.477,973,4.67,974,3.477,975,2.301,976,2.301,977,2.301,978,2.301,979,3.477,980,2.301,981,2.301,982,3.477,983,2.301,984,2.301,985,2.301,986,2.301,987,2.301,988,3.477,989,2.301,990,2.301,991,3.477,992,2.301,993,2.301,994,2.301]],["title/injectables/UIService.html",[179,1.314,247,1.221]],["body/injectables/UIService.html",[3,0.302,4,0.262,9,0.262,11,0.924,12,2.304,22,0.625,23,1.113,25,0.858,28,1.145,30,1.113,31,0.028,32,0.881,33,0.881,34,1.113,37,2.336,39,0.858,40,1.148,41,0.555,42,0.343,44,0.302,45,0.385,46,1.652,81,0.016,82,0.02,83,0.016,147,2.73,156,1.6,159,2.207,179,1.989,180,1.233,182,2.543,229,2.543,247,1.848,276,4.67,279,4.942,280,1.325,281,1.233,282,2.509,283,2.842,305,2.988,353,2.509,571,3.207,852,3.243,853,4.67,995,3.243,996,4.997,997,5.547,998,5.547,999,3.852,1000,5.869,1001,4.997,1002,4.997,1003,3.852,1004,5.869,1005,5.869,1006,3.852,1007,4.997,1008,4.997,1009,4.207,1010,4.997,1011,4.997,1012,3.852,1013,3.852]],["title/pipes/UppercaseFirstLetterPipe.html",[383,1.974,496,1.974]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.357,4,0.31,9,0.31,11,1.094,13,1.265,15,1.46,23,1.015,28,0.941,30,1.015,31,0.028,32,1.056,33,0.803,34,1.015,39,1.015,41,0.456,42,0.406,44,0.357,45,0.456,81,0.019,82,0.023,83,0.019,186,1.686,281,1.46,383,3.323,395,4.678,396,4.603,496,3.323,584,3.956,643,3.668,1014,4.559,1015,4.678,1016,3.839,1017,5.556,1018,5.556,1019,4.559,1020,5.556,1021,4.559,1022,4.559]],["title/coverage.html",[1023,3.797]],["body/coverage.html",[0,0.515,1,0.922,9,0.243,10,3.007,27,1.421,31,0.028,33,0.629,55,0.857,57,0.922,60,0.922,62,0.922,64,0.857,66,0.857,68,0.857,70,0.922,72,0.857,75,0.857,77,0.922,81,0.015,82,0.019,83,0.015,99,2.136,100,2.136,130,2.357,133,2.357,147,2.598,148,2.357,150,2.635,151,3.007,160,2.357,162,3.007,179,2.127,188,2.843,190,3.007,230,3.508,247,1.321,282,1.793,292,3.139,296,3.139,330,2.203,348,3.007,383,2.136,392,2.635,394,2.357,396,2.635,402,1.655,403,3.508,434,1.532,496,2.136,539,3.007,540,3.508,581,3.762,583,3.762,602,3.007,646,3.007,663,3.007,696,3.007,720,3.007,758,3.007,780,3.007,856,3.007,903,3.007,904,3.007,919,3.007,950,2.635,965,3.007,966,3.007,995,3.007,1015,3.007,1016,3.007,1023,3.007,1024,3.571,1025,3.571,1026,3.571,1027,5.699,1028,5.699,1029,4.755,1030,4.755,1031,3.571,1032,3.571,1033,5.699,1034,5.699,1035,3.571,1036,3.571,1037,3.007,1038,3.007,1039,3.571,1040,4.755,1041,3.571,1042,3.571,1043,3.571,1044,3.571,1045,3.571,1046,3.571,1047,3.571,1048,3.571,1049,3.571,1050,3.571,1051,3.571,1052,3.571,1053,3.571,1054,3.571,1055,3.571,1056,3.571,1057,3.571,1058,3.007,1059,4.755,1060,3.007,1061,3.571,1062,3.571]],["title/dependencies.html",[87,1.994,1063,2.755]],["body/dependencies.html",[31,0.028,42,0.418,81,0.019,82,0.023,83,0.019,87,2.358,107,4.763,108,4.174,128,2.176,180,1.504,219,3.101,221,2.358,541,3.955,1064,4.697,1065,6.763,1066,4.697,1067,4.697,1068,4.697,1069,4.697,1070,4.697,1071,4.697,1072,4.697,1073,4.697,1074,4.697,1075,4.697,1076,4.697,1077,4.697,1078,4.697]],["title/miscellaneous/functions.html",[1079,1.819,1080,3.344]],["body/miscellaneous/functions.html",[22,0.792,30,1.087,31,0.025,32,0.86,34,1.087,81,0.02,82,0.024,83,0.02,144,3.602,169,3.602,186,1.805,198,3.602,305,3.462,931,4.11,949,4.11,950,4.272,956,4.874,1037,4.11,1038,4.874,1079,3.223,1080,4.11,1081,4.882,1082,4.882,1083,5.789,1084,4.882,1085,4.882,1086,4.882,1087,4.882,1088,5.789,1089,4.882,1090,4.882,1091,4.882]],["title/index.html",[22,0.447,1092,2.755,1093,2.755]],["body/index.html",[0,0.455,4,0.289,17,1.178,31,0.022,32,0.748,38,3.576,81,0.017,82,0.022,83,0.017,103,1.968,169,3.134,282,2.132,448,3.924,742,3.134,746,4.478,915,3.576,1009,3.576,1094,4.247,1095,5.806,1096,5.806,1097,4.247,1098,4.247,1099,4.247,1100,6.266,1101,6.486,1102,4.247,1103,4.247,1104,4.247,1105,4.247,1106,4.247,1107,4.247,1108,4.247,1109,4.247,1110,5.806,1111,5.806,1112,4.247,1113,6.266,1114,4.247,1115,4.247,1116,4.247,1117,4.247,1118,4.247,1119,4.247,1120,3.576,1121,5.318,1122,5.318,1123,6.085,1124,4.247,1125,5.318,1126,5.318,1127,4.247,1128,6.085,1129,4.247,1130,4.247,1131,4.247,1132,5.806,1133,4.247,1134,4.247]],["title/modules.html",[86,1.668]],["body/modules.html",[31,0.024,81,0.02,82,0.024,83,0.02,85,3.206,86,1.796,97,2.653,98,2.904,108,4.701,211,3.206,215,2.904,216,2.438,379,3.206,384,2.904,1135,6.371,1136,6.371,1137,6.721,1138,6.371,1139,6.371]],["title/overview.html",[1140,3.797]],["body/overview.html",[1,1.597,2,1.114,31,0.028,48,0.834,55,1.265,57,1.361,60,1.361,62,1.361,64,1.265,66,1.265,68,1.265,70,1.597,72,1.265,75,1.265,77,1.361,81,0.014,82,0.019,83,0.014,84,1.114,85,4.345,86,1.286,87,1.746,88,2.08,89,2.08,90,2.08,91,1.492,92,2.928,93,2.928,94,2.928,95,2.928,96,2.928,97,3.08,98,3.957,99,3.154,100,3.154,101,2.793,102,2.08,103,1.611,149,2.566,160,2.296,211,4.25,212,2.928,213,2.928,214,2.928,215,3.154,216,2.953,229,2.296,330,1.611,379,4.461,380,2.928,381,2.928,382,2.928,383,3.154,384,3.154,496,2.08,532,2.928,533,2.928,535,2.928,893,3.933,1140,2.928,1141,3.478,1142,3.478,1143,3.478,1144,3.478]],["title/routes.html",[126,2.697]],["body/routes.html",[31,0.025,81,0.022,82,0.025,83,0.022,126,3.205]],["title/miscellaneous/variables.html",[1079,1.819,1145,3.344]],["body/miscellaneous/variables.html",[22,0.752,31,0.028,33,0.989,37,1.846,81,0.019,82,0.023,83,0.019,123,2.534,230,3.423,280,2.159,281,2.009,286,1.99,292,4.142,294,4.143,295,4.143,296,4.142,297,4.143,403,3.423,1058,3.906,1060,3.906,1079,3.062,1120,4.727,1145,3.906,1146,4.639,1147,4.639,1148,4.639,1149,4.639,1150,5.615,1151,4.639,1152,4.639]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.6",{"_index":579,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["0.8",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":893,"title":{},"body":{"components/NavigationComponent.html":{},"overview.html":{}}}],["1.6",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.9.0",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{}}}],["100",{"_index":581,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["100vw",{"_index":575,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["1035px",{"_index":374,"title":{},"body":{"components/BoardComponent.html":{}}}],["11/17",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1142,"title":{},"body":{"overview.html":{}}}],["126",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["12px",{"_index":597,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["18/26",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":598,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["2",{"_index":1144,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":590,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["200px",{"_index":889,"title":{},"body":{"components/NavigationComponent.html":{}}}],["20px",{"_index":375,"title":{},"body":{"components/BoardComponent.html":{}}}],["25",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{}}}],["25px",{"_index":589,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["3",{"_index":1143,"title":{},"body":{"overview.html":{}}}],["3/10",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["3000",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":586,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["33",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":905,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40px",{"_index":360,"title":{},"body":{"components/BoardComponent.html":{}}}],["41",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":918,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4px",{"_index":593,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["5",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{}}}],["5/12",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":583,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["5000",{"_index":718,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["53",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["56px",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5px",{"_index":370,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":939,"title":{},"body":{"components/SignupComponent.html":{}}}],["6.5.2",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":766,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["66",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["7.3.4",{"_index":1098,"title":{},"body":{"index.html":{}}}],["7/13",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":1141,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":358,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["8px",{"_index":596,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["90",{"_index":356,"title":{},"body":{"components/BoardComponent.html":{}}}],["99",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{}}}],["a.active",{"_index":901,"title":{},"body":{"components/NavigationComponent.html":{}}}],["absolute",{"_index":770,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["access",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["action",{"_index":1004,"title":{},"body":{"injectables/UIService.html":{}}}],["activatedroute",{"_index":667,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["add",{"_index":432,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["adddoingtask",{"_index":410,"title":{},"body":{"injectables/BoardService.html":{}}}],["adddoingtask(id",{"_index":429,"title":{},"body":{"injectables/BoardService.html":{}}}],["adddonetask",{"_index":411,"title":{},"body":{"injectables/BoardService.html":{}}}],["adddonetask(id",{"_index":436,"title":{},"body":{"injectables/BoardService.html":{}}}],["addtodotask",{"_index":412,"title":{},"body":{"injectables/BoardService.html":{}}}],["addtodotask(title",{"_index":439,"title":{},"body":{"injectables/BoardService.html":{}}}],["again",{"_index":712,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["align",{"_index":367,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TodoComponent.html":{}}}],["already",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1095,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":830,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":828,"title":{},"body":{"modules/MaterialModule.html":{},"components/NavigationComponent.html":{}}}],["angular/common",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":833,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":835,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":837,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":839,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":841,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":843,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":849,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":845,"title":{},"body":{"modules/MaterialModule.html":{},"components/NavigationComponent.html":{}}}],["angular/material/snack",{"_index":852,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":847,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":855,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"index.html":{}}}],["app.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":85,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":97,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":365,"title":{},"body":{"components/BoardComponent.html":{}}}],["artifacts",{"_index":1114,"title":{},"body":{"index.html":{}}}],["auth",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth.guard",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["authdata",{"_index":148,"title":{"interfaces/AuthData.html":{}},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authdata).subscribe",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":154,"title":{},"body":{"interfaces/AuthData.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/NavigationComponent.html":{}}}],["authguard",{"_index":130,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":99,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":724,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["authmodule",{"_index":211,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":205,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":215,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussubscription",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":203,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{}}}],["autoauthuser",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["available",{"_index":1139,"title":{},"body":{"modules.html":{}}}],["back",{"_index":624,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{}}}],["backdrop",{"_index":570,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["backend_url",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend_url}/doing/${id",{"_index":516,"title":{},"body":{"injectables/BoardService.html":{}}}],["backend_url}/done/${id",{"_index":525,"title":{},"body":{"injectables/BoardService.html":{}}}],["backend_url}/todo/${id",{"_index":494,"title":{},"body":{"injectables/BoardService.html":{}}}],["backend_url}login",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["background",{"_index":576,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["bar",{"_index":853,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":897,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bearer",{"_index":209,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["behaviorsubject",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(this.doingtasks",{"_index":474,"title":{},"body":{"injectables/BoardService.html":{}}}],["behaviorsubject(this.donetasks",{"_index":477,"title":{},"body":{"injectables/BoardService.html":{}}}],["behaviorsubject(this.todotasks",{"_index":479,"title":{},"body":{"injectables/BoardService.html":{}}}],["behaviorsubject(true",{"_index":1011,"title":{},"body":{"injectables/UIService.html":{}}}],["board",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{}}}],["board'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["board.component",{"_index":387,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["board.component.css",{"_index":349,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":350,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.service",{"_index":560,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["board__item",{"_index":369,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":55,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardmodule",{"_index":379,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["boardroutingmodule",{"_index":384,"title":{"modules/BoardRoutingModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["boardservice",{"_index":402,"title":{"injectables/BoardService.html":{}},"body":{"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{}}}],["boolean",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["border",{"_index":591,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["bottom",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["box",{"_index":594,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["breakpointobserver",{"_index":865,"title":{},"body":{"components/NavigationComponent.html":{}}}],["breakpoints",{"_index":884,"title":{},"body":{"components/NavigationComponent.html":{}}}],["browse",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1113,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["calc(100",{"_index":765,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["call",{"_index":800,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["cancel",{"_index":569,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["canload",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror",{"_index":702,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":706,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":368,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/TodoComponent.html":{}}}],["change",{"_index":1009,"title":{},"body":{"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["characters",{"_index":940,"title":{},"body":{"components/SignupComponent.html":{}}}],["check",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["class",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["clear",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1096,"title":{},"body":{"index.html":{}}}],["close",{"_index":548,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TodoComponent.html":{}}}],["closecreate",{"_index":971,"title":{},"body":{"components/TodoComponent.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":380,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":381,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":382,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{}}}],["code",{"_index":1108,"title":{},"body":{"index.html":{}}}],["color",{"_index":577,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["column",{"_index":600,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["commonmodule",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"overview.html":{}}}],["confirm",{"_index":929,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpassword",{"_index":955,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpassworderrorhandler",{"_index":924,"title":{},"body":{"components/SignupComponent.html":{}}}],["const",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(boardservice",{"_index":549,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["constructor(breakpointobserver",{"_index":864,"title":{},"body":{"components/NavigationComponent.html":{}}}],["constructor(formbuilder",{"_index":925,"title":{},"body":{"components/SignupComponent.html":{}}}],["constructor(http",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UIService.html":{}}}],["constructor(router",{"_index":726,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":999,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(uiservice",{"_index":697,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":582,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["content",{"_index":363,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["controlname",{"_index":1091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":98,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cover",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1023,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["create__actions",{"_index":601,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["createtaskcomponent",{"_index":57,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createuser",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(email",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":542,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creator",{"_index":502,"title":{},"body":{"injectables/BoardService.html":{}}}],["custom",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":153,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["data.model",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.model.ts",{"_index":151,"title":{},"body":{"interfaces/AuthData.html":{},"coverage.html":{}}}],["date",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationdate",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["decoration",{"_index":899,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":872,"title":{},"body":{"components/NavigationComponent.html":{}}}],["default",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["defining",{"_index":152,"title":{},"body":{"interfaces/AuthData.html":{}}}],["delete",{"_index":443,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["deleted",{"_index":911,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletedoingtask",{"_index":413,"title":{},"body":{"injectables/BoardService.html":{}}}],["deletedoingtask(id",{"_index":441,"title":{},"body":{"injectables/BoardService.html":{}}}],["deletedonetask",{"_index":414,"title":{},"body":{"injectables/BoardService.html":{}}}],["deletedonetask(id",{"_index":444,"title":{},"body":{"injectables/BoardService.html":{}}}],["deletetodotask",{"_index":415,"title":{},"body":{"injectables/BoardService.html":{}}}],["deletetodotask(id",{"_index":446,"title":{},"body":{"injectables/BoardService.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["dev",{"_index":1103,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["development",{"_index":1099,"title":{},"body":{"index.html":{}}}],["direction",{"_index":599,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1112,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1117,"title":{},"body":{"index.html":{}}}],["display",{"_index":353,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{}}}],["dist",{"_index":1116,"title":{},"body":{"index.html":{}}}],["divider",{"_index":377,"title":{},"body":{"components/BoardComponent.html":{}}}],["documentation",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":433,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["doing'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["doing.component.css",{"_index":604,"title":{},"body":{"components/DoingComponent.html":{}}}],["doing.component.html",{"_index":605,"title":{},"body":{"components/DoingComponent.html":{}}}],["doing/doing.component",{"_index":389,"title":{},"body":{"modules/BoardModule.html":{}}}],["doing/edit/:doingid",{"_index":400,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["doingcomponent",{"_index":60,"title":{"components/DoingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doingsubscription",{"_index":606,"title":{},"body":{"components/DoingComponent.html":{}}}],["doingtasks",{"_index":404,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{}}}],["doingupdate",{"_index":405,"title":{},"body":{"injectables/BoardService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["done",{"_index":438,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["done'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["done.component.css",{"_index":647,"title":{},"body":{"components/DoneComponent.html":{}}}],["done.component.html",{"_index":648,"title":{},"body":{"components/DoneComponent.html":{}}}],["done/done.component",{"_index":390,"title":{},"body":{"modules/BoardModule.html":{}}}],["done/edit/:doneid",{"_index":401,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["done_all",{"_index":645,"title":{},"body":{"components/DoingComponent.html":{}}}],["donecomponent",{"_index":62,"title":{"components/DoneComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["donesubscription",{"_index":649,"title":{},"body":{"components/DoneComponent.html":{}}}],["donetasks",{"_index":406,"title":{},"body":{"injectables/BoardService.html":{},"components/DoneComponent.html":{}}}],["doneupdate",{"_index":407,"title":{},"body":{"injectables/BoardService.html":{}}}],["dragdropmodule",{"_index":829,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":860,"title":{},"body":{"components/NavigationComponent.html":{}}}],["drop",{"_index":831,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":541,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1129,"title":{},"body":{"index.html":{}}}],["easy",{"_index":948,"title":{},"body":{"components/SignupComponent.html":{}}}],["edit",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["edit__actions",{"_index":695,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["edited",{"_index":672,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["editing",{"_index":664,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["edittaskcomponent",{"_index":64,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["email",{"_index":157,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["emailerrorhandler",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["empty",{"_index":568,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["end",{"_index":1128,"title":{},"body":{"index.html":{}}}],["enter",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["environment",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["error",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":716,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":100,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":707,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errors",{"_index":700,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["eventemitter",{"_index":551,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["execute",{"_index":1125,"title":{},"body":{"index.html":{}}}],["exist",{"_index":910,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expirationdate",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["fails",{"_index":1090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"miscellaneous/variables.html":{}}}],["fdfdfd",{"_index":587,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["febf6e",{"_index":902,"title":{},"body":{"components/NavigationComponent.html":{}}}],["fetch",{"_index":669,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["fff",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["field",{"_index":567,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/SignupComponent.html":{}}}],["fields",{"_index":949,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["files",{"_index":1107,"title":{},"body":{"index.html":{}}}],["finished",{"_index":460,"title":{},"body":{"injectables/BoardService.html":{}}}],["first",{"_index":396,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["fixed",{"_index":572,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["flag",{"_index":1119,"title":{},"body":{"index.html":{}}}],["flex",{"_index":354,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TodoComponent.html":{}}}],["font",{"_index":917,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["form",{"_index":558,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.invalid",{"_index":561,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["form.password.value?.length",{"_index":964,"title":{},"body":{"components/SignupComponent.html":{}}}],["form.resetform",{"_index":564,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["form.value.description",{"_index":563,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["form.value.title",{"_index":692,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["formbuilder",{"_index":926,"title":{},"body":{"components/SignupComponent.html":{}}}],["formcontrol",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol(null",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":386,"title":{},"body":{"modules/BoardModule.html":{}}}],["found",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{}}}],["found'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["found.component",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.css",{"_index":906,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":907,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":904,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":908,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1080,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1131,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1110,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1094,"title":{},"body":{"index.html":{}}}],["get(`${backend_url}/doing",{"_index":517,"title":{},"body":{"injectables/BoardService.html":{}}}],["get(`${backend_url}/done",{"_index":526,"title":{},"body":{"injectables/BoardService.html":{}}}],["get(`${backend_url}/todo",{"_index":495,"title":{},"body":{"injectables/BoardService.html":{}}}],["getauthdata",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["getdoingtask",{"_index":416,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdoingtask(id",{"_index":449,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdoingtasks",{"_index":417,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdoingupdatelistener",{"_index":418,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{}}}],["getdonetask",{"_index":419,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdonetask(id",{"_index":457,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdonetasks",{"_index":420,"title":{},"body":{"injectables/BoardService.html":{}}}],["getdoneupdatelistener",{"_index":421,"title":{},"body":{"injectables/BoardService.html":{},"components/DoneComponent.html":{}}}],["getform",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["getter",{"_index":947,"title":{},"body":{"components/SignupComponent.html":{}}}],["getting",{"_index":1092,"title":{"index.html":{}},"body":{}}],["gettodotask",{"_index":422,"title":{},"body":{"injectables/BoardService.html":{}}}],["gettodotask(id",{"_index":462,"title":{},"body":{"injectables/BoardService.html":{}}}],["gettodotasks",{"_index":423,"title":{},"body":{"injectables/BoardService.html":{}}}],["gettodoupdatelistener",{"_index":424,"title":{},"body":{"injectables/BoardService.html":{},"components/TodoComponent.html":{}}}],["gettoken",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":915,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["gradient",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1138,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":160,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hammerjs",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["header",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":207,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":916,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":357,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["help",{"_index":1132,"title":{},"body":{"index.html":{}}}],["helps",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideconfirmpassword",{"_index":922,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidepassword",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["home.component.css",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":538,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":768,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":66,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["http",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["http://localhost:3000/api",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1105,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["httpclientmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":701,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["id",{"_index":435,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{}}}],["identifier",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import('./auth/auth.module').then(m",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./board/board.module').then(m",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{}}}],["inconvinience",{"_index":715,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["inform",{"_index":1008,"title":{},"body":{"injectables/UIService.html":{}}}],["injectable",{"_index":179,"title":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UIService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["injectables",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UIService.html":{},"overview.html":{}}}],["inline",{"_index":994,"title":{},"body":{"components/TodoComponent.html":{}}}],["intercept",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":188,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":147,"title":{"interfaces/AuthData.html":{},"interfaces/Task.html":{}},"body":{"interfaces/AuthData.html":{},"interfaces/Task.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["interfaces",{"_index":149,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/Task.html":{},"overview.html":{}}}],["isauth",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["isauthenticated",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishandset",{"_index":861,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isloading",{"_index":607,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["isopen",{"_index":969,"title":{},"body":{"components/TodoComponent.html":{}}}],["isopened",{"_index":862,"title":{},"body":{"components/NavigationComponent.html":{}}}],["item",{"_index":895,"title":{},"body":{"components/NavigationComponent.html":{}}}],["items",{"_index":769,"title":{},"body":{"components/HomeComponent.html":{},"components/TodoComponent.html":{}}}],["js",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":362,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["karma",{"_index":1127,"title":{},"body":{"index.html":{}}}],["keep",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["later",{"_index":713,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["layoutmodule",{"_index":827,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":574,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"overview.html":{}}}],["letter",{"_index":1017,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":397,"title":{},"body":{"modules/BoardModule.html":{}}}],["letter.pipe.ts",{"_index":1016,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":1019,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{}}}],["linear",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":456,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/NavigationComponent.html":{},"components/TodoComponent.html":{}}}],["listen",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["loadchildren",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":997,"title":{},"body":{"injectables/UIService.html":{}}}],["loadingsubscription",{"_index":608,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["local",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["logged",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":227,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["login(email",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":68,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":909,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":913,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.boardmodule",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":894,"title":{},"body":{"components/NavigationComponent.html":{}}}],["map",{"_index":482,"title":{},"body":{"injectables/BoardService.html":{},"components/NavigationComponent.html":{}}}],["map(taskdata",{"_index":497,"title":{},"body":{"injectables/BoardService.html":{}}}],["margin",{"_index":359,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["mat",{"_index":376,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{}}}],["matbuttonmodule",{"_index":832,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":931,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["match.validator",{"_index":951,"title":{},"body":{"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdividermodule",{"_index":834,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["materialmodule",{"_index":216,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":836,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":838,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":840,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":842,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":848,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":871,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matsidenavmodule",{"_index":844,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":1000,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":851,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":1005,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":854,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":373,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["media",{"_index":371,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["menu",{"_index":887,"title":{},"body":{"components/NavigationComponent.html":{}}}],["message",{"_index":1010,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["minimum",{"_index":938,"title":{},"body":{"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":1079,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":554,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["model",{"_index":155,"title":{},"body":{"interfaces/AuthData.html":{},"interfaces/Task.html":{}}}],["module",{"_index":84,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":709,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1133,"title":{},"body":{"index.html":{}}}],["multi",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":950,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":957,"title":{},"body":{"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":900,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":1104,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":857,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["navigation.component.css",{"_index":858,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":859,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationcomponent",{"_index":70,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":914,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["never",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"injectables/UIService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":210,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":705,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1101,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":556,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["ngmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{}}}],["ngondestroy",{"_index":609,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["none",{"_index":378,"title":{},"body":{"components/BoardComponent.html":{},"components/NavigationComponent.html":{}}}],["now",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettime",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["number",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["object",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavigationComponent.html":{}}}],["observe(breakpoints.handset",{"_index":878,"title":{},"body":{"components/NavigationComponent.html":{}}}],["oldtaskindex",{"_index":507,"title":{},"body":{"injectables/BoardService.html":{}}}],["onclose",{"_index":545,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["ondelete",{"_index":610,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["ondelete(id",{"_index":618,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["ondestroy",{"_index":603,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["onlogout",{"_index":863,"title":{},"body":{"components/NavigationComponent.html":{}}}],["onpushtodoing",{"_index":972,"title":{},"body":{"components/TodoComponent.html":{}}}],["onpushtodoing(id",{"_index":979,"title":{},"body":{"components/TodoComponent.html":{}}}],["onpushtodone",{"_index":611,"title":{},"body":{"components/DoingComponent.html":{}}}],["onpushtodone(id",{"_index":620,"title":{},"body":{"components/DoingComponent.html":{}}}],["onsave",{"_index":546,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["onsave(form",{"_index":555,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["onsignup",{"_index":725,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["onundo",{"_index":612,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{}}}],["onundo(id",{"_index":622,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{}}}],["open",{"_index":982,"title":{},"body":{"components/TodoComponent.html":{}}}],["opencreate",{"_index":973,"title":{},"body":{"components/TodoComponent.html":{}}}],["optional",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/NavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":559,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["outputs",{"_index":547,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["overview",{"_index":1140,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1063,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":588,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["page",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["pagenotfoundcomponent",{"_index":72,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":675,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.get('doingid",{"_index":687,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.get('doneid",{"_index":689,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.get('todoid",{"_index":680,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.has('doingid",{"_index":686,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.has('todoid",{"_index":677,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["password",{"_index":158,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["passworderrorhandler",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["passwords",{"_index":930,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["permissions",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":496,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"injectables/BoardService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map(result",{"_index":879,"title":{},"body":{"components/NavigationComponent.html":{}}}],["pipes",{"_index":1014,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipetransform",{"_index":1020,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["please",{"_index":710,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["position",{"_index":571,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/UIService.html":{}}}],["post",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["post(`${backend_url}/doing",{"_index":513,"title":{},"body":{"injectables/BoardService.html":{}}}],["post(`${backend_url}/done",{"_index":522,"title":{},"body":{"injectables/BoardService.html":{}}}],["post(`${backend_url}/todo",{"_index":487,"title":{},"body":{"injectables/BoardService.html":{}}}],["primary",{"_index":891,"title":{},"body":{"components/NavigationComponent.html":{}}}],["private",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["probably",{"_index":912,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1118,"title":{},"body":{"index.html":{}}}],["production",{"_index":1120,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":454,"title":{},"body":{"injectables/BoardService.html":{},"components/HomeComponent.html":{}}}],["project",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":156,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{}}}],["protected",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":1130,"title":{},"body":{"index.html":{}}}],["provide",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UIService.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["put(`${backend_url}/doing/${id",{"_index":519,"title":{},"body":{"injectables/BoardService.html":{}}}],["put(`${backend_url}/done/${id",{"_index":529,"title":{},"body":{"injectables/BoardService.html":{}}}],["put(`${backend_url}/todo/${id",{"_index":505,"title":{},"body":{"injectables/BoardService.html":{}}}],["radius",{"_index":592,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["reactive",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["readme",{"_index":1134,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":731,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":767,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":1106,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":206,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":208,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reset",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["responding",{"_index":708,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["response.expiresin",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.task.id",{"_index":490,"title":{},"body":{"injectables/BoardService.html":{}}}],["response.token",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsedata._id",{"_index":683,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["responsedata.description",{"_index":685,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["responsedata.title",{"_index":684,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["result",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":880,"title":{},"body":{"components/NavigationComponent.html":{}}}],["results",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["rgba(0",{"_index":578,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["rgba(232",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(233",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{}}}],["right",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"injectables/UIService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["route",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditTaskComponent.html":{}}}],["router",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":228,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":126,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["routing.module.ts",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["run",{"_index":1100,"title":{},"body":{"index.html":{}}}],["running",{"_index":1121,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":483,"title":{},"body":{"injectables/BoardService.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{}}}],["save",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["saveauthdata",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1109,"title":{},"body":{"index.html":{}}}],["screen",{"_index":372,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["self",{"_index":896,"title":{},"body":{"components/NavigationComponent.html":{}}}],["serve",{"_index":1102,"title":{},"body":{"index.html":{}}}],["server",{"_index":448,"title":{},"body":{"injectables/BoardService.html":{},"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["service",{"_index":996,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["shadow",{"_index":595,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["shared/error.interceptor",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["short",{"_index":937,"title":{},"body":{"components/SignupComponent.html":{}}}],["showsnackbar",{"_index":998,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":1003,"title":{},"body":{"injectables/UIService.html":{}}}],["sidenav",{"_index":888,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sign",{"_index":732,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["signup",{"_index":226,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["signup.component.css",{"_index":920,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":921,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":75,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":923,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":451,"title":{},"body":{"injectables/BoardService.html":{}}}],["size",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["snack",{"_index":1007,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":1002,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":714,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"injectables/BoardService.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"index.html":{}}}],["space",{"_index":364,"title":{},"body":{"components/BoardComponent.html":{}}}],["spacer",{"_index":898,"title":{},"body":{"components/NavigationComponent.html":{}}}],["spinner",{"_index":850,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../board.service.ts",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":150,"title":{},"body":{"interfaces/AuthData.html":{},"modules/AuthRoutingModule.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:13",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:19",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:113",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:131",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:149",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:158",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:166",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:174",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:23",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:72",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":802,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":803,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":804,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:45",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:57",{"_index":801,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:67",{"_index":799,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:77",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":1037,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":919,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:107",{"_index":933,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:14",{"_index":945,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":942,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":941,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":943,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":944,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:19",{"_index":927,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:30",{"_index":934,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:51",{"_index":946,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:58",{"_index":932,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:70",{"_index":936,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:82",{"_index":928,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:94",{"_index":935,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/board/board",{"_index":398,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["src/app/board/board.component.ts",{"_index":348,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":351,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":352,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.module.ts",{"_index":385,"title":{},"body":{"modules/BoardModule.html":{}}}],["src/app/board/board.service.ts",{"_index":403,"title":{},"body":{"injectables/BoardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/board/board.service.ts:103",{"_index":472,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:119",{"_index":447,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:129",{"_index":431,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:146",{"_index":450,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:155",{"_index":452,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:18",{"_index":478,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:180",{"_index":467,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:19",{"_index":473,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:196",{"_index":442,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:20",{"_index":476,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:206",{"_index":437,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:21",{"_index":480,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:22",{"_index":475,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:223",{"_index":458,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:23",{"_index":428,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:232",{"_index":459,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:257",{"_index":470,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:273",{"_index":445,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:30",{"_index":465,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:37",{"_index":455,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:44",{"_index":461,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:51",{"_index":440,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:68",{"_index":463,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/board.service.ts:77",{"_index":464,"title":{},"body":{"injectables/BoardService.html":{}}}],["src/app/board/doing/doing.component.ts",{"_index":602,"title":{},"body":{"components/DoingComponent.html":{},"coverage.html":{}}}],["src/app/board/doing/doing.component.ts:16",{"_index":627,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:17",{"_index":626,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:18",{"_index":628,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:19",{"_index":613,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:29",{"_index":617,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:44",{"_index":621,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:52",{"_index":623,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:60",{"_index":619,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/doing/doing.component.ts:67",{"_index":614,"title":{},"body":{"components/DoingComponent.html":{}}}],["src/app/board/done/done.component.ts",{"_index":646,"title":{},"body":{"components/DoneComponent.html":{},"coverage.html":{}}}],["src/app/board/done/done.component.ts:13",{"_index":656,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:14",{"_index":655,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:15",{"_index":657,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:16",{"_index":650,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:26",{"_index":652,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:41",{"_index":654,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:49",{"_index":653,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/done/done.component.ts:56",{"_index":651,"title":{},"body":{"components/DoneComponent.html":{}}}],["src/app/board/edit",{"_index":663,"title":{},"body":{"components/EditTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/task.model.ts",{"_index":965,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/board/todo/create",{"_index":539,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/todo/todo.component.ts",{"_index":966,"title":{},"body":{"components/TodoComponent.html":{},"coverage.html":{}}}],["src/app/board/todo/todo.component.ts:16",{"_index":985,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:17",{"_index":984,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:18",{"_index":986,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:19",{"_index":983,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:20",{"_index":974,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:30",{"_index":977,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:45",{"_index":981,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:52",{"_index":975,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:59",{"_index":978,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:66",{"_index":980,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/todo/todo.component.ts:74",{"_index":976,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/board/uppercase",{"_index":1015,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":727,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":729,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:31",{"_index":730,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:38",{"_index":728,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts",{"_index":856,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/navigation.component.ts:14",{"_index":882,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:15",{"_index":876,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:16",{"_index":870,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:17",{"_index":875,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:19",{"_index":881,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:21",{"_index":866,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:31",{"_index":868,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:43",{"_index":869,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:51",{"_index":867,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/page",{"_index":903,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module.ts",{"_index":826,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":696,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:16",{"_index":698,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:22",{"_index":699,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/ui.service",{"_index":629,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":995,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:15",{"_index":1001,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:22",{"_index":1006,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1093,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":874,"title":{},"body":{"components/NavigationComponent.html":{}}}],["status",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/NavigationComponent.html":{}}}],["sticky",{"_index":892,"title":{},"body":{"components/NavigationComponent.html":{}}}],["storage",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1115,"title":{},"body":{"index.html":{}}}],["string",{"_index":159,"title":{},"body":{"interfaces/AuthData.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["subscribe",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe((tasks",{"_index":989,"title":{},"body":{"components/TodoComponent.html":{}}}],["subscribe(authstatus",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe(data",{"_index":527,"title":{},"body":{"injectables/BoardService.html":{}}}],["subscribe(isauth",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["subscribe(response",{"_index":488,"title":{},"body":{"injectables/BoardService.html":{}}}],["subscribe(tasks",{"_index":636,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{}}}],["subscription",{"_index":625,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["subscriptions",{"_index":616,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["successfully",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1135,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1136,"title":{},"body":{"modules.html":{}}}],["t.id",{"_index":509,"title":{},"body":{"injectables/BoardService.html":{}}}],["table",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":665,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task",{"_index":434,"title":{"interfaces/Task.html":{}},"body":{"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["task._id",{"_index":499,"title":{},"body":{"injectables/BoardService.html":{}}}],["task.component",{"_index":393,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["task.component.css",{"_index":543,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.html",{"_index":544,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts",{"_index":540,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:14",{"_index":550,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:16",{"_index":673,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:17",{"_index":674,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:18",{"_index":552,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts:23",{"_index":557,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:29",{"_index":668,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:36",{"_index":553,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:68",{"_index":671,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:99",{"_index":670,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.creator",{"_index":503,"title":{},"body":{"injectables/BoardService.html":{}}}],["task.description",{"_index":501,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["task.id",{"_index":489,"title":{},"body":{"injectables/BoardService.html":{}}}],["task.model",{"_index":481,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["task.title",{"_index":500,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["task/create",{"_index":392,"title":{},"body":{"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task/edit",{"_index":394,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["taskdata.tasks.map(task",{"_index":498,"title":{},"body":{"injectables/BoardService.html":{}}}],["taskid",{"_index":666,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["tasks",{"_index":453,"title":{},"body":{"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/TodoComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["test",{"_index":1124,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1123,"title":{},"body":{"index.html":{}}}],["text",{"_index":366,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authlistenersubscription",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authservice",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.autoauthuser",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.createuser",{"_index":962,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavigationComponent.html":{}}}],["this.authservice.gettoken",{"_index":204,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.login(this.form.email.value",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":885,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(false",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(true",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussubscription",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussubscription.unsubscribe",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.boardservice",{"_index":635,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["this.boardservice.adddoingtask(id",{"_index":660,"title":{},"body":{"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["this.boardservice.adddonetask(id",{"_index":637,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.boardservice.addtodotask(form.value.title",{"_index":562,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.boardservice.addtodotask(title",{"_index":639,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.boardservice.deletedoingtask(id",{"_index":640,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.boardservice.deletedonetask(id",{"_index":661,"title":{},"body":{"components/DoneComponent.html":{}}}],["this.boardservice.deletetodotask(id",{"_index":992,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.boardservice.getdoingtask(this.taskid).subscribe(responsedata",{"_index":688,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.boardservice.getdoingtasks",{"_index":633,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.boardservice.getdonetask(this.taskid).subscribe(responsedata",{"_index":690,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.boardservice.getdonetasks",{"_index":658,"title":{},"body":{"components/DoneComponent.html":{}}}],["this.boardservice.gettodotask(this.taskid).subscribe(responsedata",{"_index":681,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.boardservice.gettodotasks",{"_index":987,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.boardservice.updatedoingtask",{"_index":693,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.boardservice.updatedonetask",{"_index":694,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.boardservice.updatetodotask",{"_index":691,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.breakpointobserver",{"_index":877,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.clearauthdata",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":566,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.doingsubscription",{"_index":634,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.doingsubscription.unsubscribe",{"_index":641,"title":{},"body":{"components/DoingComponent.html":{}}}],["this.doingtasks",{"_index":518,"title":{},"body":{"injectables/BoardService.html":{},"components/DoingComponent.html":{}}}],["this.doingtasks.filter(task",{"_index":521,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.doingtasks.push(task",{"_index":514,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.doingupdate.asobservable",{"_index":485,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.doingupdate.next([...this.doingtasks",{"_index":515,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.donesubscription",{"_index":659,"title":{},"body":{"components/DoneComponent.html":{}}}],["this.donesubscription.unsubscribe",{"_index":662,"title":{},"body":{"components/DoneComponent.html":{}}}],["this.donetasks",{"_index":528,"title":{},"body":{"injectables/BoardService.html":{},"components/DoneComponent.html":{}}}],["this.donetasks.filter(task",{"_index":531,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.donetasks.push(task",{"_index":523,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.doneupdate.asobservable",{"_index":486,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.doneupdate.next([...this.donetasks",{"_index":524,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.drawer.close",{"_index":886,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.form.confirmpassword.haserror('mustmatch",{"_index":961,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.confirmpassword.haserror('required",{"_index":960,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.email.haserror('email",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.haserror('required",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.value",{"_index":963,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('minlength",{"_index":959,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('required",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.password.value",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formbuilder.group",{"_index":953,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.getauthdata",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["this.http.delete(`${backend_url}/doing/${id}`).subscribe",{"_index":520,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.http.delete(`${backend_url}/done/${id}`).subscribe",{"_index":530,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.http.delete(`${backend_url}/todo/${id}`).subscribe",{"_index":511,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.http.get",{"_index":493,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.http.post(`${backend_url}signup",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.isauthenticated",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloading",{"_index":632,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["this.isopen",{"_index":991,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.loadingsubscription",{"_index":630,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["this.loadingsubscription.unsubscribe",{"_index":642,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["this.loginform",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onclose",{"_index":565,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.ondelete(id",{"_index":638,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":676,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/board",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{}}}],["this.router.navigate(['/user/login",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/user/signup",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.saveauthdata(token",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":952,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":958,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":1012,"title":{},"body":{"injectables/UIService.html":{}}}],["this.target",{"_index":678,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.task",{"_index":682,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskid",{"_index":679,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.tasks",{"_index":990,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.todosubscription",{"_index":988,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.todosubscription.unsubscribe",{"_index":993,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.todotasks",{"_index":504,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.todotasks.filter(task",{"_index":512,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.todotasks.push(task",{"_index":491,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.todoupdate.asobservable",{"_index":484,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.todoupdate.next([...this.todotasks",{"_index":492,"title":{},"body":{"injectables/BoardService.html":{}}}],["this.token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(false",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{}}}],["this.uiservice.loadingstatechanged.subscribe",{"_index":631,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["this.uiservice.showsnackbar",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":717,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror",{"_index":703,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":719,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":430,"title":{},"body":{"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{}}}],["todo",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["todo.component.css",{"_index":967,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.component.html",{"_index":968,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo/create",{"_index":391,"title":{},"body":{"modules/BoardModule.html":{}}}],["todo/edit/:todoid",{"_index":399,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["todo/todo.component",{"_index":388,"title":{},"body":{"modules/BoardModule.html":{}}}],["todocomponent",{"_index":77,"title":{"components/TodoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todosubscription",{"_index":970,"title":{},"body":{"components/TodoComponent.html":{}}}],["todotasks",{"_index":408,"title":{},"body":{"injectables/BoardService.html":{}}}],["todoupdate",{"_index":409,"title":{},"body":{"injectables/BoardService.html":{}}}],["token",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentimer",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar.mat",{"_index":890,"title":{},"body":{"components/NavigationComponent.html":{}}}],["top",{"_index":573,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["track",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":584,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":1018,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["translate",{"_index":585,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["true",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":711,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tslib",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthData.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"interfaces/Task.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui.service",{"_index":704,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":247,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["undo",{"_index":644,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{}}}],["unit",{"_index":1122,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":615,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["up",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["update",{"_index":468,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedoingtask",{"_index":425,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedoingtask(id",{"_index":466,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedonetask",{"_index":426,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedonetask(id",{"_index":469,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedtasks",{"_index":506,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedtasks.findindex(t",{"_index":508,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatedtasks[oldtaskindex",{"_index":510,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatetodotask",{"_index":427,"title":{},"body":{"injectables/BoardService.html":{}}}],["updatetodotask(id",{"_index":471,"title":{},"body":{"injectables/BoardService.html":{}}}],["uppercase",{"_index":395,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":643,"title":{},"body":{"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/TodoComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":383,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"miscellaneous/variables.html":{}}}],["url(../../../assets/img/home",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1111,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validate",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validation",{"_index":1089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":956,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(6",{"_index":954,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.required",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BoardService.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1021,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":1022,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{}}}],["variable",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1145,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1097,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1013,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1126,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":883,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild('drawer",{"_index":873,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visibility",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"injectables/BoardService.html":{},"components/CreateTaskComponent.html":{},"components/DoingComponent.html":{},"components/DoneComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TodoComponent.html":{},"injectables/UIService.html":{}}}],["width",{"_index":355,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["wrap",{"_index":361,"title":{},"body":{"components/BoardComponent.html":{}}}],["z",{"_index":580,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{}}}],["zone.js",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n                    Authenticate user automatically\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Authenticate user automatically\n   */\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'board',\n    loadChildren: () => \"import('./board/board.module').then(m => m.BoardModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'user',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthData.html":{"url":"interfaces/AuthData.html","title":"interface - AuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth-data.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for defining the data-authentication model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthData {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigate(['/user/login']);\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoAuthUser\n                        \n                        \n                    \n                \n            \n            \n                \nautoAuthUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:113\n                \n            \n\n\n            \n                \n                    Auto user authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:166\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:174\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     { token: any; expirationDate: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:131\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:149\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.isAuthenticated\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from './auth-data.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\n\n/**\n * API URL\n */\nconst BACKEND_URL = environment.apiUrl + '/user/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(\n    this.isAuthenticated\n  );\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get token.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  createUser(email: string, password: string) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: AuthData = { email, password };\n    this.http.post(`${BACKEND_URL}signup`, authData).subscribe(\n      response => {\n        this.router.navigate(['/user/login']);\n        this.uiService.loadingStateChanged.next(false);\n      },\n      error => {\n        this.uiService.loadingStateChanged.next(false);\n      }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: AuthData = { email, password };\n    this.http\n      .post(\n        `${BACKEND_URL}login`,\n        authData\n      )\n      .subscribe(\n        response => {\n          const token = response.token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuthenticated = true;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar(\n              'Logged in successfully!',\n              null,\n              3000,\n              'bottom'\n            );\n            this.uiService.loadingStateChanged.next(true);\n            this.router.navigate(['/board']);\n          }\n        },\n        error => {\n          this.uiService.loadingStateChanged.next(false);\n        }\n      );\n  }\n\n  /**\n   * Auto user authentication.\n   */\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar(\n      'Logged out successfully!',\n      null,\n      3000,\n      'bottom'\n    );\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Board Component\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                .board {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 40px auto 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.board__item {\n  margin: 0 5px;\n}\n\n@media only screen and (max-width: 1035px) {\n  .board__item {\n    margin: 0 20px;\n  }\n\n  mat-divider {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nDoingComponent\n\nDoingComponent\n\nBoardModule -->\n\nDoingComponent->BoardModule\n\n\n\n\n\nDoneComponent\n\nDoneComponent\n\nBoardModule -->\n\nDoneComponent->BoardModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nBoardModule -->\n\nEditTaskComponent->BoardModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nBoardModule -->\n\nTodoComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            DoingComponent\n                        \n                        \n                            DoneComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            TodoComponent\n                        \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BoardRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { BoardComponent } from './board.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { DoingComponent } from './doing/doing.component';\nimport { DoneComponent } from './done/done.component';\nimport { CreateTaskComponent } from './todo/create-task/create-task.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\n\n@NgModule({\n  declarations: [\n    BoardComponent,\n    TodoComponent,\n    DoingComponent,\n    DoneComponent,\n    CreateTaskComponent,\n    EditTaskComponent,\n    UppercaseFirstLetterPipe\n  ],\n  imports: [CommonModule, FormsModule, BoardRoutingModule, MaterialModule]\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardRoutingModule.html":{"url":"modules/BoardRoutingModule.html","title":"module - BoardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardComponent\n  },\n  { path: 'todo/edit/:todoId', component: EditTaskComponent },\n  { path: 'doing/edit/:doingId', component: EditTaskComponent },\n  { path: 'done/edit/:doneId', component: EditTaskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardService.html":{"url":"injectables/BoardService.html","title":"injectable - BoardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BoardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/board.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doingTasks\n                            \n                            \n                                    Private\n                                doingUpdate\n                            \n                            \n                                    Private\n                                doneTasks\n                            \n                            \n                                    Private\n                                doneUpdate\n                            \n                            \n                                    Private\n                                todoTasks\n                            \n                            \n                                    Private\n                                todoUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDoingTask\n                            \n                            \n                                addDoneTask\n                            \n                            \n                                addTodoTask\n                            \n                            \n                                deleteDoingTask\n                            \n                            \n                                deleteDoneTask\n                            \n                            \n                                deleteTodoTask\n                            \n                            \n                                getDoingTask\n                            \n                            \n                                getDoingTasks\n                            \n                            \n                                getDoingUpdateListener\n                            \n                            \n                                getDoneTask\n                            \n                            \n                                getDoneTasks\n                            \n                            \n                                getDoneUpdateListener\n                            \n                            \n                                getTodoTask\n                            \n                            \n                                getTodoTasks\n                            \n                            \n                                getTodoUpdateListener\n                            \n                            \n                                updateDoingTask\n                            \n                            \n                                updateDoneTask\n                            \n                            \n                                updateTodoTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDoingTask\n                        \n                        \n                    \n                \n            \n            \n                \naddDoingTask(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:129\n                \n            \n\n\n            \n                \n                    Add doing task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDoneTask\n                        \n                        \n                    \n                \n            \n            \n                \naddDoneTask(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:206\n                \n            \n\n\n            \n                \n                    Add done task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTodoTask\n                        \n                        \n                    \n                \n            \n            \n                \naddTodoTask(title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:51\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteDoingTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteDoingTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:196\n                \n            \n\n\n            \n                \n                    Delete doing task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteDoneTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteDoneTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:273\n                \n            \n\n\n            \n                \n                    Delete done task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTodoTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTodoTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:119\n                \n            \n\n\n            \n                \n                    Delete todo task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoingTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoingTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:146\n                \n            \n\n\n            \n                \n                    Get a single doing task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoingTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoingTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:155\n                \n            \n\n\n            \n                \n                    Get all tasks in progress from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoingUpdateListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoingUpdateListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:37\n                \n            \n\n\n            \n                \n                    Listen to changes in doing list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoneTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoneTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:223\n                \n            \n\n\n            \n                \n                    Get a single done task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoneTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoneTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:232\n                \n            \n\n\n            \n                \n                    Get all finished tasks from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDoneUpdateListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetDoneUpdateListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:44\n                \n            \n\n\n            \n                \n                    Listen to changes in done list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:68\n                \n            \n\n\n            \n                \n                    Get a single todo task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:77\n                \n            \n\n\n            \n                \n                    Get todo tasks from server.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTodoUpdateListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetTodoUpdateListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:30\n                \n            \n\n\n            \n                \n                    Listen to changes in todo list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDoingTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDoingTask(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:180\n                \n            \n\n\n            \n                \n                    Update doing task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDoneTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDoneTask(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:257\n                \n            \n\n\n            \n                \n                    Update done task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTodoTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTodoTask(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.service.ts:103\n                \n            \n\n\n            \n                \n                    Update todo task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doingTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doingUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.doingTasks)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doneTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doneUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.doneTasks)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            todoTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            todoUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.todoTasks)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from './task.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\n\n/**\n * API URL\n */\nconst BACKEND_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n  private todoTasks: Task[] = [];\n  private doingTasks: Task[] = [];\n  private doneTasks: Task[] = [];\n  private todoUpdate = new BehaviorSubject(this.todoTasks);\n  private doingUpdate = new BehaviorSubject(this.doingTasks);\n  private doneUpdate = new BehaviorSubject(this.doneTasks);\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Listen to changes in todo list.\n   */\n  getTodoUpdateListener() {\n    return this.todoUpdate.asObservable();\n  }\n\n  /**\n   * Listen to changes in doing list.\n   */\n  getDoingUpdateListener() {\n    return this.doingUpdate.asObservable();\n  }\n\n  /**\n   * Listen to changes in done list.\n   */\n  getDoneUpdateListener() {\n    return this.doneUpdate.asObservable();\n  }\n\n  /**\n   * Create a new task.\n   */\n  addTodoTask(title: string, description: string) {\n    const task: Task = { id: null, title, description };\n    this.http\n      .post(`${BACKEND_URL}/todo`, task)\n      .subscribe(response => {\n        task.id = response.task.id;\n        this.todoTasks.push(task);\n        this.todoUpdate.next([...this.todoTasks]);\n      });\n  }\n\n  /**\n   * Get a single todo task from server.\n   */\n  getTodoTask(id: string) {\n    return this.http.get(\n      `${BACKEND_URL}/todo/${id}`\n    );\n  }\n\n  /**\n   * Get todo tasks from server.\n   */\n  getTodoTasks() {\n    this.uiService.loadingStateChanged.next(true);\n    this.http\n      .get(`${BACKEND_URL}/todo`)\n      .pipe(\n        map(taskData => {\n          return taskData.tasks.map(task => {\n            return {\n              id: task._id,\n              title: task.title,\n              description: task.description,\n              creator: task.creator\n            };\n          });\n        })\n      )\n      .subscribe(response => {\n        this.todoTasks = response;\n        this.uiService.loadingStateChanged.next(false);\n        this.todoUpdate.next([...this.todoTasks]);\n      });\n  }\n\n  /**\n   * Update todo task.\n   */\n  updateTodoTask(id: string, title: string, description: string) {\n    const task: Task = { id, title, description };\n    this.http\n      .put(`${BACKEND_URL}/todo/${id}`, task)\n      .subscribe(response => {\n        const updatedTasks = [...this.todoTasks];\n        const oldTaskIndex = updatedTasks.findIndex(t => t.id === task.id);\n        updatedTasks[oldTaskIndex] = task;\n        this.todoTasks = updatedTasks;\n        this.todoUpdate.next([...this.todoTasks]);\n      });\n  }\n\n  /**\n   * Delete todo task from server.\n   */\n  deleteTodoTask(id: string) {\n    this.http.delete(`${BACKEND_URL}/todo/${id}`).subscribe(() => {\n      this.todoTasks = this.todoTasks.filter(task => task.id !== id);\n      this.todoUpdate.next([...this.todoTasks]);\n    });\n  }\n\n  /**\n   * Add doing task.\n   */\n  addDoingTask(id: string, title: string, description: string) {\n    const task: Task = { id, title, description };\n    this.http\n      .post(`${BACKEND_URL}/doing`, task)\n      .subscribe(response => {\n        task.id = response.task.id;\n        this.doingTasks.push(task);\n        this.doingUpdate.next([...this.doingTasks]);\n      });\n  }\n\n  /**\n   * Get a single doing task from server.\n   */\n  getDoingTask(id: string) {\n    return this.http.get(\n      `${BACKEND_URL}/doing/${id}`\n    );\n  }\n\n  /**\n   * Get all tasks in progress from server.\n   */\n  getDoingTasks() {\n    this.uiService.loadingStateChanged.next(true);\n    this.http\n      .get(`${BACKEND_URL}/doing`)\n      .pipe(\n        map(taskData => {\n          return taskData.tasks.map(task => {\n            return {\n              id: task._id,\n              title: task.title,\n              description: task.description\n            };\n          });\n        })\n      )\n      .subscribe(response => {\n        this.doingTasks = response;\n        this.uiService.loadingStateChanged.next(false);\n        this.doingUpdate.next([...this.doingTasks]);\n      });\n  }\n\n  /**\n   * Update doing task.\n   */\n  updateDoingTask(id: string, title: string, description: string) {\n    const task: Task = { id, title, description };\n    this.http\n      .put(`${BACKEND_URL}/doing/${id}`, task)\n      .subscribe(response => {\n        const updatedTasks = [...this.doingTasks];\n        const oldTaskIndex = updatedTasks.findIndex(t => t.id === task.id);\n        updatedTasks[oldTaskIndex] = task;\n        this.doingTasks = updatedTasks;\n        this.doingUpdate.next([...this.doingTasks]);\n      });\n  }\n\n  /**\n   * Delete doing task.\n   */\n  deleteDoingTask(id: string) {\n    this.http.delete(`${BACKEND_URL}/doing/${id}`).subscribe(() => {\n      this.doingTasks = this.doingTasks.filter(task => task.id !== id);\n      this.doingUpdate.next([...this.doingTasks]);\n    });\n  }\n\n  /**\n   * Add done task.\n   */\n  addDoneTask(id: string, title: string, description: string) {\n    const task: Task = { id, title, description };\n    this.http\n      .post(`${BACKEND_URL}/done`, task)\n      .subscribe(response => {\n        task.id = response.task.id;\n        this.doneTasks.push(task);\n        this.doneUpdate.next([...this.doneTasks]);\n      });\n  }\n\n  /**\n   * Get a single done task from server.\n   */\n  getDoneTask(id: string) {\n    return this.http.get(\n      `${BACKEND_URL}/done/${id}`\n    );\n  }\n\n  /**\n   * Get all finished tasks from server.\n   */\n  getDoneTasks() {\n    this.uiService.loadingStateChanged.next(true);\n    this.http\n      .get(`${BACKEND_URL}/done`)\n      .pipe(\n        map(taskData => {\n          return taskData.tasks.map(task => {\n            return {\n              id: task._id,\n              title: task.title,\n              description: task.description\n            };\n          });\n        })\n      )\n      .subscribe(data => {\n        this.doneTasks = data;\n        this.uiService.loadingStateChanged.next(false);\n        this.doneUpdate.next([...this.doneTasks]);\n      });\n  }\n\n  /**\n   * Update done task.\n   */\n  updateDoneTask(id: string, title: string, description: string) {\n    const task: Task = { id, title, description };\n    this.http\n      .put(`${BACKEND_URL}/done/${id}`, task)\n      .subscribe(response => {\n        const updatedTasks = [...this.doneTasks];\n        const oldTaskIndex = updatedTasks.findIndex(t => t.id === task.id);\n        updatedTasks[oldTaskIndex] = task;\n        this.doneTasks = updatedTasks;\n        this.doneUpdate.next([...this.doneTasks]);\n      });\n  }\n\n  /**\n   * Delete done task.\n   */\n  deleteDoneTask(id: string) {\n    this.http.delete(`${BACKEND_URL}/done/${id}`).subscribe(() => {\n      this.doneTasks = this.doneTasks.filter(task => task.id !== id);\n      this.doneUpdate.next([...this.doneTasks]);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nCoreModule -->\n\nNavigationComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nCoreModule->NavigationComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\n\n@NgModule({\n  declarations: [NavigationComponent, HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule],\n  exports: [NavigationComponent]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/todo/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/todo/create-task/create-task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/todo/create-task/create-task.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/create-task/create-task.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/create-task/create-task.component.ts:36\n                \n            \n\n\n            \n                \n                    Close modal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/create-task/create-task.component.ts:23\n                \n            \n\n\n            \n                \n                    Create new task\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BoardService } from '../../board.service';\nimport { NgForm } from '@angular/forms';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit {\n  @Output() close = new EventEmitter();\n\n  constructor(private boardService: BoardService) {}\n\n  ngOnInit() {}\n\n  /**\n   * Create new task\n   */\n  onSave(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    this.boardService.addTodoTask(form.value.title, form.value.description);\n    form.resetForm();\n    this.onClose();\n  }\n\n  /**\n   * Close modal\n   */\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        Title field must not be empty\n      \n    \n    \n      \n      \n        description field must not be empty\n      \n    \n    \n      \n        SAVE\n      \n      \n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n.container {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  display: flex;\n  justify-content: center;\n  background-color: #fdfdfd;\n  padding: 25px 0;\n  z-index: 200;\n  border-radius: 4px;\n  box-shadow: 0 8px 12px -1px rgba(0, 0, 0, 0.6);\n}\n\n.form-create {\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n}\n\n.form-create__actions {\n  display: flex;\n  justify-content: center;\n}\n\nmat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Title field must not be empty                                  description field must not be empty                            SAVE                    CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoingComponent.html":{"url":"components/DoingComponent.html","title":"component - DoingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/doing/doing.component.ts\n\n\n    \n        Description\n    \n    \n        Doing List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-doing\n            \n\n            \n                styleUrls\n                ./doing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./doing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doingSubscription\n                            \n                            \n                                doingTasks\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onPushToDone\n                            \n                            \n                                onUndo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/doing/doing.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/doing/doing.component.ts:67\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/doing/doing.component.ts:29\n                \n            \n\n\n            \n                \n                    Get doing tasks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/doing/doing.component.ts:60\n                \n            \n\n\n            \n                \n                    Delete doing task\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPushToDone\n                        \n                        \n                    \n                \n            \n            \n                \nonPushToDone(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/doing/doing.component.ts:44\n                \n            \n\n\n            \n                \n                    Add task to done list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUndo\n                        \n                        \n                    \n                \n            \n            \n                \nonUndo(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/doing/doing.component.ts:52\n                \n            \n\n\n            \n                \n                    Add task back to todo list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/doing/doing.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doingTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/doing/doing.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/doing/doing.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/doing/doing.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Task } from '../task.model';\nimport { BoardService } from '../board.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n/**\n * Doing List Component\n */\n@Component({\n  selector: 'app-doing',\n  templateUrl: './doing.component.html',\n  styleUrls: ['./doing.component.css']\n})\nexport class DoingComponent implements OnInit, OnDestroy {\n  doingTasks: Task[];\n  private doingSubscription: Subscription;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n\n  constructor(\n    private boardService: BoardService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get doing tasks\n   */\n  ngOnInit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.boardService.getDoingTasks();\n    this.doingSubscription = this.boardService\n      .getDoingUpdateListener()\n      .subscribe(tasks => {\n        this.doingTasks = tasks;\n      });\n  }\n\n  /**\n   * Add task to done list\n   */\n  onPushToDone(id: string, title: string, description: string) {\n    this.boardService.addDoneTask(id, title, description);\n    this.onDelete(id);\n  }\n\n  /**\n   * Add task back to todo list\n   */\n  onUndo(id: string, title: string, description: string) {\n    this.boardService.addTodoTask(title, description);\n    this.onDelete(id);\n  }\n\n  /**\n   * Delete doing task\n   */\n  onDelete(id: string) {\n    this.boardService.deleteDoingTask(id);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.doingSubscription) {\n      this.doingSubscription.unsubscribe();\n    }\n\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Doing\n  \n    \n    \n      \n        \n          {{ task.title | uppercaseFirstLetter }}\n        \n\n        {{ task.description | uppercaseFirstLetter }}\n        \n          \n            undo\n          \n          \n            done_all\n          \n          \n            edit\n          \n          \n            delete\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./doing.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Doing                                  {{ task.title | uppercaseFirstLetter }}                {{ task.description | uppercaseFirstLetter }}                              undo                                done_all                                edit                                delete                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoneComponent.html":{"url":"components/DoneComponent.html","title":"component - DoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/done/done.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-done\n            \n\n            \n                styleUrls\n                ./done.component.css\n            \n\n\n\n            \n                templateUrl\n                ./done.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doneSubscription\n                            \n                            \n                                doneTasks\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUndo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/done/done.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/done/done.component.ts:56\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/done/done.component.ts:26\n                \n            \n\n\n            \n                \n                    Get done tasks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/done/done.component.ts:49\n                \n            \n\n\n            \n                \n                    Delete doing task\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUndo\n                        \n                        \n                    \n                \n            \n            \n                \nonUndo(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/done/done.component.ts:41\n                \n            \n\n\n            \n                \n                    Add task back to doing list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            doneSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/done/done.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doneTasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/done/done.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/done/done.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/done/done.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Task } from '../task.model';\nimport { BoardService } from '../board.service';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-done',\n  templateUrl: './done.component.html',\n  styleUrls: ['./done.component.css']\n})\nexport class DoneComponent implements OnInit, OnDestroy {\n  doneTasks: Task[];\n  private doneSubscription: Subscription;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n\n  constructor(\n    private boardService: BoardService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get done tasks\n   */\n  ngOnInit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.boardService.getDoneTasks();\n    this.doneSubscription = this.boardService\n      .getDoneUpdateListener()\n      .subscribe(tasks => {\n        this.doneTasks = tasks;\n      });\n  }\n\n  /**\n   * Add task back to doing list\n   */\n  onUndo(id: string, title: string, description: string) {\n    this.boardService.addDoingTask(id, title, description);\n    this.onDelete(id);\n  }\n\n  /**\n   * Delete doing task\n   */\n  onDelete(id: string) {\n    this.boardService.deleteDoneTask(id);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.doneSubscription) {\n      this.doneSubscription.unsubscribe();\n    }\n\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Done\n  \n    \n    \n      \n        \n          {{ task.title | uppercaseFirstLetter }}\n        \n\n        {{ task.description | uppercaseFirstLetter }}\n        \n          \n            undo\n          \n          \n            edit\n          \n          \n            delete\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./done.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Done                                  {{ task.title | uppercaseFirstLetter }}                {{ task.description | uppercaseFirstLetter }}                              undo                                edit                                delete                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/edit-task/edit-task.component.ts\n\n\n    \n        Description\n    \n    \n        Component for editing tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task\n            \n\n            \n                styleUrls\n                ./edit-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                target\n                            \n                            \n                                task\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/edit-task/edit-task.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edit-task/edit-task.component.ts:29\n                \n            \n\n\n            \n                \n                    Fetch task content\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edit-task/edit-task.component.ts:99\n                \n            \n\n\n            \n                \n                    Return to board\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edit-task/edit-task.component.ts:68\n                \n            \n\n\n            \n                \n                    Save edited task\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'todo' || 'doing' || 'done'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/edit-task/edit-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/edit-task/edit-task.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/edit-task/edit-task.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Task } from '../task.model';\nimport { NgForm } from '@angular/forms';\nimport { BoardService } from '../board.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n/**\n * Component for editing tasks\n */\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit {\n  task: Task;\n  private taskId: string;\n  private target = 'todo' || 'doing' || 'done';\n\n  constructor(\n    private boardService: BoardService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  /**\n   * Fetch task content\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('todoId')) {\n        this.target = 'todo';\n        this.taskId = paramMap.get('todoId');\n        this.boardService.getTodoTask(this.taskId).subscribe(responseData => {\n          this.task = {\n            id: responseData._id,\n            title: responseData.title,\n            description: responseData.description\n          };\n        });\n      } else if (paramMap.has('doingId')) {\n        this.target = 'doing';\n        this.taskId = paramMap.get('doingId');\n        this.boardService.getDoingTask(this.taskId).subscribe(responseData => {\n          this.task = {\n            id: responseData._id,\n            title: responseData.title,\n            description: responseData.description\n          };\n        });\n      } else {\n        this.target = 'done';\n        this.taskId = paramMap.get('doneId');\n        this.boardService.getDoneTask(this.taskId).subscribe(responseData => {\n          this.task = {\n            id: responseData._id,\n            title: responseData.title,\n            description: responseData.description\n          };\n        });\n      }\n    });\n  }\n\n  /**\n   * Save edited task\n   */\n  onSave(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    if (this.target === 'todo') {\n      this.boardService.updateTodoTask(\n        this.taskId,\n        form.value.title,\n        form.value.description\n      );\n    } else if (this.target === 'doing') {\n      this.boardService.updateDoingTask(\n        this.taskId,\n        form.value.title,\n        form.value.description\n      );\n    } else {\n      this.boardService.updateDoneTask(\n        this.taskId,\n        form.value.title,\n        form.value.description\n      );\n    }\n\n    this.onClose();\n  }\n\n  /**\n   * Return to board\n   */\n  onClose() {\n    this.router.navigate(['/board']);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        Title field must not be empty\n      \n    \n    \n      \n      \n        description field must not be empty\n      \n    \n    \n      \n        SAVE\n      \n      \n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./edit-task.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n.container {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  display: flex;\n  justify-content: center;\n  background-color: #fdfdfd;\n  padding: 25px 0;\n  z-index: 200;\n  border-radius: 4px;\n  box-shadow: 0 8px 12px -1px rgba(0, 0, 0, 0.6);\n}\n\n.form-edit {\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n}\n\n.form-edit__actions {\n  display: flex;\n  justify-content: center;\n}\n\nmat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Title field must not be empty                                  description field must not be empty                            SAVE                    CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:22\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:38\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => {\n        this.isAuth = isAuth;\n      });\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigate(['/user/signup']);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      devDo helps you to keep track of your project progress and never miss a\n      deadline.\n    \n    \n      Sign Up!\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .home {\n  background: linear-gradient(\n      to right bottom,\n      rgba(232, 73, 126, 0.8),\n      rgba(233, 30, 99, 0.8)\n    ),\n    url(../../../assets/img/home-image.jpg);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  height: calc(100% - 64px);\n  position: relative;\n}\n\n.home__cta {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  bottom: 10%;\n  left: 5%;\n  color: #fff;\n  width: 250px;\n}\n\n.home__cta p {\n  line-height: 1.6;\n  text-align: center;\n}\n\n@media only screen and (max-width: 599px) {\n  .home {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            devDo helps you to keep track of your project progress and never miss a      deadline.              Sign Up!      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> email.\n\n\n                    \n                        Returns :     \"Please enter your email\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:24\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:67\n                \n            \n\n\n            \n                \n                    Call log in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:57\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> password.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  hidePassword = true;\n  loginForm: FormGroup;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  get form() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   *  Handle log in form errors -> email.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'Please enter your email';\n    } else if (this.form.email.hasError('email')) {\n      return 'Please enter a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle log in form errors -> password.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'Please enter your password';\n    }\n    return null;\n  }\n\n  /**\n   * Call log in user.\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.authService.login(this.form.email.value, this.form.password.value);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      {{ emailErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ passwordErrorHandler() }}\n    \n  \n  \n    Log In\n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ emailErrorHandler() }}                      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}              {{ passwordErrorHandler() }}            Log In  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                drawer\n                            \n                            \n                                isAuth\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isOpened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/navigation.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:51\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscription\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:31\n                \n            \n\n\n            \n                \n                    Get authentication status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:43\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  isOpened = false;\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n  @ViewChild('drawer', { static: false }) drawer: MatSidenav;\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Get authentication status\n   */\n  ngOnInit() {\n    this.isAuth = this.authService.getIsAuth();\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => {\n        this.isAuth = isAuth;\n      });\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n\n  /**\n   * Unsubscribe from subscription\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Board\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      \n        Log Out\n      \n    \n  \n  \n    \n      \n        menu\n      \n      devDo\n      \n      \n        \n          My Board\n        \n        \n          Sign Up\n        \n        \n          Log In\n        \n        \n          Log Out\n        \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.main-navigation > .mat-list-item {\n  color: #fff;\n}\n\n.main-navigation {\n  display: flex;\n  align-self: baseline;\n}\n\n.spacer {\n  flex: 1 1 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\n.mat-nav-list a.active {\n  color: #febf6e;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Board                    Sign Up                    Log In                    Log Out                                menu            devDo                              My Board                          Sign Up                          Log In                          Log Out                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or have been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100% - 64px);\n}\n\n.heading {\n  font-size: 450%;\n}\n\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@media only screen and (max-width: 599px) {\n  .page-not-found {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or have been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPasswordErrorHandler\n                            \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmPasswordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmPasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:82\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> confirm-password field.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:58\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"You must enter a valid email\" | \"This is not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:107\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:30\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:94\n                \n            \n\n\n            \n                \n                    Call create user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:70\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> password field.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:51\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  signupForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n    this.signupForm = this.formBuilder.group(\n      {\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get form() {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'You must enter a valid email';\n    } else if (this.form.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> password field.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.form.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> confirm-password field.\n   */\n  confirmPasswordErrorHandler() {\n    if (this.form.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.form.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Call create user\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.authService.createUser(\n      this.form.email.value,\n      this.form.password.value\n    );\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ emailErrorHandler() }}\n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    {{ form.password.value?.length || 0 }}/6\n    \n      {{ passwordErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ confirmPasswordErrorHandler() }}\n    \n  \n  \n    Sign Up\n  \n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ emailErrorHandler() }}                  {{ hidePassword ? \"visibility_off\" : \"visibility\" }}        {{ form.password.value?.length || 0 }}/6          {{ passwordErrorHandler() }}                      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}              {{ confirmPasswordErrorHandler() }}            Sign Up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  id: string;\n  title: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoComponent.html":{"url":"components/TodoComponent.html","title":"component - TodoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TodoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/todo/todo.component.ts\n\n\n    \n        Description\n    \n    \n        Todo List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo\n            \n\n            \n                styleUrls\n                ./todo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                tasks\n                            \n                            \n                                    Private\n                                todoSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onPushToDoing\n                            \n                            \n                                openCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(boardService: BoardService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/todo/todo.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        boardService\n                                                  \n                                                        \n                                                                        BoardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeCreate\n                        \n                        \n                    \n                \n            \n            \n                \ncloseCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:52\n                \n            \n\n\n            \n                \n                    Close Create Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:74\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:30\n                \n            \n\n\n            \n                \n                    Get todo tasks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:59\n                \n            \n\n\n            \n                \n                    Delete todo task\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPushToDoing\n                        \n                        \n                    \n                \n            \n            \n                \nonPushToDoing(id: string, title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:66\n                \n            \n\n\n            \n                \n                    Add task to doing list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreate\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/todo/todo.component.ts:45\n                \n            \n\n\n            \n                \n                    Open Create Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/todo/todo.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/todo/todo.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/todo/todo.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/todo/todo.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            todoSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/todo/todo.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Task } from '../task.model';\nimport { BoardService } from '../board.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n/**\n * Todo List Component\n */\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit, OnDestroy {\n  tasks: Task[];\n  isOpen = false;\n  private todoSubscription: Subscription;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n\n  constructor(\n    private boardService: BoardService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get todo tasks\n   */\n  ngOnInit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.boardService.getTodoTasks();\n    this.todoSubscription = this.boardService\n      .getTodoUpdateListener()\n      .subscribe((tasks: Task[]) => {\n        this.tasks = tasks;\n      });\n  }\n\n  /**\n   * Open Create Component\n   */\n  openCreate() {\n    this.isOpen = true;\n  }\n\n  /**\n   * Close Create Component\n   */\n  closeCreate() {\n    this.isOpen = false;\n  }\n\n  /**\n   * Delete todo task\n   */\n  onDelete(id: string) {\n    this.boardService.deleteTodoTask(id);\n  }\n\n  /**\n   * Add task to doing list\n   */\n  onPushToDoing(id: string, title: string, description: string) {\n    this.boardService.addDoingTask(id, title, description);\n    this.onDelete(id);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.todoSubscription) {\n      this.todoSubscription.unsubscribe();\n    }\n\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    To do\n    \n      add\n    \n  \n  \n    \n    \n      \n        \n          {{ task.title | uppercaseFirstLetter }}\n        \n\n        {{ task.description | uppercaseFirstLetter }}\n        \n          \n            done\n          \n          \n            edit\n          \n          \n            delete\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./todo.component.css\n                \n                .todo {\n  display: inline-flex;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      To do          add                                        {{ task.title | uppercaseFirstLetter }}                {{ task.description | uppercaseFirstLetter }}                              done                                edit                                delete                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DoingComponent', 'selector': 'app-doing'},{'name': 'DoneComponent', 'selector': 'app-done'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:22\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  MatSnackBar,\n  MatSnackBarVerticalPosition\n} from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(\n    message: string,\n    action: any,\n    duration: number,\n    position: MatSnackBarVerticalPosition\n  ) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth-data.model.ts\n            \n            interface\n            AuthData\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            variable\n            BACKEND_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/board/board.service.ts\n            \n            injectable\n            BoardService\n            \n                69 %\n                (18/26)\n            \n        \n        \n            \n                \n                src/app/board/board.service.ts\n            \n            variable\n            BACKEND_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/board/doing/doing.component.ts\n            \n            component\n            DoingComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/board/done/done.component.ts\n            \n            component\n            DoneComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/board/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/board/task.model.ts\n            \n            interface\n            Task\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/board/todo/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/board/todo/todo.component.ts\n            \n            component\n            TodoComponent\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/board/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.0.0\n        \n            @angular/cdk : ~8.0.0\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ^8.0.0\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 7.3.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nCoreModule->NavigationComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nDoingComponent\n\nDoingComponent\n\nBoardModule -->\n\nDoingComponent->BoardModule\n\n\n\n\n\nDoneComponent\n\nDoneComponent\n\nBoardModule -->\n\nDoneComponent->BoardModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nBoardModule -->\n\nEditTaskComponent->BoardModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nBoardModule -->\n\nTodoComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nCoreModule -->\n\nNavigationComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BACKEND_URL   (src/.../auth.service.ts)\n                        \n                        \n                            BACKEND_URL   (src/.../board.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user/'\n                        \n                    \n\n                \n                    \n                        API URL\n\n                    \n                \n\n            \n        \n\n    src/app/board/board.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BACKEND_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n\n                \n                    \n                        API URL\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
