var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.332,1,0.921]],["body/components/AppComponent.html",[0,0.589,1,1.567,2,1.611,3,0.311,4,0.273,5,1.291,6,1.291,7,1.291,8,1.291,9,0.273,10,2.939,11,0.901,12,3.377,13,1.611,14,2.448,15,1.201,16,2.435,17,1.963,18,1.732,19,5.284,20,1.732,21,4.683,22,0.566,23,1.123,24,2.616,25,0.837,26,2.304,27,2.413,28,1.043,29,3.491,30,0.837,31,0.028,32,1.009,33,0.615,34,0.721,35,3.491,36,4.683,37,1.499,38,3.943,39,0.837,40,1.118,41,0.522,42,0.349,43,3.491,44,0.311,45,0.389,46,1.118,47,3.491,48,0.901,49,1.732,50,1.732,51,1.291,52,2.088,53,1.291,54,1.291,55,0.901,56,1.291,57,0.969,58,1.118,59,1.732,60,0.901,61,1.291,62,0.901,63,1.291,64,0.901,65,1.291,66,0.969,67,1.291,68,0.901,69,1.118,70,1.291,71,0.901,72,1.291,73,0.969,74,1.611,75,1.118,76,1.291,77,0.969,78,1.291,79,1.291,80,0.014,81,0.019,82,0.014]],["title/modules/AppModule.html",[83,1.062,84,2.19]],["body/modules/AppModule.html",[1,1.824,3,0.32,4,0.282,9,0.282,17,1.071,31,0.028,41,0.715,42,0.36,44,0.32,45,0.401,48,0.928,80,0.015,81,0.02,82,0.015,83,1.151,84,4.406,85,1.329,86,1.805,87,3.207,88,3.207,89,3.207,90,1.542,91,3.026,92,3.026,93,3.026,94,3.026,95,3.026,96,3.34,97,3.656,98,3.656,99,3.656,100,2.856,101,2.15,102,1.665,103,3.594,104,2.397,105,4.775,106,4.02,107,2.652,108,2.212,109,4.775,110,3.594,111,4.775,112,5.362,113,2.15,114,2.373,115,3.594,116,3.594,117,3.594,118,3.594,119,4.775,120,4.775,121,4.775,122,2.397]],["title/modules/AppRoutingModule.html",[83,1.062,96,1.813]],["body/modules/AppRoutingModule.html",[0,0.524,3,0.369,4,0.325,9,0.325,31,0.029,37,1.328,41,0.694,42,0.415,44,0.369,45,0.463,62,1.352,68,1.352,69,1.678,80,0.017,81,0.021,82,0.017,85,1.534,90,1.779,96,2.862,104,2.082,108,2.427,123,4.147,124,3.06,125,3.138,126,3.866,127,1.922,128,4.147,129,3.458,130,4.147,131,4.147,132,2.738,133,3.492,134,2.082,135,4.591,136,2.48,137,5.239,138,4.147,139,4.147,140,3.492,141,4.147,142,4.147,143,3.458,144,4.147,145,4.147]],["title/guards/AuthGuard.html",[129,2.19,146,2.19]],["body/guards/AuthGuard.html",[3,0.333,4,0.293,9,0.293,11,0.967,12,2.24,13,1.288,22,0.607,23,1.177,25,0.898,26,2.472,27,2.461,28,1.093,30,1.177,31,0.028,32,0.937,33,0.865,34,1.013,37,1.571,39,0.898,41,0.647,42,0.375,44,0.333,45,0.418,46,1.199,80,0.015,81,0.02,82,0.015,127,1.735,129,3.239,134,1.88,140,4.889,146,3.239,147,3.745,148,3.153,149,5.443,150,4.906,151,4.16,152,3.745,153,4.906,154,3.745,155,3.62,156,4.906,157,4.131,158,4.906,159,4.906,160,4.906,161,4.906,162,3.612,163,4.131,164,3.62,165,1.952,166,1.288,167,2.472,168,2.472,169,1.49,170,4.037,171,3.153,172,1.688,173,3.153]],["title/interceptors/AuthInterceptor.html",[98,1.984,174,1.984]],["body/interceptors/AuthInterceptor.html",[3,0.355,4,0.313,9,0.313,11,1.03,13,1.373,22,0.647,23,1.227,25,0.958,26,2.635,27,2.504,28,1.139,30,1.227,31,0.028,32,0.976,33,0.901,34,1.055,39,0.958,41,0.629,42,0.399,44,0.355,45,0.445,46,1.278,80,0.016,81,0.021,82,0.016,98,3.058,113,2.387,134,2.567,165,2.035,167,2.635,172,1.373,174,3.058,175,3.361,176,3.361,177,3.375,178,4.305,179,3.991,180,4.305,181,5.008,182,4.75,183,5.008,184,3.991,185,3.773,186,5.113,187,5.113,188,3.361,189,4.305,190,5.113,191,3.991,192,3.991,193,3.991,194,3.991,195,3.991,196,3.991,197,3.991]],["title/modules/AuthModule.html",[83,1.062,198,2.19]],["body/modules/AuthModule.html",[3,0.359,4,0.316,9,0.316,31,0.028,41,0.715,42,0.404,44,0.359,45,0.45,48,1.042,64,1.629,71,1.629,80,0.017,81,0.021,82,0.017,83,1.293,85,1.494,86,2.028,87,3.392,88,2.415,89,2.415,90,1.732,100,3.081,101,2.415,102,1.871,104,2.586,108,2.387,114,2.666,198,4.414,199,3.401,200,3.401,201,3.401,202,3.774,203,3.168,204,4.039,205,3.801,206,2.666,207,4.337,208,2.028,209,2.98,210,4.039,211,3.401,212,3.401]],["title/modules/AuthRoutingModule.html",[83,1.062,202,1.984]],["body/modules/AuthRoutingModule.html",[0,0.556,3,0.406,4,0.357,9,0.357,31,0.028,41,0.696,42,0.456,44,0.406,45,0.508,64,1.434,71,1.434,80,0.019,81,0.023,82,0.019,85,1.686,90,1.956,104,2.289,108,2.574,124,3.364,125,3.274,126,4.1,127,2.112,134,2.289,135,4.1,202,3.323,211,3.839,212,3.839,213,4.559,214,3.364,215,3.364,216,3.839]],["title/injectables/AuthService.html",[27,1.32,165,1.32]],["body/injectables/AuthService.html",[3,0.158,4,0.139,9,0.139,12,1.06,22,0.287,23,0.681,25,0.681,27,1.129,28,1.333,30,1.064,31,0.029,32,0.847,33,0.876,34,0.916,37,1.82,39,1.339,40,1.592,41,0.554,42,0.177,44,0.158,45,0.198,58,0.908,80,0.007,81,0.012,82,0.007,102,1.644,113,1.06,122,1.424,127,0.821,134,2.853,151,3.281,164,1.307,165,1.129,166,0.61,168,1.17,169,2.546,172,1.628,173,1.492,177,3.752,185,2.093,214,2.618,215,2.093,217,1.17,218,1.307,219,0.976,220,3.548,221,3.548,222,5.851,223,3.548,224,4.056,225,4.056,226,4.056,227,2.677,228,4.056,229,4.056,230,4.056,231,2.837,232,2.837,233,1.492,234,3.415,235,2.132,236,1.772,237,2.389,238,1.772,239,1.873,240,1.772,241,2.837,242,3.986,243,4.056,244,4.056,245,1.772,246,5.327,247,1.772,248,2.837,249,2.837,250,2.216,251,1.772,252,2.837,253,1.772,254,2.927,255,2.837,256,3.41,257,1.772,258,2.993,259,3.125,260,1.772,261,2.837,262,4.734,263,1.772,264,2.093,265,2.837,266,2.987,267,1.772,268,2.837,269,2.389,270,1.772,271,2.993,272,1.772,273,2.618,274,1.049,275,0.976,276,2.03,277,2.618,278,4.734,279,1.772,280,1.644,281,1.772,282,1.772,283,1.772,284,1.772,285,1.307,286,1.17,287,1.492,288,1.492,289,1.307,290,1.307,291,1.307,292,4.056,293,1.772,294,2.987,295,3.548,296,1.772,297,1.772,298,2.389,299,3.548,300,1.55,301,1.772,302,1.772,303,1.772,304,1.772,305,2.837,306,1.772,307,1.772,308,2.837,309,2.837,310,2.837,311,3.548,312,1.772,313,2.837,314,2.837,315,2.837,316,1.938,317,2.837,318,1.697,319,1.492,320,2.837,321,1.772,322,2.837,323,1.772,324,0.89,325,1.772,326,1.772,327,1.772,328,1.772,329,1.772,330,1.772,331,1.772,332,1.772,333,1.772,334,1.772,335,1.772,336,1.772,337,1.772,338,1.772,339,1.772,340,1.772,341,1.772]],["title/components/BoardComponent.html",[0,0.332,55,0.856]],["body/components/BoardComponent.html",[0,0.58,1,0.925,2,1.561,3,0.297,4,0.261,5,1.233,6,1.233,7,1.233,8,1.233,9,0.261,11,0.86,13,1.561,14,2.391,15,1.147,16,2.419,17,1.95,18,1.679,20,1.679,22,0.541,23,1.089,24,2.567,25,1.238,28,1.011,31,0.028,32,0.867,39,0.8,40,1.067,41,0.372,42,0.334,44,0.297,45,0.372,48,0.86,49,1.679,50,1.679,51,1.233,52,2.049,53,1.233,54,1.233,55,1.43,56,1.233,57,0.925,58,1.067,59,1.679,60,0.86,61,1.233,62,0.86,63,1.233,64,0.86,65,1.233,66,0.925,67,1.233,68,0.86,69,1.067,70,1.233,71,0.86,72,1.233,73,0.925,74,1.561,75,1.067,76,1.233,77,0.925,78,1.233,79,1.233,80,0.014,81,0.019,82,0.014,136,3.467,239,2.2,324,2.591,342,2.807,343,5.161,344,4.539,345,3.333,346,3.333,347,2.714,348,2.996,349,2.714,350,2.807,351,1.993,352,2.807,353,2.82,354,3.333,355,3.822,356,2.46,357,2.2,358,2.807,359,2.807,360,2.46,361,2.2,362,2.46,363,4.539,364,3.333,365,2.2,366,2.2,367,2.2,368,2.807,369,2.807,370,1.821,371,2.807,372,2.46]],["title/modules/BoardModule.html",[83,1.062,373,2.19]],["body/modules/BoardModule.html",[3,0.313,4,0.276,9,0.276,31,0.028,41,0.726,42,0.352,44,0.313,45,0.393,48,0.909,55,1.569,57,1.686,60,1.569,73,1.686,75,1.508,77,1.686,80,0.014,81,0.019,82,0.014,83,1.127,85,1.302,86,1.767,87,3.173,88,2.105,89,2.105,90,1.51,100,2.816,101,2.105,102,1.631,104,2.364,108,2.182,114,2.324,136,2.105,203,3.051,205,3.474,206,2.324,207,3.965,208,1.767,209,2.597,373,4.466,374,2.964,375,2.964,376,2.964,377,3.634,378,3.634,379,3.52,380,4.709,381,2.964,382,3.52,383,3.52,384,2.597,385,3.965,386,2.964,387,2.324,388,2.964,389,2.597,390,3.52,391,3.52,392,2.597,393,3.52]],["title/modules/BoardRoutingModule.html",[83,1.062,378,1.984]],["body/modules/BoardRoutingModule.html",[0,0.554,3,0.404,4,0.355,9,0.355,31,0.028,41,0.694,42,0.454,44,0.404,45,0.506,55,1.429,60,1.429,80,0.019,81,0.023,82,0.019,85,1.677,90,1.945,104,2.277,108,2.566,124,3.346,125,3.266,126,4.086,127,2.101,134,2.277,135,4.086,216,3.818,378,3.312,381,3.818,385,3.818,386,3.818,387,2.994,394,4.535,395,4.535]],["title/modules/CoreModule.html",[83,1.062,97,1.984]],["body/modules/CoreModule.html",[3,0.345,4,0.303,9,0.303,17,1.155,31,0.028,41,0.708,42,0.388,44,0.345,45,0.432,48,1,62,1.611,66,1.844,68,1.611,69,1.24,80,0.016,81,0.021,82,0.016,83,1.24,85,1.432,86,1.945,87,3.326,88,2.316,89,2.316,90,2.385,96,3.41,97,4.028,100,2.999,101,2.316,102,1.795,104,2.518,108,2.323,114,2.557,132,2.557,133,3.261,203,3.133,205,3.7,206,2.557,209,2.858,396,3.261,397,3.261,398,3.873,399,3.261,400,3.873,401,3.873,402,3.873]],["title/components/CreateTaskComponent.html",[0,0.332,57,0.921]],["body/components/CreateTaskComponent.html",[0,0.548,1,0.793,2,1.402,3,0.254,4,0.224,5,1.056,6,1.056,7,1.056,8,1.056,9,0.224,11,1.337,15,0.983,16,2.359,17,1.902,18,1.507,20,1.507,22,0.463,23,0.978,25,0.685,28,1.154,30,0.978,31,0.028,32,0.989,33,0.837,34,0.841,39,0.978,40,1.305,41,0.53,42,0.286,44,0.254,45,0.319,46,0.915,48,0.737,49,1.507,50,1.507,51,1.056,52,1.916,53,1.056,54,1.056,55,0.737,56,1.056,57,1.438,58,1.982,59,1.507,60,0.737,61,1.056,62,0.737,63,1.056,64,0.737,65,1.056,66,0.793,67,1.056,68,0.737,69,0.915,70,1.056,71,0.737,72,1.056,73,0.793,74,1.783,75,0.915,76,1.056,77,0.793,78,1.056,79,1.056,80,0.012,81,0.017,82,0.012,172,0.983,208,1.434,264,3.008,276,2.35,316,1.561,318,1.708,353,1.561,370,1.561,384,4.043,403,4.613,404,2.108,405,3.432,406,4.076,407,2.831,408,4.001,409,3.432,410,4.363,411,3.432,412,4.076,413,4.613,414,1.886,415,2.86,416,4.076,417,4.752,418,2.857,419,4.076,420,3.432,421,4.363,422,2.857,423,2.691,424,4.076,425,1.886,426,2.405,427,2.405,428,2.405,429,1.561,430,2.596,431,2.405,432,2.405,433,2.108,434,2.108,435,2.857,436,2.405,437,2.857,438,4.043,439,4.363,440,3.432,441,2.405]],["title/components/EditTaskComponent.html",[0,0.332,60,0.856]],["body/components/EditTaskComponent.html",[0,0.505,1,0.647,2,1.208,3,0.208,4,0.183,5,0.862,6,0.862,7,0.862,8,0.862,9,0.183,11,1.302,13,1.208,14,1.957,15,0.802,16,2.271,17,1.831,18,1.299,20,1.299,22,0.378,23,0.842,24,2.178,25,0.559,28,1.261,30,0.842,31,0.028,32,0.898,33,0.828,34,0.725,39,1.128,40,1.505,41,0.613,42,0.233,44,0.208,45,0.26,46,0.746,48,0.602,49,1.299,50,1.299,51,0.862,52,1.739,53,0.862,54,0.862,55,0.602,56,0.862,57,0.647,58,0.746,59,1.299,60,1.213,61,2.093,62,0.602,63,0.862,64,0.602,65,0.862,66,0.647,67,0.862,68,0.602,69,0.746,70,0.862,71,0.602,72,0.862,73,0.647,74,1.617,75,0.746,76,0.862,77,0.647,78,0.862,79,0.862,80,0.01,81,0.014,82,0.01,127,1.08,136,2.1,149,3.557,151,3.631,166,0.802,169,2.252,172,1.453,208,1.17,219,1.208,254,1.627,264,3.469,274,0.862,275,0.802,276,1.506,318,1.394,319,1.963,353,1.274,357,2.318,370,1.274,387,3.823,404,1.72,407,3.164,408,3.557,409,2.956,410,3.958,411,2.956,414,1.539,415,2.661,420,2.956,421,3.958,423,2.318,425,1.539,426,1.963,427,1.963,429,1.274,430,2.568,431,1.963,432,1.963,433,1.72,434,1.72,436,1.963,438,3.721,439,3.958,440,2.956,441,1.963,442,4.876,443,3.511,444,2.308,445,3.557,446,4.224,447,2.568,448,4.701,449,3.511,450,2.331,451,1.918,452,2.956,453,2.331,454,3.511,455,2.331,456,2.331,457,3.511,458,3.557,459,2.121,460,2.331,461,2.331,462,3.511,463,1.539,464,1.963,465,1.394,466,2.331,467,2.331,468,2.331,469,2.331,470,2.331,471,2.331,472,2.331,473,1.72,474,1.72,475,2.331,476,1.963,477,1.963]],["title/interceptors/ErrorInterceptor.html",[99,1.984,174,1.984]],["body/interceptors/ErrorInterceptor.html",[3,0.336,4,0.295,9,0.295,11,0.973,13,1.297,22,0.611,23,1.182,25,0.904,28,1.097,30,1.182,31,0.028,32,0.941,33,0.868,34,1.017,39,0.904,41,0.674,42,0.377,44,0.336,45,0.42,46,1.207,80,0.015,81,0.02,82,0.015,99,2.947,113,2.254,165,1.961,166,1.297,172,1.695,174,2.947,175,3.174,178,4.901,180,4.149,181,4.901,182,4.622,183,4.901,188,3.174,189,4.149,235,2.657,300,2.692,316,2.06,465,2.254,478,3.174,479,3.77,480,3.77,481,3.77,482,4.05,483,3.636,484,4.927,485,3.77,486,3.77,487,3.77,488,3.77,489,3.77,490,4.927,491,3.77,492,3.77,493,2.782,494,3.174,495,3.174,496,3.174,497,3.77,498,3.77,499,4.927,500,3.77,501,3.174,502,2.254,503,3.77]],["title/components/HomeComponent.html",[0,0.332,62,0.856]],["body/components/HomeComponent.html",[0,0.518,1,0.688,2,1.266,3,0.221,4,0.194,5,0.918,6,0.918,7,0.918,8,0.918,9,0.194,11,0.64,13,1.266,14,2.031,15,0.854,16,2.299,17,1.854,18,1.36,20,1.36,22,0.402,23,0.883,24,2.247,25,0.595,27,2.234,28,1.208,30,0.595,31,0.028,32,0.837,33,0.648,34,0.512,37,1.178,39,1.052,40,1.404,41,0.541,42,0.248,44,0.221,45,0.277,46,0.794,48,0.64,49,1.36,50,1.36,51,0.918,52,1.793,53,0.918,54,0.918,55,0.64,56,0.918,57,0.688,58,0.794,59,1.36,60,0.64,61,0.918,62,1.252,63,0.918,64,0.64,65,0.918,66,0.688,67,0.918,68,0.64,69,1.658,70,0.918,71,0.64,72,0.918,73,0.688,74,1.266,75,0.794,76,0.918,77,0.688,78,0.918,79,0.918,80,0.01,81,0.015,82,0.01,127,1.15,151,3.58,166,0.854,169,1.93,170,3.578,219,1.266,227,1.638,239,1.638,274,0.918,275,0.854,280,1.704,324,2.434,347,1.484,348,2.428,349,2.9,351,3.097,353,1.356,356,1.831,357,1.638,361,1.638,362,3.235,365,1.638,366,1.638,367,1.638,444,2.395,447,2.649,451,2.01,502,1.484,504,2.089,505,4.567,506,4.384,507,3.679,508,3.691,509,4.849,510,2.481,511,3.679,512,2.481,513,2.714,514,2.481,515,2.481,516,3.679,517,3.578,518,3.578,519,2.622,520,2.481,521,2.089,522,3.097,523,1.831,524,2.089,525,2.089,526,2.481,527,2.089,528,2.714,529,3.679,530,3.679,531,3.679,532,3.097,533,3.679,534,3.679,535,3.679,536,3.679,537,3.679,538,2.481,539,2.481,540,2.481,541,2.481,542,3.097,543,2.089,544,2.428,545,2.089,546,2.481,547,3.235,548,2.089,549,1.831,550,3.097,551,2.481,552,2.481,553,3.679,554,2.089,555,2.481,556,2.481,557,2.481,558,2.089,559,2.481,560,2.481,561,2.481,562,2.481,563,2.481,564,2.089,565,2.089,566,2.481,567,2.089,568,2.089]],["title/interfaces/ITask.html",[459,1.666,569,1.813]],["body/interfaces/ITask.html",[3,0.383,4,0.337,9,0.337,11,1.624,22,0.698,31,0.028,33,1.108,34,1.262,44,0.383,80,0.018,81,0.022,82,0.018,219,1.845,250,3.34,254,3.125,407,2.352,429,3.34,430,3.34,459,2.693,569,2.352,570,3.177,571,3.625,572,3.625,573,5.148,574,4.918,575,4.918,576,4.918]],["title/components/LoginComponent.html",[0,0.332,64,0.856]],["body/components/LoginComponent.html",[0,0.406,1,0.605,2,1.149,3,0.194,4,0.171,5,0.807,6,0.807,7,0.807,8,0.807,9,0.171,13,1.149,14,1.879,15,0.75,16,2.24,17,1.806,18,1.235,20,1.235,22,0.354,23,0.801,24,2.105,25,0.523,26,1.44,27,2.056,28,1.333,30,0.523,31,0.029,32,0.774,33,0.801,34,0.45,37,1.069,39,1.175,40,1.299,41,0.546,42,0.218,44,0.194,45,0.243,46,0.699,48,0.563,49,1.235,50,1.235,51,0.807,52,1.68,53,0.807,54,0.807,55,0.563,56,0.807,57,0.605,58,1.299,59,1.235,60,0.563,61,0.807,62,0.563,63,0.807,64,1.173,65,0.807,66,0.605,67,0.807,68,0.563,69,0.699,70,0.807,71,0.563,72,0.807,73,0.605,74,1.149,75,0.699,76,0.807,77,0.605,78,0.807,79,0.807,80,0.009,81,0.014,82,0.009,122,1.676,166,0.75,167,1.44,169,2.139,172,1.777,208,1.095,215,3.353,219,1.149,227,1.44,235,2.306,254,1.011,256,3,258,4.091,259,3.548,274,1.235,275,1.149,276,1.74,280,1.879,316,1.824,423,3.752,444,2.216,447,2.483,451,1.824,483,3.353,493,3.614,513,2.464,519,2.929,523,1.61,577,1.837,578,4.056,579,3.339,580,3.415,581,4.124,582,3.233,583,3.415,584,4.056,585,4.349,586,3.826,587,4.349,588,2.811,589,3.339,590,2.182,591,3.826,592,4.124,593,2.811,594,2.182,595,2.182,596,2.811,597,2.811,598,2.182,599,3.339,600,2.182,601,2.182,602,2.182,603,2.182,604,3.826,605,2.182,606,1.837,607,2.182,608,2.182,609,3.415,610,1.837,611,2.811,612,2.182,613,2.464,614,2.182,615,3.339,616,2.811,617,1.837,618,2.182,619,1.837,620,1.837,621,1.837,622,2.811,623,2.182,624,2.182,625,1.837,626,1.837,627,1.837,628,2.811,629,2.811]],["title/modules/MaterialModule.html",[83,1.062,203,1.666]],["body/modules/MaterialModule.html",[3,0.351,4,0.309,9,0.309,31,0.029,41,0.755,42,0.395,44,0.351,45,0.44,80,0.016,81,0.021,82,0.016,85,1.459,90,1.692,108,2.351,203,2.548,630,3.945,631,5.075,632,3.322,633,5.075,634,3.945,635,3.945,636,5.075,637,3.945,638,5.075,639,3.945,640,5.075,641,3.945,642,5.075,643,3.945,644,5.075,645,3.945,646,5.075,647,3.945,648,5.075,649,3.322,650,5.075,651,3.945,652,5.075,653,3.945,654,3.945,655,5.075,656,3.322,657,3.322,658,5.075,659,3.945,660,5.075,661,3.945,662,3.945,663,5.075,664,3.945]],["title/components/NavigationComponent.html",[0,0.332,66,0.921]],["body/components/NavigationComponent.html",[0,0.41,1,0.616,2,1.165,3,0.198,4,0.174,5,0.822,6,0.822,7,0.822,8,0.822,9,0.174,13,1.165,14,1.9,15,0.764,16,2.249,17,1.813,18,1.252,20,1.252,22,0.549,23,0.812,24,2.125,25,0.812,27,2.153,28,1.32,30,0.533,31,0.028,32,0.783,33,0.808,34,0.459,37,1.084,39,1.1,40,1.469,41,0.58,42,0.222,44,0.198,45,0.248,48,0.573,49,1.252,50,1.252,51,0.822,52,1.696,53,0.822,54,0.822,55,0.573,56,0.822,57,0.616,58,0.711,59,1.252,60,0.573,61,0.822,62,0.573,63,0.822,64,0.573,65,0.822,66,1.273,67,0.822,68,0.573,69,0.711,70,0.822,71,0.573,72,0.822,73,0.616,74,1.165,75,0.711,76,0.822,77,0.616,78,0.822,79,0.822,80,0.009,81,0.014,82,0.009,102,2.41,136,2.743,162,2.708,166,0.764,169,1.965,170,3.385,171,1.87,177,2.235,219,1.165,227,1.466,250,1.85,258,4.3,274,1.696,275,1.578,280,2.584,324,1.7,347,1.329,348,2.235,349,1.329,351,1.329,360,1.639,361,1.466,370,2.241,372,1.639,444,2.241,447,2.506,451,1.85,465,1.329,502,1.329,508,3.453,517,3.385,518,3.385,519,2.953,521,1.87,522,2.85,523,1.639,524,1.87,525,2.85,527,1.87,528,2.498,544,1.466,547,1.639,550,2.85,554,2.85,632,1.87,649,1.87,665,1.87,666,4.102,667,4.102,668,3.385,669,4.102,670,4.102,671,4.102,672,4.102,673,4.587,674,4.587,675,2.222,676,5.202,677,2.222,678,2.222,679,2.222,680,2.222,681,2.222,682,2.235,683,3.385,684,2.222,685,4.102,686,2.222,687,3.385,688,3.385,689,2.222,690,2.222,691,2.222,692,3.385,693,3.385,694,3.385,695,3.385,696,2.222,697,2.222,698,2.222,699,2.222,700,1.639,701,3.385,702,2.222,703,2.222,704,4.587,705,3.385,706,1.639,707,2.222,708,2.222,709,2.222,710,2.222,711,2.222,712,3.453,713,2.222,714,2.222,715,2.222,716,2.222,717,2.222,718,2.222,719,2.235,720,2.222]],["title/components/PageNotFoundComponent.html",[0,0.332,68,0.856]],["body/components/PageNotFoundComponent.html",[0,0.575,1,0.902,2,1.535,3,0.289,4,0.255,5,1.202,6,1.202,7,1.202,8,1.202,9,0.255,11,0.839,15,1.118,16,2.409,17,1.942,18,1.65,20,1.65,25,1.222,28,0.724,31,0.028,32,0.852,41,0.362,42,0.325,44,0.289,45,0.362,48,0.839,49,1.65,50,1.65,51,1.202,52,2.028,53,1.202,54,1.202,55,0.839,56,1.202,57,0.902,58,1.041,59,1.65,60,0.839,61,1.202,62,0.839,63,1.202,64,0.839,65,1.202,66,0.902,67,1.202,68,1.415,69,2.099,70,1.202,71,0.839,72,1.202,73,0.902,74,1.535,75,1.041,76,1.202,77,0.902,78,1.202,79,1.202,80,0.013,81,0.018,82,0.013,132,2.945,143,3.619,300,2.995,349,1.944,351,2.668,365,2.146,366,2.146,367,2.146,502,1.944,505,3.756,542,3.756,543,2.737,544,2.945,545,2.737,548,2.737,549,2.398,564,2.737,565,2.737,567,2.737,568,2.737,706,2.398,721,3.756,722,2.737,723,5.483,724,5.094,725,4.462,726,3.251,727,4.462,728,4.462,729,4.462,730,4.462,731,4.462,732,4.462,733,3.756,734,3.251,735,3.251,736,4.616,737,2.737,738,3.251]],["title/components/SignupComponent.html",[0,0.332,71,0.856]],["body/components/SignupComponent.html",[0,0.348,1,0.478,2,0.954,3,0.153,4,0.135,5,0.637,6,0.637,7,0.637,8,0.637,9,0.135,13,0.954,14,1.613,15,0.593,16,2.12,17,1.709,18,1.026,20,1.026,22,0.279,23,0.666,24,1.849,25,0.413,27,1.956,28,1.31,30,0.413,31,0.029,32,0.665,33,0.703,34,0.356,37,0.888,39,1.179,40,1.115,41,0.521,42,0.172,44,0.153,45,0.192,46,0.552,48,0.445,49,1.026,50,1.026,51,0.637,52,1.476,53,0.637,54,0.637,55,0.445,56,0.637,57,0.478,58,1.115,59,1.026,60,0.445,61,0.637,62,0.445,63,0.637,64,0.445,65,0.637,66,0.478,67,0.637,68,0.445,69,0.552,70,0.637,71,1.03,72,0.637,73,0.478,74,0.954,75,0.552,76,0.637,77,0.478,78,0.637,79,0.637,80,0.007,81,0.011,82,0.007,122,2.004,157,2.336,166,0.593,167,1.138,169,2.035,172,1.972,208,0.865,214,2.945,219,0.954,235,2.108,256,3.655,259,3.484,271,2.047,273,3.228,274,1.288,275,1.198,280,1.613,316,2.181,324,1.393,423,3.884,438,3.773,444,1.902,447,2.181,451,1.516,483,3.773,493,2.047,513,2.047,517,4.162,518,4.162,519,2.616,580,2.932,581,3.684,582,2.635,583,2.932,585,3.936,586,3.361,587,3.936,588,2.336,591,4.305,592,4.305,593,3.936,596,2.336,597,2.336,604,2.932,606,1.451,609,1.451,610,1.451,611,2.336,613,2.047,616,3.361,617,1.451,619,1.451,620,1.451,621,1.451,622,2.336,625,1.451,626,1.451,627,1.451,628,3.361,629,3.361,739,1.451,740,3.482,741,2.774,742,4.375,743,3.482,744,4.675,745,4.675,746,1.723,747,4.675,748,2.774,749,1.723,750,3.991,751,2.774,752,2.336,753,1.723,754,1.723,755,1.723,756,1.723,757,1.723,758,2.774,759,3.991,760,3.991,761,3.991,762,1.723,763,2.336,764,1.723,765,1.723,766,1.723,767,1.723,768,1.723,769,1.723,770,2.774,771,2.774,772,2.336,773,1.272,774,1.723,775,1.723,776,1.723,777,1.723,778,1.723,779,1.723,780,1.451,781,1.723,782,1.723,783,1.723,784,1.723,785,1.723,786,1.723,787,1.723,788,1.723,789,1.723,790,1.723,791,1.723,792,1.723,793,2.774]],["title/injectables/TaskService.html",[165,1.32,415,1.666]],["body/injectables/TaskService.html",[3,0.173,4,0.152,9,0.152,11,1.378,12,1.163,22,0.315,23,0.733,25,0.466,28,1.331,30,1.281,31,0.029,32,1.019,33,0.99,34,1.102,39,1.434,40,0.978,41,0.575,42,0.195,44,0.173,45,0.217,46,0.623,58,1.368,74,1.933,80,0.008,81,0.013,82,0.008,113,1.163,162,4.243,165,1.215,166,0.669,168,1.283,169,2.349,172,1.773,217,1.283,219,1.05,233,1.637,234,3.597,235,2.211,237,2.571,250,1.062,254,2.697,274,1.717,275,1.597,276,2.289,277,1.435,285,1.435,286,1.283,287,1.637,289,2.782,291,2.253,294,1.637,298,3.909,407,3.631,415,1.533,428,2.571,429,3.36,430,1.062,459,2.82,463,1.283,465,1.163,482,3.153,700,2.782,719,2.82,794,1.435,795,4.928,796,4.928,797,3.771,798,3.054,799,3.054,800,3.054,801,3.597,802,3.054,803,3.054,804,3.054,805,3.054,806,3.054,807,1.944,808,4.643,809,3.054,810,1.944,811,2.571,812,3.054,813,1.944,814,3.054,815,1.944,816,3.054,817,1.944,818,3.054,819,1.944,820,2.571,821,3.054,822,4.643,823,1.944,824,4.273,825,3.054,826,1.944,827,4.273,828,1.944,829,3.054,830,1.944,831,1.944,832,3.054,833,1.944,834,3.175,835,1.637,836,1.637,837,4.622,838,1.944,839,4.643,840,1.944,841,1.944,842,1.944,843,1.944,844,1.944,845,1.944,846,1.944,847,1.944,848,1.944,849,1.944,850,1.944,851,1.944]],["title/components/TasksCardListComponent.html",[0,0.332,73,0.921]],["body/components/TasksCardListComponent.html",[0,0.371,1,0.526,2,1.03,3,0.169,4,0.149,5,0.701,6,0.701,7,0.701,8,0.701,9,0.149,11,1.088,15,0.652,16,2.171,17,1.75,18,1.107,20,1.107,22,0.308,23,0.718,25,0.455,28,1.288,30,1.101,31,0.028,32,0.975,33,0.983,34,0.947,39,1.101,40,1.188,41,0.47,42,0.19,44,0.169,45,0.212,46,0.607,48,0.49,49,1.107,50,1.107,51,0.701,52,1.558,53,0.701,54,0.701,55,0.49,56,0.701,57,0.526,58,0.607,59,1.107,60,0.49,61,1.372,62,0.49,63,0.701,64,0.49,65,0.701,66,0.526,67,0.701,68,0.49,69,0.607,70,0.701,71,0.49,72,0.701,73,1.169,74,1.99,75,2.106,76,0.701,77,0.526,78,0.701,79,0.701,80,0.008,81,0.012,82,0.008,122,1.503,134,0.952,163,3.548,164,2.209,169,2.219,219,1.03,235,2.19,250,3.047,254,2.858,274,1.107,275,1.03,280,2.259,285,1.399,300,1.036,316,1.036,318,1.134,353,1.036,370,1.036,392,4.331,407,3.108,414,1.252,415,2.448,425,1.252,429,3.315,430,2.507,433,1.399,434,1.399,459,1.863,463,1.252,473,2.209,474,2.209,494,2.521,495,1.597,496,1.597,501,1.597,502,1.134,574,2.521,575,3.124,576,3.548,582,2.449,682,3.219,719,1.977,811,3.548,837,3.548,852,4.942,853,1.597,854,3.71,855,2.995,856,4.588,857,4.588,858,2.995,859,3.71,860,2.995,861,2.995,862,2.995,863,2.995,864,3.71,865,3.71,866,2.995,867,1.897,868,1.897,869,1.897,870,1.897,871,1.897,872,2.995,873,1.897,874,2.995,875,1.897,876,2.995,877,1.897,878,2.995,879,1.897,880,1.897,881,4.876,882,1.897,883,1.597,884,3.71,885,3.71,886,2.995,887,1.897,888,1.897,889,1.597,890,1.597,891,1.897,892,1.897,893,1.897,894,1.897,895,1.897,896,3.548,897,2.995,898,2.995,899,1.897,900,1.897,901,1.597,902,1.597]],["title/components/TasksComponent.html",[0,0.332,77,0.921]],["body/components/TasksComponent.html",[0,0.555,1,0.558,2,1.079,3,0.179,4,0.158,5,0.744,6,0.744,7,0.744,8,0.744,9,0.158,11,0.809,13,1.079,14,1.785,15,0.692,16,2.2,17,1.795,18,1.159,20,1.159,22,0.326,23,0.752,24,2.016,25,0.482,28,1.355,30,0.482,31,0.029,32,0.736,33,0.881,34,0.415,39,1.199,40,1.393,41,0.526,42,0.201,44,0.179,45,0.224,46,0.644,48,0.519,49,1.159,50,1.159,51,0.744,52,1.609,53,0.744,54,0.744,55,0.519,56,0.744,57,0.558,58,1.511,59,1.159,60,0.519,61,0.744,62,0.519,63,0.744,64,0.519,65,0.744,66,0.558,67,0.744,68,0.519,69,0.644,70,0.744,71,0.519,72,0.744,73,0.558,74,2.111,75,1.004,76,0.744,77,1.207,78,0.744,79,0.744,80,0.008,81,0.013,82,0.008,122,1.574,162,3.814,166,0.692,169,2.336,172,1.497,219,1.079,239,2.07,250,1.099,274,1.609,275,1.497,276,1.867,280,2.316,318,1.203,324,1.01,347,2.304,348,2.544,349,2.304,350,1.693,351,1.203,352,1.693,353,2.378,355,2.64,356,1.484,357,1.328,358,1.693,359,1.693,360,1.484,361,1.328,362,1.484,365,1.328,366,1.328,367,1.328,368,1.693,369,1.693,370,1.713,371,1.693,372,1.484,407,1.713,413,2.64,414,1.328,415,2.509,425,1.328,429,1.099,430,1.099,444,2.105,445,3.245,447,2.378,451,1.713,452,2.64,458,3.245,459,2.185,463,1.328,464,1.693,465,1.203,473,1.484,474,1.484,476,1.693,477,1.693,519,2.304,549,1.484,573,1.693,582,2.544,613,2.314,700,1.484,706,1.484,719,2.544,801,3.664,883,1.693,889,1.693,890,1.693,901,1.693,902,1.693,903,1.693,904,3.854,905,3.135,906,3.854,907,3.854,908,3.854,909,3.854,910,4.352,911,4.352,912,4.352,913,3.135,914,2.011,915,2.011,916,2.011,917,2.011,918,2.011,919,2.011,920,3.135,921,2.011,922,2.011,923,2.011,924,2.011,925,2.011,926,2.011,927,2.011,928,3.135,929,3.135,930,3.135,931,2.011,932,2.011,933,2.011,934,2.011,935,3.854,936,3.854,937,2.011,938,2.011,939,2.011,940,2.011,941,2.011,942,2.011,943,2.011,944,2.011,945,2.011,946,2.011,947,2.011,948,2.011,949,3.135,950,3.135,951,2.011,952,2.64,953,2.011,954,2.011,955,2.011]],["title/injectables/UIService.html",[165,1.32,235,1.423]],["body/injectables/UIService.html",[3,0.333,4,0.293,9,0.293,11,0.967,12,2.24,22,0.607,23,1.177,25,0.898,28,1.219,30,1.177,31,0.028,32,0.937,33,0.865,34,1.013,37,1.859,39,0.898,40,1.199,41,0.61,42,0.375,44,0.333,45,0.418,46,1.199,80,0.015,81,0.02,82,0.015,165,1.952,166,1.288,168,2.472,217,2.472,219,1.688,235,2.104,254,2.535,266,4.607,269,4.889,274,1.385,275,1.288,276,2.104,277,2.763,300,2.68,347,2.934,544,3.833,569,2.68,656,3.153,657,4.607,682,3.239,952,4.889,956,3.153,957,4.906,958,5.472,959,5.472,960,3.745,961,5.806,962,4.906,963,4.906,964,3.745,965,5.806,966,3.745,967,4.906,968,4.906,969,4.906,970,4.906,971,3.745,972,3.745]],["title/pipes/UppercaseFirstLetterPipe.html",[377,1.984,973,2.19]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.395,4,0.348,9,0.348,11,1.146,13,1.527,15,1.527,23,1.065,28,0.989,30,1.065,31,0.028,32,1.131,33,0.782,34,0.917,39,1.065,41,0.495,42,0.444,44,0.395,45,0.495,80,0.018,81,0.022,82,0.018,172,1.881,275,1.881,377,3.269,388,4.603,389,4.561,737,4.987,896,4.603,973,3.609,974,4.44,975,4.603,976,3.738,977,5.467,978,5.467,979,4.44,980,5.467,981,4.44,982,4.44]],["title/interfaces/User.html",[37,1.062,569,1.813]],["body/interfaces/User.html",[3,0.402,4,0.353,9,0.353,11,1.164,22,0.731,31,0.027,33,1.095,34,1.283,37,1.767,44,0.402,80,0.018,81,0.023,82,0.018,177,2.978,219,1.899,242,3.798,254,3.144,256,4.103,259,4.103,271,4.586,273,4.586,569,3.016,570,3.328,572,3.798,983,3.798,984,4.511]],["title/coverage.html",[985,3.81]],["body/coverage.html",[0,0.651,1,0.977,9,0.276,10,2.964,27,1.401,31,0.028,33,0.62,37,1.127,55,0.909,57,0.977,60,0.909,62,0.909,64,0.909,66,0.977,68,0.909,71,0.909,73,0.977,75,1.508,77,0.977,80,0.014,81,0.019,82,0.014,98,2.105,99,2.105,129,2.324,132,2.324,146,2.324,148,2.964,165,2.112,174,2.816,176,2.964,218,3.474,235,1.51,276,1.51,286,3.108,290,2.597,324,2.364,342,2.964,377,2.105,384,2.597,387,2.324,389,2.597,392,2.597,403,2.964,404,3.474,415,1.767,442,2.964,459,1.767,478,2.964,504,2.964,547,3.915,558,2.964,569,2.573,571,2.964,577,2.964,665,2.964,721,2.964,722,2.964,736,3.965,739,2.964,773,2.597,794,2.597,852,2.964,853,2.964,903,2.964,956,2.964,973,2.324,975,2.964,976,2.964,983,2.964,985,2.964,986,2.964,987,3.52,988,3.52,989,5.666,990,5.666,991,3.52,992,3.52,993,5.306,994,5.306,995,3.52,996,3.52,997,2.964,998,2.964,999,3.52,1000,3.52,1001,3.52,1002,3.52,1003,3.52,1004,4.709,1005,3.52,1006,3.52,1007,3.52,1008,3.52,1009,3.52,1010,3.52,1011,3.52,1012,3.52,1013,3.52,1014,3.52,1015,3.52,1016,3.52,1017,3.52,1018,3.52,1019,3.52,1020,3.52,1021,3.52,1022,2.964,1023,4.709,1024,2.964,1025,3.52,1026,3.52]],["title/dependencies.html",[86,2.003,1027,2.773]],["body/dependencies.html",[31,0.028,42,0.464,80,0.019,81,0.023,82,0.019,86,2.327,106,4.724,107,4.14,127,2.147,166,1.594,206,3.059,208,2.327,405,3.902,1028,4.634,1029,6.665,1030,4.634,1031,3.902,1032,4.634,1033,4.634,1034,4.634,1035,4.634,1036,4.634,1037,4.634,1038,4.634,1039,4.634,1040,4.634,1041,4.634,1042,4.634,1043,4.634,1044,4.634]],["title/miscellaneous/functions.html",[1045,1.515,1046,3.359]],["body/miscellaneous/functions.html",[22,0.783,30,1.159,31,0.025,32,0.923,34,0.997,80,0.02,81,0.024,82,0.02,143,3.189,155,3.565,172,1.662,185,3.565,300,3.143,752,4.068,772,4.068,773,4.245,780,4.844,997,4.068,998,4.844,1045,2.64,1046,4.068,1047,4.832,1048,4.832,1049,5.754,1050,4.832,1051,4.832,1052,4.832,1053,4.832,1054,5.754,1055,4.832,1056,4.832,1057,4.832]],["title/index.html",[22,0.45,1058,2.773,1059,2.773]],["body/index.html",[0,0.572,4,0.322,17,1.224,31,0.021,32,0.784,38,3.458,80,0.017,81,0.021,82,0.017,102,1.903,143,2.711,155,3.031,276,1.762,482,3.842,528,3.031,532,4.814,682,2.711,733,3.458,820,3.458,986,4.384,1031,3.458,1060,4.107,1061,5.717,1062,5.717,1063,4.107,1064,4.107,1065,4.107,1066,6.203,1067,6.438,1068,4.107,1069,4.107,1070,4.107,1071,4.107,1072,4.107,1073,4.107,1074,4.107,1075,5.717,1076,5.717,1077,4.107,1078,6.203,1079,4.107,1080,4.107,1081,4.107,1082,4.107,1083,4.107,1084,4.107,1085,3.458,1086,5.207,1087,5.207,1088,6.012,1089,4.107,1090,5.207,1091,5.207,1092,4.107,1093,6.012,1094,4.107,1095,4.107,1096,4.107,1097,5.717,1098,4.107,1099,4.107]],["title/modules.html",[85,1.673]],["body/modules.html",[31,0.023,80,0.02,81,0.023,82,0.02,84,3.171,85,1.777,96,2.625,97,2.873,107,4.684,198,3.171,202,2.873,203,2.412,373,3.171,378,2.873,1100,6.349,1101,6.349,1102,6.708,1103,6.349,1104,6.349]],["title/overview.html",[1105,3.81]],["body/overview.html",[1,1.706,2,1.167,31,0.028,48,0.876,55,1.344,57,1.445,60,1.344,62,1.344,64,1.344,66,1.706,68,1.344,71,1.344,73,1.445,77,1.445,80,0.014,81,0.019,82,0.014,83,1.087,84,4.329,85,1.255,86,1.704,87,2.029,88,2.029,89,2.029,90,1.455,91,2.857,92,2.857,93,2.857,94,2.857,95,2.857,96,3.05,97,3.944,98,3.115,99,3.115,100,2.747,101,2.029,102,1.572,125,1.854,146,2.24,198,4.23,199,2.857,200,2.857,201,2.857,202,3.115,203,2.928,217,2.24,373,4.424,374,2.857,375,2.857,376,2.857,377,3.115,378,3.115,396,2.857,397,2.857,399,2.857,570,2.504,712,3.868,763,2.857,973,2.24,1105,2.857,1106,3.393,1107,3.393,1108,3.393,1109,3.393]],["title/routes.html",[125,2.472]],["body/routes.html",[31,0.025,80,0.022,81,0.025,82,0.022,125,2.922]],["title/miscellaneous/typealiases.html",[1045,1.515,1110,3.99]],["body/miscellaneous/typealiases.html",[22,0.836,31,0.024,33,0.908,80,0.021,81,0.024,82,0.021,794,3.803,834,5.032,835,5.032,836,5.032,1045,2.816,1111,5.154,1112,5.976]],["title/miscellaneous/variables.html",[1045,1.515,1113,3.359]],["body/miscellaneous/variables.html",[22,0.758,31,0.028,33,0.994,37,1.496,80,0.019,81,0.023,82,0.019,122,2.346,218,3.447,274,2.24,275,2.084,280,2.165,286,4.152,288,3.934,289,3.447,290,4.161,291,3.447,1022,3.934,1024,3.934,1045,2.553,1085,4.748,1113,3.934,1114,4.672,1115,4.672,1116,4.672,1117,5.639,1118,5.639,1119,4.672,1120,4.672]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["0.7",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":712,"title":{},"body":{"components/NavigationComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.6",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{}}}],["1000",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["1035px",{"_index":368,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":902,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["11",{"_index":1107,"title":{},"body":{"overview.html":{}}}],["11/17",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1109,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1108,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["2.6.10",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":707,"title":{},"body":{"components/NavigationComponent.html":{}}}],["20px",{"_index":369,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["25rem",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["3",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{},"overview.html":{}}}],["3/5",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["3000",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":951,"title":{},"body":{"components/TasksComponent.html":{}}}],["33",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":723,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40px",{"_index":354,"title":{},"body":{"components/BoardComponent.html":{}}}],["41",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":735,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["46",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["5/12",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":736,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["5000",{"_index":501,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["53",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["56px",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5px",{"_index":364,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{}}}],["6.5.3",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["6/16",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["66",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1106,"title":{},"body":{"overview.html":{}}}],["8.0.2",{"_index":1031,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.14",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["8/15",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":352,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["8px",{"_index":441,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["90",{"_index":350,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["absolute",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["access",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["action",{"_index":952,"title":{},"body":{"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["activatedroute",{"_index":448,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["actual_component",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["add",{"_index":950,"title":{},"body":{"components/TasksComponent.html":{}}}],["again",{"_index":495,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["aliases",{"_index":1111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":361,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TasksComponent.html":{}}}],["already",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1061,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":634,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":632,"title":{},"body":{"modules/MaterialModule.html":{},"components/NavigationComponent.html":{}}}],["angular/common",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskService.html":{}}}],["angular/compiler",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":637,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":639,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":641,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":643,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":645,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":647,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":653,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":649,"title":{},"body":{"modules/MaterialModule.html":{},"components/NavigationComponent.html":{}}}],["angular/material/slide",{"_index":661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":656,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":651,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"index.html":{}}}],["app.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":84,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":96,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":359,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["artifacts",{"_index":1079,"title":{},"body":{"index.html":{}}}],["async",{"_index":859,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["auth",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth.guard",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["authdata",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdata).subscribe",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":177,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/NavigationComponent.html":{},"interfaces/User.html":{}}}],["authguard",{"_index":129,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":98,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["authmodule",{"_index":198,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":202,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussubscription",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["autoauthuser",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["available",{"_index":1104,"title":{},"body":{"modules.html":{}}}],["await",{"_index":887,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["background",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{}}}],["backtooltip",{"_index":864,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backward",{"_index":856,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["bar",{"_index":657,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":715,"title":{},"body":{"components/NavigationComponent.html":{}}}],["bearer",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["behaviorsubject",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(null",{"_index":827,"title":{},"body":{"injectables/TaskService.html":{}}}],["behaviorsubject(true",{"_index":970,"title":{},"body":{"injectables/UIService.html":{}}}],["board",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{}}}],["board'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["board.component",{"_index":381,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["board.component.css",{"_index":343,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":344,"title":{},"body":{"components/BoardComponent.html":{}}}],["board__item",{"_index":363,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":55,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardmodule",{"_index":373,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["boardroutingmodule",{"_index":378,"title":{"modules/BoardRoutingModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/TasksCardListComponent.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["bottom",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["breakpointobserver",{"_index":676,"title":{},"body":{"components/NavigationComponent.html":{}}}],["breakpoints",{"_index":699,"title":{},"body":{"components/NavigationComponent.html":{}}}],["browse",{"_index":1102,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1078,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["calc(100",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["call",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{}}}],["cancel",{"_index":440,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["canload",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["catch",{"_index":892,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["catcherror",{"_index":485,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":489,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":362,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["center/cover",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":682,"title":{},"body":{"components/NavigationComponent.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["check",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":901,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["class",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["clear",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1062,"title":{},"body":{"index.html":{}}}],["close",{"_index":413,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["closecreate",{"_index":910,"title":{},"body":{"components/TasksComponent.html":{}}}],["cluster_appmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":374,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":375,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":376,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{}}}],["code",{"_index":1073,"title":{},"body":{"index.html":{}}}],["color",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["column",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["confirm",{"_index":750,"title":{},"body":{"components/SignupComponent.html":{}}}],["confirmpassword",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["confirmpassworderrorhandler",{"_index":744,"title":{},"body":{"components/SignupComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"components/TasksCardListComponent.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(breakpointobserver",{"_index":675,"title":{},"body":{"components/NavigationComponent.html":{}}}],["constructor(formbuilder",{"_index":746,"title":{},"body":{"components/SignupComponent.html":{}}}],["constructor(http",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["constructor(router",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":960,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(taskservice",{"_index":414,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(uiservice",{"_index":479,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":706,"title":{},"body":{"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["content",{"_index":357,"title":{},"body":{"components/BoardComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["controlname",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":97,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":985,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["created",{"_index":808,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtask",{"_index":428,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskService.html":{}}}],["createtask(task",{"_index":806,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskcomponent",{"_index":57,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":406,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creator",{"_index":573,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksComponent.html":{}}}],["custom",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["date",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationdate",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["decoration",{"_index":717,"title":{},"body":{"components/NavigationComponent.html":{}}}],["decorators",{"_index":686,"title":{},"body":{"components/NavigationComponent.html":{}}}],["default",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["defining",{"_index":984,"title":{},"body":{"interfaces/User.html":{}}}],["delete",{"_index":811,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{}}}],["deleted",{"_index":729,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletetask",{"_index":798,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":809,"title":{},"body":{"injectables/TaskService.html":{}}}],["dependencies",{"_index":86,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/PageNotFoundComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["destroy",{"_index":445,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["dev",{"_index":1069,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["development",{"_index":1065,"title":{},"body":{"index.html":{}}}],["direction",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["directives",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1077,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1082,"title":{},"body":{"index.html":{}}}],["display",{"_index":347,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["dist",{"_index":1081,"title":{},"body":{"index.html":{}}}],["divider",{"_index":371,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["documentation",{"_index":986,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doing",{"_index":575,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["doingtasks",{"_index":906,"title":{},"body":{"components/TasksComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["done",{"_index":576,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["done_all",{"_index":898,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["donetasks",{"_index":907,"title":{},"body":{"components/TasksComponent.html":{}}}],["dragdropmodule",{"_index":633,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":669,"title":{},"body":{"components/NavigationComponent.html":{}}}],["drop",{"_index":635,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":405,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1094,"title":{},"body":{"index.html":{}}}],["easy",{"_index":771,"title":{},"body":{"components/SignupComponent.html":{}}}],["edit",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["edited",{"_index":457,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["editing",{"_index":443,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["edittaskcomponent",{"_index":60,"title":{"components/EditTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["email",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["emailerrorhandler",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["empty",{"_index":439,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["end",{"_index":1093,"title":{},"body":{"index.html":{}}}],["enter",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["environment",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["error",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":499,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":99,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":490,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errors",{"_index":483,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["eventemitter",{"_index":417,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["execute",{"_index":1090,"title":{},"body":{"index.html":{}}}],["exist",{"_index":728,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expansion",{"_index":899,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["expirationdate",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["exports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["fab",{"_index":954,"title":{},"body":{"components/TasksComponent.html":{}}}],["fails",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":454,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["fff",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["field",{"_index":438,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/SignupComponent.html":{}}}],["fields",{"_index":772,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":1072,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":930,"title":{},"body":{"components/TasksComponent.html":{}}}],["first",{"_index":389,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["flag",{"_index":1084,"title":{},"body":{"index.html":{}}}],["flex",{"_index":348,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/TasksComponent.html":{}}}],["font",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["form",{"_index":423,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.invalid",{"_index":426,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["form.password.value?.length",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{}}}],["form.resetform",{"_index":435,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["form.value.description",{"_index":432,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["form.value.title",{"_index":431,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["formbuilder",{"_index":747,"title":{},"body":{"components/SignupComponent.html":{}}}],["formcontrol",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol(null",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":380,"title":{},"body":{"modules/BoardModule.html":{}}}],["forward",{"_index":857,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["forwardtooltip",{"_index":865,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["found",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["found.component",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.css",{"_index":724,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":725,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":722,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":726,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1046,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1096,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1075,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1060,"title":{},"body":{"index.html":{}}}],["getauthdata",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["getform",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmappedtask",{"_index":799,"title":{},"body":{"injectables/TaskService.html":{}}}],["getmappedtask(id",{"_index":812,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask",{"_index":800,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask(id",{"_index":814,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettasks",{"_index":801,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["getter",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{}}}],["getting",{"_index":1058,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["getupdatedtaskslist",{"_index":911,"title":{},"body":{"components/TasksComponent.html":{}}}],["go",{"_index":733,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["graph",{"_index":1103,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":146,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hammerjs",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["header",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":734,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":351,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1097,"title":{},"body":{"index.html":{}}}],["helps",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1064,"title":{},"body":{"index.html":{}}}],["heroku_url",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hideconfirmpassword",{"_index":742,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidepassword",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["home.component.css",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":62,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["http",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["http://localhost:3000/api/v2",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1071,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpclientmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":484,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":834,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":429,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["identifier",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import('./auth/auth.module').then(m",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./board/board.module').then(m",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{}}}],["inconvinience",{"_index":498,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["inform",{"_index":968,"title":{},"body":{"injectables/UIService.html":{}}}],["injectable",{"_index":165,"title":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["injectables",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{},"overview.html":{}}}],["input",{"_index":881,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["inputs",{"_index":863,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["intercept",{"_index":178,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":174,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":175,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":569,"title":{"interfaces/ITask.html":{},"interfaces/User.html":{}},"body":{"interfaces/ITask.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":570,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isauth",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["isauthenticated",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarktheme",{"_index":670,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ishandset",{"_index":671,"title":{},"body":{"components/NavigationComponent.html":{}}}],["isloading",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["isopen",{"_index":908,"title":{},"body":{"components/TasksComponent.html":{}}}],["isopened",{"_index":672,"title":{},"body":{"components/NavigationComponent.html":{}}}],["itask",{"_index":459,"title":{"interfaces/ITask.html":{}},"body":{"components/EditTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["item",{"_index":720,"title":{},"body":{"components/NavigationComponent.html":{}}}],["items",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":356,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1092,"title":{},"body":{"index.html":{}}}],["keep",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["later",{"_index":496,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["layoutmodule",{"_index":631,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"overview.html":{}}}],["letter",{"_index":977,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":390,"title":{},"body":{"modules/BoardModule.html":{}}}],["letter.pipe.ts",{"_index":976,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":979,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":719,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["list'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["list.component",{"_index":393,"title":{},"body":{"modules/BoardModule.html":{}}}],["list.component.css",{"_index":854,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.html",{"_index":855,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts",{"_index":853,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":870,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:13",{"_index":871,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:14",{"_index":868,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:15",{"_index":867,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:16",{"_index":869,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:17",{"_index":880,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:18",{"_index":866,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:26",{"_index":877,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:34",{"_index":879,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:44",{"_index":873,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:55",{"_index":875,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list/tasks",{"_index":392,"title":{},"body":{"modules/BoardModule.html":{},"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list:not(:last",{"_index":955,"title":{},"body":{"components/TasksComponent.html":{}}}],["listen",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadchildren",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":958,"title":{},"body":{"injectables/UIService.html":{}}}],["loadingsubscription",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["local",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["logged",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":215,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["login(email",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":64,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":727,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":731,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.boardmodule",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":713,"title":{},"body":{"components/NavigationComponent.html":{}}}],["map",{"_index":700,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["map((res",{"_index":844,"title":{},"body":{"injectables/TaskService.html":{}}}],["map(res",{"_index":942,"title":{},"body":{"components/TasksComponent.html":{}}}],["margin",{"_index":353,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["mat",{"_index":370,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/NavigationComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["matbuttonmodule",{"_index":636,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":752,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["match.validator",{"_index":774,"title":{},"body":{"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdividermodule",{"_index":638,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["materialmodule",{"_index":203,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":640,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":642,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":644,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":646,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":652,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":685,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matsidenavmodule",{"_index":648,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":660,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":961,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":655,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":965,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":650,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":658,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":367,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["media",{"_index":365,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["menu",{"_index":704,"title":{},"body":{"components/NavigationComponent.html":{}}}],["message",{"_index":969,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["min",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["mini",{"_index":953,"title":{},"body":{"components/TasksComponent.html":{}}}],["minimum",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":1045,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":419,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["model",{"_index":572,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/User.html":{}}}],["module",{"_index":83,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["modules",{"_index":85,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":492,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1098,"title":{},"body":{"index.html":{}}}],["multi",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":773,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":718,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigate",{"_index":1070,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":666,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["navigation.component.css",{"_index":667,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":668,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationcomponent",{"_index":66,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":732,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["never",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/LoginComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":488,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":421,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["ngmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/MaterialModule.html":{}}}],["ngondestroy",{"_index":447,"title":{},"body":{"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["none",{"_index":372,"title":{},"body":{"components/BoardComponent.html":{},"components/NavigationComponent.html":{},"components/TasksComponent.html":{}}}],["now",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettime",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{}}}],["number",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["object",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavigationComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["observables",{"_index":452,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["observe",{"_index":839,"title":{},"body":{"injectables/TaskService.html":{}}}],["observe(breakpoints.handset",{"_index":693,"title":{},"body":{"components/NavigationComponent.html":{}}}],["onbackward",{"_index":858,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onbackward(id",{"_index":872,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus",{"_index":860,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus(id",{"_index":874,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onclose",{"_index":410,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["ondelete",{"_index":861,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondelete(id",{"_index":876,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondestroy",{"_index":444,"title":{},"body":{"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["onforward",{"_index":862,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward(id",{"_index":878,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["onlogout",{"_index":673,"title":{},"body":{"components/NavigationComponent.html":{}}}],["onsave",{"_index":411,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["onsave(form",{"_index":420,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["onsignup",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["open",{"_index":920,"title":{},"body":{"components/TasksComponent.html":{}}}],["opencreate",{"_index":912,"title":{},"body":{"components/TasksComponent.html":{}}}],["optional",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/NavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":424,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["outputs",{"_index":412,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["overlay",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":1105,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1027,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["pagenotfoundcomponent",{"_index":68,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel:not(:last",{"_index":900,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["param",{"_index":837,"title":{},"body":{"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":462,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.get('taskid",{"_index":469,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["parammap.has('taskid",{"_index":467,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["partial",{"_index":822,"title":{},"body":{"injectables/TaskService.html":{}}}],["password",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["passworderrorhandler",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["passwords",{"_index":751,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["permissions",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":973,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map(result",{"_index":694,"title":{},"body":{"components/NavigationComponent.html":{}}}],["pipes",{"_index":974,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipetransform",{"_index":980,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["please",{"_index":493,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["position",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/UIService.html":{}}}],["post(`${api_url}login",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["primary",{"_index":709,"title":{},"body":{"components/NavigationComponent.html":{}}}],["private",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["probably",{"_index":730,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1083,"title":{},"body":{"index.html":{}}}],["production",{"_index":1085,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"components/TasksCardListComponent.html":{}}}],["properties",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{}}}],["protected",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":1095,"title":{},"body":{"index.html":{}}}],["provide",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{}}}],["providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["reactive",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{}}}],["readme",{"_index":1099,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":797,"title":{},"body":{"injectables/TaskService.html":{}}}],["redirect",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":820,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["reloadtasks",{"_index":802,"title":{},"body":{"injectables/TaskService.html":{}}}],["reloadtasks(tasks",{"_index":818,"title":{},"body":{"injectables/TaskService.html":{}}}],["repeat",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.body._id",{"_index":845,"title":{},"body":{"injectables/TaskService.html":{}}}],["res.body.description",{"_index":847,"title":{},"body":{"injectables/TaskService.html":{}}}],["res.body.status",{"_index":848,"title":{},"body":{"injectables/TaskService.html":{}}}],["res.body.tasks.map((task",{"_index":943,"title":{},"body":{"components/TasksComponent.html":{}}}],["res.body.title",{"_index":846,"title":{},"body":{"injectables/TaskService.html":{}}}],["reset",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["responding",{"_index":491,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["response.expiresin",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":695,"title":{},"body":{"components/NavigationComponent.html":{}}}],["results",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["rgba(0",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{},"injectables/UIService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["route",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditTaskComponent.html":{}}}],["router",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":216,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":125,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["routing.module.ts",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["run",{"_index":1066,"title":{},"body":{"index.html":{}}}],["running",{"_index":1086,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":465,"title":{},"body":{"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavigationComponent.html":{},"injectables/TaskService.html":{},"components/TasksComponent.html":{}}}],["save",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["saveauthdata",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1074,"title":{},"body":{"index.html":{}}}],["screen",{"_index":366,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["self",{"_index":714,"title":{},"body":{"components/NavigationComponent.html":{}}}],["serve",{"_index":1068,"title":{},"body":{"index.html":{}}}],["server",{"_index":482,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["service",{"_index":957,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/error.interceptor",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{}}}],["sharereplay",{"_index":929,"title":{},"body":{"components/TasksComponent.html":{}}}],["short",{"_index":758,"title":{},"body":{"components/SignupComponent.html":{}}}],["showsnackbar",{"_index":959,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":964,"title":{},"body":{"injectables/UIService.html":{}}}],["sidenav",{"_index":705,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sign",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["signup",{"_index":214,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["signup(username",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.css",{"_index":740,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":741,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":71,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":743,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":816,"title":{},"body":{"injectables/TaskService.html":{}}}],["size",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["snack",{"_index":967,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":963,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":497,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"index.html":{}}}],["space",{"_index":358,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["spacer",{"_index":716,"title":{},"body":{"components/NavigationComponent.html":{}}}],["spinner",{"_index":654,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1047,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.service.ts",{"_index":1112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":213,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":176,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:13",{"_index":179,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:19",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:133",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:151",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:160",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:168",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:176",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:23",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:77",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:45",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:57",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:67",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:77",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":739,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:101",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:114",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:14",{"_index":768,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":766,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":767,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:19",{"_index":748,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:26",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:46",{"_index":769,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:53",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:65",{"_index":753,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:77",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:89",{"_index":749,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/user.model.ts",{"_index":983,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/board/board",{"_index":394,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["src/app/board/board.component.ts",{"_index":342,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":345,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":346,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.module.ts",{"_index":379,"title":{},"body":{"modules/BoardModule.html":{}}}],["src/app/board/task.model.ts",{"_index":571,"title":{},"body":{"interfaces/ITask.html":{},"coverage.html":{}}}],["src/app/board/task.service.ts",{"_index":794,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/board/task.service.ts:101",{"_index":819,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:16",{"_index":833,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:17",{"_index":828,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:18",{"_index":830,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:19",{"_index":831,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:20",{"_index":805,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:29",{"_index":807,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:38",{"_index":817,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:49",{"_index":823,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:58",{"_index":810,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:67",{"_index":813,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:85",{"_index":815,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/task.service.ts:93",{"_index":826,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/board/tasks/create",{"_index":403,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/edit",{"_index":442,"title":{},"body":{"components/EditTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks",{"_index":852,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts",{"_index":903,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts:16",{"_index":924,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:17",{"_index":923,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:18",{"_index":926,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:19",{"_index":927,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:20",{"_index":921,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:21",{"_index":922,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:22",{"_index":925,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:23",{"_index":913,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:27",{"_index":918,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:45",{"_index":915,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:65",{"_index":916,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:75",{"_index":919,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:82",{"_index":914,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:89",{"_index":917,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/uppercase",{"_index":975,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:31",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:38",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts",{"_index":665,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/navigation.component.ts:14",{"_index":697,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:15",{"_index":690,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:16",{"_index":691,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:17",{"_index":684,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:18",{"_index":689,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:20",{"_index":696,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:22",{"_index":677,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:32",{"_index":679,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:44",{"_index":681,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:51",{"_index":680,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/navigation/navigation.component.ts:59",{"_index":678,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/core/page",{"_index":721,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module.ts",{"_index":630,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":478,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:16",{"_index":480,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:22",{"_index":481,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/ui.service",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":956,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:15",{"_index":962,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:22",{"_index":966,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1059,"title":{"index.html":{}},"body":{}}],["statements",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":688,"title":{},"body":{"components/NavigationComponent.html":{}}}],["status",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITask.html":{},"components/NavigationComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["sticky",{"_index":710,"title":{},"body":{"components/NavigationComponent.html":{}}}],["storage",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1080,"title":{},"body":{"index.html":{}}}],["string",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["subject",{"_index":458,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe(authstatus",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(isauth",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["subscribe(res",{"_index":433,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["subscription",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["subscriptions",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1100,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1101,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":928,"title":{},"body":{"components/TasksComponent.html":{}}}],["table",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":464,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["task",{"_index":407,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task._id",{"_index":944,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.component",{"_index":385,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["task.component.css",{"_index":408,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.html",{"_index":409,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["task.component.ts",{"_index":404,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:14",{"_index":416,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:18",{"_index":460,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:19",{"_index":461,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:20",{"_index":449,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:21",{"_index":422,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:27",{"_index":453,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:37",{"_index":418,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:42",{"_index":456,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:57",{"_index":455,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.component.ts:64",{"_index":450,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.creator",{"_index":946,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.description",{"_index":474,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.id",{"_index":472,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["task.model",{"_index":463,"title":{},"body":{"components/EditTaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.service",{"_index":425,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status",{"_index":945,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('doing",{"_index":938,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('done",{"_index":890,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status.includes('todo",{"_index":889,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.title",{"_index":473,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task/create",{"_index":384,"title":{},"body":{"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task/edit",{"_index":387,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/EditTaskComponent.html":{},"coverage.html":{}}}],["taskarrayresponsetype",{"_index":836,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/typealiases.html":{}}}],["taskid",{"_index":446,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["tasklistener",{"_index":795,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskresponsetype",{"_index":835,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["tasks.component.css",{"_index":904,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":905,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":936,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/create",{"_index":383,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/edit",{"_index":386,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["tasks/edit/:taskid",{"_index":395,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["tasks/tasks",{"_index":391,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks.component",{"_index":382,"title":{},"body":{"modules/BoardModule.html":{}}}],["taskscardlistcomponent",{"_index":73,"title":{"components/TasksCardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscomponent",{"_index":77,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskservice",{"_index":415,"title":{"injectables/TaskService.html":{}},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskslistlistener",{"_index":796,"title":{},"body":{"injectables/TaskService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["test",{"_index":1089,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1088,"title":{},"body":{"index.html":{}}}],["text",{"_index":360,"title":{},"body":{"components/BoardComponent.html":{},"components/NavigationComponent.html":{},"components/TasksComponent.html":{}}}],["theme",{"_index":683,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authlistenersubscription",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authservice",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authservice.autoauthuser",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getauthstatuslistener().subscribe(authstatus",{"_index":775,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavigationComponent.html":{}}}],["this.authservice.gettoken",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.login(this.form.email.value",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":702,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authservice.signup",{"_index":789,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(false",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(true",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussubscription",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussubscription.unsubscribe",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.backward",{"_index":884,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.breakpointobserver",{"_index":692,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.clearauthdata",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":437,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.destroy$.next",{"_index":476,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":477,"title":{},"body":{"components/EditTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.doingtasks",{"_index":937,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.donetasks",{"_index":939,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.drawer.close",{"_index":703,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.form.confirmpassword.haserror('mustmatch",{"_index":787,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.confirmpassword.haserror('required",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.confirmpassword.value",{"_index":792,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.email.haserror('email",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.haserror('required",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.value",{"_index":791,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('minlength",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('required",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.password.value",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.username.haserror('minlength",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.username.haserror('required",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.username.value",{"_index":790,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formbuilder.group",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.forward",{"_index":885,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.getauthdata",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettask(id).pipe",{"_index":843,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gettasks",{"_index":933,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.getupdatedtaskslist",{"_index":940,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.url}/${id",{"_index":842,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(`${this.url}/${id",{"_index":849,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(this.url",{"_index":840,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.post(`${api_url}signup",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url",{"_index":838,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.put(`${this.url}/${id",{"_index":841,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.isauth",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["this.isauthenticated",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarktheme",{"_index":701,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.isloading",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["this.isopen",{"_index":949,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.loadingsubscription",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.loadingsubscription.unsubscribe",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.loginform",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.onchangestatus(id",{"_index":886,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.onclose",{"_index":436,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.route.parammap.pipe(takeuntil(this.destroy$)).subscribe((parammap",{"_index":466,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.router.navigate",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/board",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{}}}],["this.router.navigate(['/user/login",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/user/signup",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.saveauthdata(token",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":971,"title":{},"body":{"injectables/UIService.html":{}}}],["this.task",{"_index":471,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskid",{"_index":468,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.tasklistener.asobservable",{"_index":829,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasklistener.next(task",{"_index":850,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.tasks",{"_index":931,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.pipe(map(tasks",{"_index":935,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks.push(task",{"_index":948,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice",{"_index":427,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{}}}],["this.taskservice.deletetask(id).subscribe",{"_index":882,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskservice.getmappedtask(id).topromise",{"_index":888,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskservice.getmappedtask(this.taskid).subscribe(task",{"_index":470,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["this.taskservice.gettasks().pipe",{"_index":941,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.reloadtasks([...this.tasks",{"_index":883,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskservice.tasklistener$.pipe(takeuntil(this.destroy$)).subscribe((task",{"_index":947,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.taskslistlistener$.pipe",{"_index":932,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskservice.updatetask(id",{"_index":891,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskservice.updatetaskslist(res.body.task",{"_index":434,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.taskslistlistener.asobservable",{"_index":832,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskslistlistener.next(tasks",{"_index":851,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.todotasks",{"_index":934,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(false",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["this.uiservice.loadingstatechanged.subscribe",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.uiservice.loadingstatechanged.subscribe(isloading",{"_index":788,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.uiservice.showsnackbar",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar('something",{"_index":893,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":500,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror",{"_index":486,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":503,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":430,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["todo",{"_index":574,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["todotasks",{"_index":909,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggle",{"_index":662,"title":{},"body":{"modules/MaterialModule.html":{}}}],["toggletheme",{"_index":674,"title":{},"body":{"components/NavigationComponent.html":{}}}],["token",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentimer",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar.mat",{"_index":708,"title":{},"body":{"components/NavigationComponent.html":{}}}],["top",{"_index":502,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{}}}],["track",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":737,"title":{},"body":{"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":978,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["translate",{"_index":738,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["true",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":494,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["tslib",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1110,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui.service",{"_index":487,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":235,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["undo",{"_index":897,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["unit",{"_index":1087,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":451,"title":{},"body":{"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["up",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{}}}],["update",{"_index":824,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask",{"_index":803,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":821,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(this.taskid",{"_index":475,"title":{},"body":{"components/EditTaskComponent.html":{}}}],["updatetaskslist",{"_index":804,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskslist(task",{"_index":825,"title":{},"body":{"injectables/TaskService.html":{}}}],["uppercase",{"_index":388,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":896,"title":{},"body":{"components/TasksCardListComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":377,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["url(/assets/img/home",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1076,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":37,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["usernameerrorhandler",{"_index":745,"title":{},"body":{"components/SignupComponent.html":{}}}],["valid",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validate",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validation",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.minlength(6",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.required",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":981,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":982,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["variable",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1113,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1063,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":972,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1091,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":698,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild('drawer",{"_index":687,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visibility",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/EditTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["went",{"_index":894,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["width",{"_index":349,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["wrap",{"_index":355,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["wrong",{"_index":895,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["z",{"_index":711,"title":{},"body":{"components/NavigationComponent.html":{}}}],["zone.js",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n                    Authenticate user automatically\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Authenticate user automatically\n   */\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    CoreModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'board',\n    loadChildren: () => \"import('./board/board.module').then(m => m.BoardModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'user',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigate(['/user/login']);\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoAuthUser\n                        \n                        \n                    \n                \n            \n            \n                \nautoAuthUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n                    Auto user authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:168\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:176\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     { token: any; expirationDate: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:77\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:133\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:160\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:151\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(username: string, email: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.isAuthenticated\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\n\n/**\n * API URL\n */\nconst API_URL = environment.apiUrl + '/user/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(\n    this.isAuthenticated\n  );\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get token.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  signup(\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n  ) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: User = { username, email, password, confirmPassword };\n    this.http.post(`${API_URL}signup`, authData).subscribe(\n      response => {\n        this.router.navigate(['/user/login']);\n        this.uiService.loadingStateChanged.next(false);\n      },\n      error => {\n        this.uiService.loadingStateChanged.next(false);\n      }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: User = { email, password };\n    this.http\n      .post(`${API_URL}login`, authData)\n      .subscribe(\n        response => {\n          const token = response.token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuthenticated = true;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar(\n              'Logged in successfully!',\n              null,\n              3000,\n              'bottom'\n            );\n            this.uiService.loadingStateChanged.next(true);\n            this.router.navigate(['/board']);\n          }\n        },\n        error => {\n          this.uiService.loadingStateChanged.next(false);\n        }\n      );\n  }\n\n  /**\n   * Auto user authentication.\n   */\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar(\n      'Logged out successfully!',\n      null,\n      3000,\n      'bottom'\n    );\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Board Component\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n -->\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                .board {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 40px auto 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.board__item {\n  margin: 0 5px;\n}\n\n@media only screen and (max-width: 1035px) {\n  .board__item {\n    margin: 0 20px;\n  }\n\n  mat-divider {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nBoardModule -->\n\nEditTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            TasksCardListComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BoardRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { BoardComponent } from './board.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CreateTaskComponent } from './tasks/create-task/create-task.component';\nimport { EditTaskComponent } from './tasks/edit-task/edit-task.component';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\nimport { TasksCardListComponent } from './tasks/tasks-card-list/tasks-card-list.component';\n\n@NgModule({\n  declarations: [BoardComponent, TasksComponent, CreateTaskComponent, EditTaskComponent, UppercaseFirstLetterPipe, TasksCardListComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, BoardRoutingModule, MaterialModule]\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardRoutingModule.html":{"url":"modules/BoardRoutingModule.html","title":"module - BoardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board.component';\nimport { EditTaskComponent } from './tasks/edit-task/edit-task.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BoardComponent\n  },\n  { path: 'tasks/edit/:taskId', component: EditTaskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nCoreModule -->\n\nNavigationComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nCoreModule->NavigationComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\n\n@NgModule({\n  declarations: [NavigationComponent, HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule],\n  exports: [NavigationComponent]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/create-task/create-task.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:37\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:21\n                \n            \n\n\n            \n                \n                    Create new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TaskService } from '../../task.service';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent {\n  @Output() close = new EventEmitter();\n\n  constructor(private taskService: TaskService) {}\n\n  /**\n   * Create new task.\n   */\n  onSave(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    this.taskService\n      .createTask({ id: null, title: form.value.title, description: form.value.description })\n      .subscribe(res => this.taskService.updateTasksList(res.body.task));\n\n    form.resetForm();\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        Title field must not be empty\n      \n    \n    \n      \n      \n        Description field must not be empty\n      \n    \n    \n      \n        SAVE\n      \n      \n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                mat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Title field must not be empty                                  Description field must not be empty                            SAVE                    CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTaskComponent.html":{"url":"components/EditTaskComponent.html","title":"component - EditTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/edit-task/edit-task.component.ts\n\n\n    \n        Description\n    \n    \n        Component for editing tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-task\n            \n\n            \n                styleUrls\n                ./edit-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                task\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/edit-task/edit-task.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:64\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:27\n                \n            \n\n\n            \n                \n                    Fetch task content.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:57\n                \n            \n\n\n            \n                \n                    Return to board.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:42\n                \n            \n\n\n            \n                \n                    Save edited task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITask\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/edit-task/edit-task.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { ITask } from '../../task.model';\nimport { TaskService } from '../../task.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Component for editing tasks\n */\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.css']\n})\nexport class EditTaskComponent implements OnInit, OnDestroy {\n  task: ITask;\n  private taskId: string;\n  private destroy$ = new Subject();\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) {}\n\n  /**\n   * Fetch task content.\n   */\n  ngOnInit() {\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('taskId')) {\n        this.taskId = paramMap.get('taskId');\n      }\n    });\n\n    this.taskService.getMappedTask(this.taskId).subscribe(task => {\n      this.task = { id: task.id, title: task.title, description: task.description };\n    });\n  }\n\n  /**\n   * Save edited task.\n   */\n  onSave(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    this.taskService\n      .updateTask(this.taskId, { title: form.value.title, description: form.value.description })\n      .subscribe(res => this.taskService.updateTasksList(res.body.task));\n\n    this.onClose();\n  }\n\n  /**\n   * Return to board.\n   */\n  onClose() {\n    this.router.navigate(['/board']);\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n        Title field must not be empty\n      \n    \n    \n      \n      \n        description field must not be empty\n      \n    \n    \n      \n        SAVE\n      \n      \n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./edit-task.component.css\n                \n                mat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Title field must not be empty                                  description field must not be empty                            SAVE                    CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:22\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:38\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => {\n        this.isAuth = isAuth;\n      });\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigate(['/user/signup']);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        devDo helps you to keep track of your project progress and never miss a\n        deadline.\n      \n      \n        Sign Up!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .home {\n  background: url(/assets/img/home-image.jpg) no-repeat center center/cover;\n  height: calc(100% - 64px);\n  position: relative;\n}\n\n.overlay {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.home__cta {\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  width: 30%;\n  min-width: 25rem;\n  height: 100%;\n}\n\n.home__cta p {\n  line-height: 1.6;\n  font-size: 1.2rem;\n}\n\n@media only screen and (max-width: 599px) {\n  .home {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    devDo helps you to keep track of your project progress and never miss a        deadline.                    Sign Up!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"todo\" | \"doing\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"todo\" | \"doing\" | \"done\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITask {\n  id: string;\n  title: string;\n  description: string;\n  status?: 'todo' | 'doing' | 'done';\n  creator?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> email.\n\n\n                    \n                        Returns :     \"Please enter your email\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:24\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:67\n                \n            \n\n\n            \n                \n                    Call log in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:57\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> password.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  hidePassword = true;\n  loginForm: FormGroup;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  get form() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   *  Handle log in form errors -> email.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'Please enter your email';\n    } else if (this.form.email.hasError('email')) {\n      return 'Please enter a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle log in form errors -> password.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'Please enter your password';\n    }\n    return null;\n  }\n\n  /**\n   * Call log in user.\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.authService.login(this.form.email.value, this.form.password.value);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      {{ emailErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ passwordErrorHandler() }}\n    \n  \n  \n    Log In\n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ emailErrorHandler() }}                      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}              {{ passwordErrorHandler() }}            Log In  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatCardModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                drawer\n                            \n                            \n                                isAuth\n                            \n                            \n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isOpened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/navigation.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:59\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscription\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:32\n                \n            \n\n\n            \n                \n                    Get authentication status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:51\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/navigation.component.ts:44\n                \n            \n\n\n            \n                \n                    Change theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/navigation.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  isOpened = false;\n  isAuth = false;\n  isDarkTheme = false;\n  private authListenerSubscription: Subscription;\n  @ViewChild('drawer', { static: false }) drawer: MatSidenav;\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Get authentication status\n   */\n  ngOnInit() {\n    this.isAuth = this.authService.getIsAuth();\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => {\n        this.isAuth = isAuth;\n      });\n  }\n\n  /**\n   * Change theme.\n   */\n  toggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n\n  /**\n   * Unsubscribe from subscription\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Board\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      \n        Log Out\n      \n    \n  \n  \n    \n      \n        menu\n      \n      devDo\n      \n      \n        \n          My Board\n        \n        \n          Sign Up\n        \n        \n          Log In\n        \n        \n          Log Out\n        \n      \n      \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.main-navigation {\n  display: flex;\n  align-self: baseline;\n}\n\n.spacer {\n  flex: 1 1 0;\n}\n\na {\n  text-decoration: none;\n  color: #fff;\n}\n\n.mat-nav-list .mat-list-item {\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Board                    Sign Up                    Log In                    Log Out                                menu            devDo                              My Board                          Sign Up                          Log In                          Log Out                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or have been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100% - 64px);\n}\n\n.heading {\n  font-size: 450%;\n}\n\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@media only screen and (max-width: 599px) {\n  .page-not-found {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or have been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPasswordErrorHandler\n                            \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                            \n                                usernameErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmPasswordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmPasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:89\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> confirm-password field.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:65\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"You must enter a valid email\" | \"This is not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:114\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:26\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:101\n                \n            \n\n\n            \n                \n                    Signup user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:77\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> password field.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            usernameErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nusernameErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:53\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :         \"You must enter a valid username\" | \"Username must have minimum 3 characters\"\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:46\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  signupForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.signupForm = this.formBuilder.group(\n      {\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get form() {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  usernameErrorHandler() {\n    if (this.form.username.hasError('required')) {\n      return 'You must enter a valid username';\n    } else if (this.form.username.hasError('minlength')) {\n      return 'Username must have minimum 3 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'You must enter a valid email';\n    } else if (this.form.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> password field.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.form.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> confirm-password field.\n   */\n  confirmPasswordErrorHandler() {\n    if (this.form.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.form.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Signup user\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(isLoading => (this.isLoading = isLoading));\n    this.authService.signup(\n      this.form.username.value,\n      this.form.email.value,\n      this.form.password.value,\n      this.form.confirmPassword.value\n    );\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ usernameErrorHandler() }}\n  \n\n  \n    \n    {{ emailErrorHandler() }}\n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    {{ form.password.value?.length || 0 }}/6\n    \n      {{ passwordErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ confirmPasswordErrorHandler() }}\n    \n  \n  \n    Sign Up\n  \n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ usernameErrorHandler() }}            {{ emailErrorHandler() }}                  {{ hidePassword ? \"visibility_off\" : \"visibility\" }}        {{ form.password.value?.length || 0 }}/6          {{ passwordErrorHandler() }}                      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}              {{ confirmPasswordErrorHandler() }}            Sign Up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/task.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                taskListener\n                            \n                            \n                                taskListener$\n                            \n                            \n                                    Private\n                                tasksListListener\n                            \n                            \n                                tasksListListener$\n                            \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getMappedTask\n                            \n                            \n                                    Private\n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                reloadTasks\n                            \n                            \n                                updateTask\n                            \n                            \n                                updateTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/task.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:29\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:58\n                \n            \n\n\n            \n                \n                    Delete task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:67\n                \n            \n\n\n            \n                \n                    Map task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:85\n                \n            \n\n\n            \n                \n                    Get a single task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:38\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadTasks\n                        \n                        \n                    \n                \n            \n            \n                \nreloadTasks(tasks: ITask[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:101\n                \n            \n\n\n            \n                \n                    Reload tasks.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                ITask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> tasks list.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:49\n                \n            \n\n\n            \n                \n                    Update task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTasksList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTasksList(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/task.service.ts:93\n                \n            \n\n\n            \n                \n                    Update tasks list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/task.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/task.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasksListListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/task.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksListListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tasksListListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/task.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/task.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ITask } from './task.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\n\ntype TaskResponseType = HttpResponse;\ntype TaskArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private readonly URL = environment.apiUrl + '/tasks';\n  private taskListener = new BehaviorSubject(null);\n  taskListener$ = this.taskListener.asObservable();\n  private tasksListListener = new BehaviorSubject(null);\n  tasksListListener$ = this.tasksListListener.asObservable();\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Create a new task.\n   * @param task -> created task\n   * @returns observable.\n   */\n  createTask(task: ITask): Observable {\n    return this.http.post(`${this.URL}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Create a new task.\n   * @param task -> created task.\n   * @returns observable.\n   */\n  getTasks(): Observable {\n    this.uiService.loadingStateChanged.next(true);\n    return this.http.get(this.URL, { observe: 'response' });\n  }\n\n  /**\n   * Update task.\n   * @param id -> task id.\n   * @param task -> Partial task.\n   * @returns observable.\n   */\n  updateTask(id: string, task: Partial): Observable {\n    return this.http.put(`${this.URL}/${id}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Delete task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  deleteTask(id: string): Observable> {\n    return this.http.delete(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Map task.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getMappedTask(id: string): Observable {\n    return this.getTask(id).pipe(\n      map((res: any) => {\n        return {\n          id: res.body._id,\n          title: res.body.title,\n          description: res.body.description,\n          status: res.body.status\n        };\n      })\n    );\n  }\n\n  /**\n   * Get a single task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  private getTask(id: string): Observable {\n    return this.http.get(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Update tasks list.\n   * @param task -> created task.\n   */\n  updateTasksList(task: ITask) {\n    this.taskListener.next(task);\n  }\n\n  /**\n   * Reload tasks.\n   * @param tasks -> tasks list.\n   */\n  reloadTasks(tasks: ITask[]) {\n    this.tasksListListener.next(tasks);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksCardListComponent.html":{"url":"components/TasksCardListComponent.html","title":"component - TasksCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-card-list\n            \n\n            \n                styleUrls\n                ./tasks-card-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backward\n                            \n                            \n                                    Private\n                                forward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBackward\n                            \n                            \n                                    Private\n                                    Async\n                                onChangeStatus\n                            \n                            \n                                onDelete\n                            \n                            \n                                onForward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backTooltip\n                            \n                            \n                                forwardTooltip\n                            \n                            \n                                isLoading\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forwardTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         ITask[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \nonBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:44\n                \n            \n\n\n            \n                \n                    Change status on backward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            onChangeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeStatus(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:55\n                \n            \n\n\n            \n                \n                    Change status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:26\n                \n            \n\n\n            \n                \n                    Delete task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \nonForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:34\n                \n            \n\n\n            \n                \n                    Change status on forward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            backward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ITask } from '../../task.model';\nimport { TaskService } from '../../task.service';\nimport { UIService } from '../../../shared/ui.service';\n\n@Component({\n  selector: 'app-tasks-card-list',\n  templateUrl: './tasks-card-list.component.html',\n  styleUrls: ['./tasks-card-list.component.css']\n})\nexport class TasksCardListComponent {\n  @Input() tasks: ITask[];\n  @Input() title: string;\n  @Input() forwardTooltip: string;\n  @Input() backTooltip: string;\n  @Input() isLoading: boolean;\n  private forward = false;\n  private backward = false;\n\n  constructor(private taskService: TaskService, private uiService: UIService) {}\n\n  /**\n   * Delete task.\n   * @param id -> task id.\n   */\n  onDelete(id: string) {\n    this.taskService.deleteTask(id).subscribe(() => this.taskService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Change status on forward.\n   * @param id -> task id.\n   */\n  onForward(id: string) {\n    this.backward = false;\n    this.forward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status on backward.\n   * @param id -> task id.\n   */\n  onBackward(id: string) {\n    this.forward = false;\n    this.backward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status.\n   * @param id -> task id.\n   * @returns promise\n   */\n  private async onChangeStatus(id: string): Promise {\n    try {\n      const task = await this.taskService.getMappedTask(id).toPromise();\n\n      let status: 'todo' | 'doing' | 'done';\n\n      if (this.forward) {\n        status = task.status.includes('todo') ? 'doing' : 'done';\n      }\n\n      if (this.backward) {\n        status = task.status.includes('done') ? 'doing' : 'todo';\n      }\n\n      this.taskService.updateTask(id, { status }).subscribe(res => this.taskService.updateTasksList(res.body.task));\n    } catch (error) {\n      this.uiService.showSnackBar('Something went wrong! Try again later.', null, 5000, 'top');\n    }\n  }\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    \n      {{ task.title | uppercaseFirstLetter }}\n    \n\n    \n      {{ task.description | uppercaseFirstLetter }}\n    \n\n    \n      \n        undo\n      \n      \n        done\n        done_all\n      \n\n      \n        edit\n      \n      \n        delete\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tasks-card-list.component.css\n                \n                mat-expansion-panel:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}            {{ task.title | uppercaseFirstLetter }}              {{ task.description | uppercaseFirstLetter }}                      undo                    done        done_all                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                doingTasks$\n                            \n                            \n                                doneTasks$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                tasks\n                            \n                            \n                                tasks$\n                            \n                            \n                                todoTasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreate\n                            \n                            \n                                    Private\n                                getTasks\n                            \n                            \n                                    Private\n                                getUpdatedTasksList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeCreate\n                        \n                        \n                    \n                \n            \n            \n                \ncloseCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:82\n                \n            \n\n\n            \n                \n                    Close Create Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:45\n                \n            \n\n\n            \n                \n                    Get tasks.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUpdatedTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedTasksList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:65\n                \n            \n\n\n            \n                \n                    Get new task.\n\n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:89\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreate\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:75\n                \n            \n\n\n            \n                \n                    Open Create Component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doingTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doneTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITask[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ITask } from '../task.model';\nimport { TaskService } from '../task.service';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil, map, switchMap, shareReplay, finalize } from 'rxjs/operators';\n\n/**\n * Tasks List Component\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n  isOpen = false;\n  isLoading = false;\n  tasks$: Observable;\n  todoTasks$: Observable;\n  doingTasks$: Observable;\n  doneTasks$: Observable;\n  private tasks: ITask[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n\n    this.tasks$ = this.taskService.tasksListListener$.pipe(\n      switchMap(() => this.getTasks()),\n      shareReplay()\n    );\n\n    this.todoTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('todo'))));\n    this.doingTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('doing'))));\n    this.doneTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('done'))));\n\n    this.getUpdatedTasksList();\n  }\n\n  /**\n   * Get tasks.\n   */\n  private getTasks(): Observable {\n    return this.taskService.getTasks().pipe(\n      finalize(() => (this.isLoading = false)),\n      map(res => {\n        return res.body.tasks.map((task: any) => {\n          return {\n            id: task._id,\n            title: task.title,\n            description: task.description,\n            status: task.status,\n            creator: task.creator\n          };\n        });\n      })\n    );\n  }\n\n  /**\n   * Get new task.\n   */\n  private getUpdatedTasksList(): Subscription {\n    return this.taskService.taskListener$.pipe(takeUntil(this.destroy$)).subscribe((task: ITask) => {\n      this.tasks.push(task);\n      this.taskService.reloadTasks([...this.tasks]);\n    });\n  }\n\n  /**\n   * Open Create Component.\n   */\n  openCreate() {\n    this.isOpen = true;\n  }\n\n  /**\n   * Close Create Component.\n   */\n  closeCreate() {\n    this.isOpen = false;\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    add\n  \n\n\n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.css\n                \n                .tasks-container {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.list {\n  width: 300px;\n}\n\n.action {\n  display: flex;\n  margin: 20px;\n}\n\n.action .mat-mini-fab {\n  margin-left: auto;\n}\n\n@media only screen and (max-width: 1035px) {\n  mat-divider {\n    display: none;\n  }\n\n  app-tasks-card-list:not(:last-child) {\n    margin-bottom: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:22\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  MatSnackBar,\n  MatSnackBarVerticalPosition\n} from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(\n    message: string,\n    action: any,\n    duration: number,\n    position: MatSnackBarVerticalPosition\n  ) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return;\n    }\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for defining the data-authentication model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  username?: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            interface\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/board/task.model.ts\n            \n            interface\n            ITask\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/board/task.service.ts\n            \n            injectable\n            TaskService\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/app/board/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/board/tasks/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n            \n            component\n            TasksCardListComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/board/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.0.2\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            core-js : ^2.6.10\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 8.0.2.\nDocumentation\nThe documentation for this project can be found here.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nCoreModule->NavigationComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nBoardModule -->\n\nEditTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nCoreModule -->\n\nNavigationComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskArrayResponseType   (src/.../task.service.ts)\n                        \n                        \n                            TaskResponseType   (src/.../task.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/board/task.service.ts\n    \n    \n        \n            \n                \n                    \n                    TaskArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../auth.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user/'\n                        \n                    \n\n                \n                    \n                        API URL\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: HEROKU_URL\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v2'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
