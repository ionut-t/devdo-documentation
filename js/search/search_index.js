var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.346,1,1.009]],["body/components/AppComponent.html",[0,0.615,1,1.721,2,1.695,3,0.242,4,0.214,5,1.337,6,1.337,7,1.337,8,1.337,9,0.214,10,3.145,11,1.189,12,3.197,13,1.599,14,2.441,15,1.261,16,2.418,17,2.031,18,1.695,19,5.611,20,1.695,21,4.966,22,0.575,23,1.196,24,2.611,25,0.838,26,2.3,27,2.479,28,1.062,29,3.693,30,0.838,31,0.023,32,1.061,33,0.614,34,0.743,35,3.693,36,3.744,37,3.093,38,0.89,39,1.261,40,0.405,41,0.271,42,3.693,43,0.242,44,0.301,45,1.189,46,3.693,47,0.838,48,1.798,49,1.798,50,1.337,51,2.173,52,1.337,53,1.337,54,1,55,1.337,56,1.059,57,1.189,58,1.337,59,1,60,1.337,61,1,62,1.337,63,1,64,1.337,65,1,66,1.189,67,1.337,68,1.059,69,1.337,70,1,71,1.337,72,1.059,73,1.189,74,1.189,75,1.337,76,1.059,77,1.337,78,1.059,79,1.337,80,1,81,1.189,82,1.059,83,1.337,84,1.337,85,0.011,86,0.015,87,0.011]],["title/modules/AppModule.html",[88,0.848,89,2.397]],["body/modules/AppModule.html",[1,2.012,3,0.253,4,0.224,9,0.224,17,1.108,31,0.023,40,0.558,41,0.284,43,0.253,44,0.315,47,0.877,85,0.012,86,0.016,87,0.012,88,0.931,89,4.851,90,1.244,91,1.681,92,2.849,93,2.849,94,2.849,95,1.399,96,3.291,97,3.291,98,3.291,99,3.291,100,3.291,101,3.48,102,4.068,103,4.068,104,4.068,105,2.541,106,1.918,107,1.486,108,3.864,109,2.092,110,5.118,111,4.359,112,2.914,113,1.968,114,5.118,115,3.864,116,5.118,117,5.739,118,2.219,119,2.219,120,3.864,121,3.864,122,3.864,123,3.864,124,5.118,125,5.118,126,5.118,127,2.727]],["title/modules/AppRoutingModule.html",[88,0.848,101,1.875]],["body/modules/AppRoutingModule.html",[0,0.55,3,0.291,4,0.257,9,0.257,31,0.023,37,2.762,40,0.541,41,0.325,43,0.291,44,0.361,61,1.514,65,1.514,66,1.802,85,0.014,86,0.017,87,0.014,90,1.428,95,1.606,101,2.981,109,1.812,113,2.151,128,3.776,129,3.02,130,3.266,131,3.81,132,1.929,133,4.434,134,3.81,135,4.434,136,4.434,137,3.02,138,3.776,139,2.201,140,4.52,141,2.762,142,4.765,143,4.434,144,4.434,145,3.776,146,4.434,147,4.434,148,3.81,149,4.434,150,4.434]],["title/guards/AuthGuard.html",[134,2.397,151,2.397]],["body/guards/AuthGuard.html",[3,0.263,4,0.232,9,0.232,11,1.291,12,2.135,13,1.291,22,0.624,23,1.263,25,0.91,26,2.496,27,2.537,28,1.121,30,1.19,31,0.023,32,0.992,33,0.872,34,1.055,38,0.965,40,0.505,41,0.294,43,0.263,44,0.326,45,1.291,85,0.012,86,0.016,87,0.012,132,1.744,134,3.571,139,1.99,145,5.279,151,3.571,152,4.008,153,3.413,154,5.873,155,5.243,156,4.579,157,4.008,158,5.243,159,4.008,160,3.571,161,2.433,162,5.243,163,3.953,164,5.243,165,3.953,166,5.243,167,5.243,168,2.901,169,4.465,170,3.265,171,1.79,172,1.368,173,2.496,174,2.302,175,1.368,176,4.406,177,4.008,178,1.79,179,4.008]],["title/interceptors/AuthInterceptor.html",[103,2.192,180,2.192]],["body/interceptors/AuthInterceptor.html",[3,0.28,4,0.247,9,0.247,11,1.375,13,1.375,22,0.664,23,1.315,25,0.969,26,2.659,27,2.58,28,1.168,30,1.24,31,0.023,32,1.033,33,0.908,34,1.099,37,3.401,38,1.028,40,0.491,41,0.313,43,0.28,44,0.348,45,1.375,85,0.013,86,0.017,87,0.013,103,3.401,118,2.452,139,2.711,171,1.864,173,2.659,178,1.457,180,3.401,181,3.636,182,3.636,183,4.651,184,4.269,185,4.651,186,5.407,187,5.129,188,5.407,189,4.269,190,3.72,191,5.461,192,5.461,193,3.636,194,4.651,195,5.461,196,4.269,197,4.269,198,4.269,199,4.269,200,4.269,201,4.269,202,4.269]],["title/modules/AuthModule.html",[88,0.848,203,2.397]],["body/modules/AuthModule.html",[3,0.283,4,0.25,9,0.25,31,0.023,40,0.557,41,0.317,43,0.283,44,0.352,47,0.981,63,1.822,70,1.822,85,0.013,86,0.017,87,0.013,88,1.04,90,1.391,91,1.879,92,3.006,93,2.144,94,2.144,95,1.564,105,2.732,106,2.144,107,1.661,109,2.249,113,2.116,119,2.481,203,4.856,204,3.679,205,3.679,206,3.679,207,4.193,208,2.929,209,4.319,210,3.16,211,2.301,212,4.149,213,2.144,214,3.257,215,3.679,216,3.679,217,3.679]],["title/modules/AuthRoutingModule.html",[88,0.848,207,2.192]],["body/modules/AuthRoutingModule.html",[0,0.574,3,0.311,4,0.275,9,0.275,31,0.023,40,0.537,41,0.348,43,0.311,44,0.386,63,1.579,70,1.579,82,1.361,85,0.015,86,0.018,87,0.015,90,1.528,95,1.718,109,1.939,113,2.243,129,3.231,130,3.367,131,3.974,132,2.064,139,2.355,140,4.304,142,4.04,207,3.634,216,4.04,217,4.04,218,4.744,219,3.577,220,2.954,221,4.744,222,4.744,223,3.577]],["title/injectables/AuthService.html",[27,1.353,171,1.201]],["body/injectables/AuthService.html",[3,0.114,4,0.101,9,0.101,12,0.928,22,0.271,23,0.682,25,0.396,27,1.089,28,1.388,30,1.213,31,0.023,32,1.01,33,0.986,34,1.075,36,2.136,37,3.69,38,1.473,39,1.66,40,0.435,41,0.128,43,0.114,44,0.142,45,0.561,57,0.912,82,1.628,85,0.005,86,0.009,87,0.005,107,1.377,118,1.001,132,0.758,139,2.742,156,3.491,161,2.257,168,2.884,170,2.826,171,0.967,172,0.595,174,1.001,175,2.342,176,2.136,178,1.938,190,1.93,215,2.413,219,2.136,220,1.764,224,1.001,225,1.314,226,0.767,227,3.58,228,3.58,229,5.529,230,3.58,231,2.7,232,2.7,233,4.124,234,4.124,235,3.513,236,2.833,237,4.124,238,4.124,239,4.124,240,4.124,241,2.833,242,2.833,243,2.833,244,1.314,245,3.11,246,2.23,247,2.833,248,2.136,249,1.742,250,2.833,251,3.312,252,4.124,253,4.124,254,1.742,255,1.314,256,1.742,257,2.833,258,2.833,259,2.369,260,2.833,261,2.342,262,1.742,263,3.513,264,1.742,265,2.833,266,1.742,267,1.742,268,2.833,269,1.742,270,2.833,271,2.833,272,3.638,273,1.742,274,2.569,275,1.742,276,2.833,277,1.742,278,2.413,279,2.833,280,5.523,281,4.863,282,1.742,283,2.413,284,2.833,285,3.049,286,1.742,287,2.833,288,2.413,289,2.833,290,3.11,291,1.742,292,2.136,293,1.297,294,1.222,295,1.87,296,2.833,297,1.406,298,1.742,299,1.742,300,1.742,301,2.136,302,1.742,303,1.93,304,1.085,305,1.484,306,1.187,307,1.314,308,1.085,309,1.484,310,1.742,311,0.712,312,1.484,313,4.124,314,2.833,315,1.742,316,1.742,317,1.742,318,1.93,319,2.136,320,1.742,321,1.742,322,1.001,323,1.742,324,1.742,325,2.833,326,1.742,327,1.742,328,2.833,329,2.413,330,1.742,331,3.049,332,1.742,333,2.833,334,2.833,335,1.908,336,2.833,337,1.93,338,1.742,339,2.833,340,1.742,341,2.833,342,1.742,343,1.742,344,0.865,345,1.742,346,1.742,347,1.742,348,1.742,349,1.742,350,1.742,351,1.742,352,1.742,353,1.742,354,1.742,355,1.742,356,1.742,357,1.742,358,1.742,359,1.742,360,1.742,361,1.742,362,1.742,363,1.742,364,1.742,365,1.484,366,1.187,367,1.742,368,1.742,369,1.742]],["title/components/BoardComponent.html",[0,0.346,54,0.952]],["body/components/BoardComponent.html",[0,0.605,1,1.008,2,1.64,3,0.23,4,0.204,5,1.273,6,1.273,7,1.273,8,1.273,9,0.204,11,1.132,13,1.547,14,2.38,15,1.2,16,2.402,17,2.018,18,1.64,20,1.64,22,0.547,23,1.157,24,2.558,25,1.242,28,1.027,31,0.023,32,0.908,38,0.847,39,1.2,40,0.286,41,0.258,43,0.23,44,0.286,47,0.798,48,1.739,49,1.739,50,1.273,51,2.129,52,1.273,53,1.273,54,1.592,55,1.273,56,1.008,57,1.132,58,1.273,59,0.952,60,1.273,61,0.952,62,1.273,63,0.952,64,1.273,65,0.952,66,1.132,67,1.273,68,1.008,69,1.273,70,0.952,71,1.273,72,1.008,73,1.132,74,1.132,75,1.273,76,1.008,77,1.273,78,1.008,79,1.273,80,0.952,81,1.132,82,1.008,83,1.273,84,1.273,85,0.011,86,0.015,87,0.011,141,3.834,344,2.716,370,2.995,371,5.471,372,4.803,373,3.516,374,3.516,375,2.385,376,2.559,377,2.385,378,2.651,379,2.19,380,2.995,381,2.915,382,3.516,383,2.19,384,4.091,385,2.395,386,1.873,387,2.995,388,2.995,389,2.395,390,1.873,391,2.019,392,4.803,393,3.516,394,2.395,395,2.395,396,2.395,397,2.995,398,2.995,399,1.873,400,2.995,401,2.995]],["title/modules/BoardModule.html",[88,0.848,402,2.397]],["body/modules/BoardModule.html",[3,0.248,4,0.219,9,0.219,31,0.023,40,0.566,41,0.278,43,0.248,44,0.308,47,0.859,54,1.758,56,1.862,72,1.862,74,1.626,76,1.862,85,0.012,86,0.016,87,0.012,88,0.912,90,1.219,91,1.647,92,2.82,93,1.879,94,1.879,95,1.37,105,2.506,106,1.879,107,1.455,109,2.063,113,1.941,119,2.173,141,2.357,208,2.825,210,2.899,211,2.016,212,3.806,213,1.879,214,2.854,402,4.915,403,3.223,404,3.223,405,3.223,406,4.044,407,4.044,408,4.044,409,3.784,410,5.048,411,3.223,412,3.784,413,3.784,414,2.854,415,3.784,416,3.223,417,2.854,418,3.784,419,3.784,420,2.854,421,3.784,422,3.784]],["title/modules/BoardRoutingModule.html",[88,0.848,407,2.192]],["body/modules/BoardRoutingModule.html",[0,0.496,3,0.331,4,0.292,9,0.292,31,0.023,40,0.529,41,0.37,43,0.331,44,0.411,54,1.639,85,0.016,86,0.019,87,0.016,90,1.624,95,1.827,109,2.061,113,2.329,129,3.435,130,3.458,131,4.125,132,2.195,139,2.504,140,3.435,223,3.803,407,3.772,411,4.296,423,5.044]],["title/modules/CoreModule.html",[88,0.848,102,2.192]],["body/modules/CoreModule.html",[3,0.272,4,0.24,9,0.24,17,1.188,31,0.023,40,0.552,41,0.304,43,0.272,44,0.338,47,0.941,61,1.802,65,1.802,66,1.334,85,0.013,86,0.017,87,0.013,88,0.998,90,1.334,91,1.803,92,2.948,93,2.057,94,2.057,95,2.15,101,3.547,102,4.473,105,2.66,106,2.057,107,1.593,109,2.19,113,2.06,119,2.38,137,2.822,138,3.529,208,2.897,210,3.077,211,2.208,214,3.124,424,3.529,425,3.529,426,3.529,427,3.529,428,4.415,429,4.143,430,4.143,431,4.143]],["title/components/CreateTaskComponent.html",[0,0.346,56,1.009]],["body/components/CreateTaskComponent.html",[0,0.445,1,0.497,2,0.963,3,0.114,4,0.1,5,0.627,6,1.021,7,0.627,8,0.627,9,0.1,11,1.868,13,0.908,14,1.552,15,0.591,16,2.112,17,1.774,18,0.963,20,0.963,22,0.555,23,0.679,24,1.788,25,0.393,28,1.323,30,0.393,31,0.023,32,0.675,33,0.807,34,0.349,36,2.126,38,1.284,39,1.403,40,0.395,41,0.127,43,0.114,44,0.141,45,0.558,47,0.393,48,1.021,49,1.021,50,0.627,51,1.489,52,0.627,53,0.627,54,0.469,55,0.627,56,1.179,57,2.036,58,0.627,59,0.469,60,0.627,61,0.469,62,0.627,63,0.469,64,0.627,65,0.469,66,0.558,67,0.627,68,0.497,69,0.627,70,0.469,71,0.627,72,0.497,73,1.149,74,0.908,75,0.627,76,0.497,77,0.627,78,0.497,79,0.627,80,0.469,81,0.558,82,0.497,83,0.627,84,0.627,85,0.005,86,0.009,87,0.005,172,0.591,175,1.746,178,1.82,190,1.921,213,0.86,226,0.763,261,1.656,283,2.402,293,0.627,294,0.591,295,2.049,311,0.708,331,1.475,335,1.9,337,1.921,344,2.246,375,2.408,376,1.9,377,1.771,378,1.306,381,1.502,383,1.079,385,1.18,386,0.923,389,1.18,390,0.923,391,1.62,399,0.923,414,4.719,432,5.33,433,1.475,434,2.402,435,2.82,436,2.429,437,3.594,438,3.566,439,2.82,440,2.689,441,4.525,442,3.566,443,3.566,444,3.566,445,4.85,446,4.85,447,2.8,448,4.11,449,4.11,450,2.126,451,4.525,452,2.126,453,3.107,454,1.18,455,2.584,456,2.937,457,2.82,458,2.689,459,1.732,460,1.732,461,2.56,462,1.732,463,1.732,464,1.921,465,2.126,466,2.041,467,1.732,468,3.482,469,1.732,470,3.038,471,1.732,472,4.694,473,2.689,474,1.732,475,1.732,476,3.099,477,1.732,478,1.732,479,1.732,480,1.732,481,4.11,482,3.412,483,1.732,484,1.732,485,2.82,486,2.126,487,1.306,488,2.429,489,1.306,490,1.18,491,1.306,492,1.732,493,2.126,494,1.921,495,2.82,496,1.732,497,1.732,498,1.732,499,2.82,500,4.11,501,2.82,502,1.732,503,1.732,504,1.732,505,1.732,506,1.306,507,1.306,508,1.732,509,1.732,510,1.732,511,2.402,512,1.732,513,2.402,514,2.402,515,3.501,516,1.732,517,2.82,518,1.732,519,1.732,520,1.732,521,1.732,522,2.402,523,1.475,524,2.82,525,2.82,526,2.402,527,2.402,528,1.732,529,1.732,530,1.732,531,1.732,532,1.306,533,1.306,534,1.732,535,2.402,536,1.732,537,1.756,538,2.82,539,1.4,540,1.756,541,1.732,542,1.475,543,1.306,544,1.475,545,1.732,546,2.402,547,1.18,548,1.732,549,2.8,550,1.306,551,1.475,552,1.18,553,1.732,554,1.732,555,1.732,556,1.732,557,1.732,558,1.18,559,1.18,560,1.732,561,1.306,562,1.732]],["title/components/DialogComponent.html",[0,0.346,59,0.952]],["body/components/DialogComponent.html",[0,0.537,1,1.005,2,1.636,3,0.23,4,0.203,5,1.268,6,1.268,7,1.268,8,1.268,9,0.203,15,1.196,16,2.401,17,2.017,18,1.636,20,1.636,22,0.545,25,0.795,28,1.024,30,0.795,31,0.023,32,1.033,33,0.797,34,0.705,40,0.39,41,0.257,43,0.23,44,0.285,47,0.795,48,1.735,49,1.735,50,1.268,51,2.126,52,1.268,53,1.268,54,0.948,55,1.268,56,1.005,57,1.128,58,1.268,59,1.589,60,1.268,61,0.948,62,1.268,63,0.948,64,1.268,65,0.948,66,1.128,67,1.268,68,1.005,69,1.268,70,0.948,71,1.268,72,1.005,73,1.128,74,1.128,75,1.268,76,1.005,77,1.268,78,1.005,79,1.268,80,0.948,81,1.128,82,1.005,83,1.268,84,1.268,85,0.011,86,0.015,87,0.011,226,1.297,251,3.998,261,1.636,366,2.385,375,1.739,376,2.552,377,1.739,381,1.866,386,1.866,390,1.866,391,2.012,399,1.866,453,1.739,535,4.08,552,2.385,558,2.385,559,2.385,563,2.641,564,3.612,565,4.651,566,4.08,567,4.651,568,3.502,569,4.187,570,3.502,571,2.983,572,3.502,573,3.502,574,2.983,575,2.983,576,2.385,577,1.626,578,2.983,579,4.791,580,4.791,581,3.612,582,3.502,583,2.983,584,3.502,585,3.502,586,2.641,587,3.502,588,3.502]],["title/interfaces/DialogData.html",[569,2.397,577,1.633]],["body/interfaces/DialogData.html",[0,0.578,3,0.315,4,0.278,9,0.278,16,1.641,17,1.378,18,1.641,20,1.641,22,0.748,31,0.023,33,0.978,40,0.479,41,0.353,43,0.315,44,0.392,59,1.301,85,0.015,86,0.018,87,0.015,226,1.592,251,3.273,261,2.36,386,3.529,453,3.288,563,3.624,564,3.624,565,4.093,566,4.093,567,4.093,569,4.329,574,4.093,575,4.093,576,3.273,577,2.231,578,4.093,589,3.273]],["title/modules/DialogModule.html",[88,0.848,408,2.192]],["body/modules/DialogModule.html",[3,0.297,4,0.262,9,0.262,31,0.023,40,0.529,41,0.333,43,0.297,44,0.369,47,1.029,59,1.957,85,0.014,86,0.018,87,0.014,88,1.092,90,1.46,91,1.972,92,3.074,93,2.25,94,2.25,95,2.242,105,2.816,106,2.25,107,1.743,109,2.318,113,2.181,208,2.965,210,3.258,211,2.415,408,4.392,590,3.86,591,3.86,592,4.533,593,3.86,594,4.533,595,5.673,596,4.533,597,3.418]],["title/modules/EmailModule.html",[88,0.848,598,2.397]],["body/modules/EmailModule.html",[3,0.292,4,0.258,9,0.258,31,0.023,40,0.553,41,0.327,43,0.292,44,0.363,47,1.012,80,1.837,81,1.435,82,1.278,85,0.014,86,0.017,87,0.014,88,1.073,90,1.435,91,1.939,92,3.05,93,2.212,94,2.212,95,1.614,105,2.786,106,2.212,107,1.713,109,2.293,113,2.158,119,2.559,208,2.952,210,3.223,211,2.374,212,4.231,213,2.212,597,3.36,598,4.823,599,3.795,600,3.795,601,3.795,602,4.226,603,4.456,604,3.035,605,3.795]],["title/modules/EmailRoutingModule.html",[88,0.848,602,2.192]],["body/modules/EmailRoutingModule.html",[0,0.493,3,0.329,4,0.291,9,0.291,31,0.023,40,0.528,41,0.368,43,0.329,44,0.409,80,1.634,81,1.615,85,0.016,86,0.019,87,0.016,90,1.615,95,1.817,109,2.05,113,2.321,129,3.416,130,3.45,131,4.111,132,2.183,139,2.49,140,3.416,223,3.782,602,3.76,604,3.416,605,4.272,606,5.016,607,5.016]],["title/interceptors/ErrorInterceptor.html",[104,2.192,180,2.192]],["body/interceptors/ErrorInterceptor.html",[3,0.264,4,0.234,9,0.234,11,1.299,13,1.299,22,0.628,23,1.268,25,0.916,28,1.126,30,1.195,31,0.023,32,0.996,33,0.876,34,1.06,38,0.972,40,0.525,41,0.296,43,0.264,44,0.329,45,1.299,85,0.013,86,0.016,87,0.013,104,3.279,118,2.317,171,1.798,172,1.377,178,1.798,180,3.279,181,3.436,183,5.292,185,4.485,186,5.292,187,4.992,188,5.292,193,3.436,194,4.485,246,2.876,311,1.649,335,2.149,461,3.279,539,2.003,608,3.436,609,3.279,610,4.034,611,4.034,612,4.034,613,4.42,614,5.265,615,3.436,616,4.034,617,4.034,618,4.034,619,4.034,620,4.485,621,4.034,622,4.034,623,2.748,624,3.436,625,3.436,626,3.436,627,4.034,628,4.034,629,4.485,630,4.034,631,2.748,632,4.034]],["title/components/HomeComponent.html",[0,0.346,61,0.952]],["body/components/HomeComponent.html",[0,0.542,1,0.757,2,1.337,3,0.173,4,0.153,5,0.956,6,0.956,7,0.956,8,0.956,9,0.153,11,0.85,13,1.261,14,2.031,15,0.901,16,2.3,17,1.933,18,1.337,20,1.337,22,0.411,23,0.943,24,2.247,25,0.599,27,2.299,28,1.235,30,0.599,31,0.023,32,0.883,33,0.651,34,0.531,38,1.124,39,1.594,40,0.421,41,0.194,43,0.173,44,0.215,45,0.85,47,0.599,48,1.418,49,1.418,50,0.956,51,1.87,52,0.956,53,0.956,54,0.715,55,0.956,56,0.757,57,0.85,58,0.956,59,0.715,60,0.956,61,1.398,62,0.956,63,0.715,64,0.956,65,0.715,66,1.776,67,0.956,68,0.757,69,0.956,70,0.715,71,0.956,72,0.757,73,0.85,74,0.85,75,0.956,76,0.757,77,0.956,78,0.757,79,0.956,80,0.715,81,0.85,82,0.757,83,0.956,84,0.956,85,0.008,86,0.012,87,0.008,132,1.149,156,3.935,161,1.818,172,0.901,175,1.763,176,3.894,226,1.06,235,2.249,293,0.956,294,0.901,297,1.944,344,2.564,365,2.249,366,1.798,375,1.311,376,2.086,377,2.564,379,3.435,381,1.407,383,1.644,385,1.798,386,1.407,390,1.407,391,2.681,394,1.798,395,1.798,396,1.798,436,3.179,447,3.517,464,2.667,537,2.439,539,1.311,540,1.644,542,3.335,543,2.953,544,2.249,547,3.179,558,1.798,559,1.798,583,2.249,633,2.249,634,4.921,635,4.668,636,3.916,637,4.668,638,5.164,639,2.64,640,3.916,641,2.64,642,3.916,643,2.64,644,2.64,645,3.916,646,3.216,647,3.216,648,3.976,649,2.64,650,1.991,651,3.916,652,2.249,653,2.64,654,2.64,655,2.64,656,2.64,657,2.953,658,3.916,659,3.916,660,3.916,661,3.335,662,3.916,663,3.916,664,3.916,665,3.916,666,2.64,667,2.64,668,2.64,669,2.64,670,3.335,671,2.249,672,2.249,673,2.64,674,2.249,675,2.64,676,3.916,677,2.249,678,2.64,679,2.64,680,2.64,681,2.64,682,1.991,683,1.991,684,2.64,685,2.249,686,2.249]],["title/interfaces/ITask.html",[577,1.633,687,1.875]],["body/interfaces/ITask.html",[3,0.302,4,0.266,9,0.266,11,2.161,22,0.716,31,0.023,33,1.116,34,1.313,43,0.302,85,0.014,86,0.018,87,0.014,226,1.55,259,3.746,261,2.455,437,2.642,453,3.238,466,3.238,577,2.136,589,3.134,687,3.05,688,3.919,689,4.601,690,5.556,691,5.309,692,5.309,693,5.309]],["title/interfaces/IUser.html",[304,2.192,577,1.633]],["body/interfaces/IUser.html",[3,0.308,4,0.272,9,0.272,22,0.731,31,0.022,33,1.144,34,1.167,43,0.308,82,1.884,85,0.015,86,0.018,87,0.015,170,3.918,226,1.569,261,2.485,272,4.474,290,4.954,292,4.954,304,3.611,466,3.261,577,2.179,589,3.198,694,3.999,695,5.595]],["title/components/LoginComponent.html",[0,0.346,63,0.952]],["body/components/LoginComponent.html",[0,0.448,1,0.727,2,1.297,3,0.166,4,0.147,5,0.918,6,0.918,7,0.918,8,0.918,9,0.147,13,1.223,14,1.982,15,0.865,16,2.284,17,1.919,18,1.297,20,1.297,22,0.394,23,0.915,24,2.202,25,0.575,26,1.578,27,2.188,28,1.298,30,0.575,31,0.023,32,0.862,33,0.758,34,0.51,38,1.306,39,1.297,40,0.412,41,0.186,43,0.166,44,0.206,45,0.816,47,0.575,48,1.376,49,1.376,50,0.918,51,1.833,52,0.918,53,0.918,54,0.686,55,0.918,56,0.727,57,1.467,58,0.918,59,0.686,60,0.918,61,0.686,62,0.918,63,1.37,64,0.918,65,0.686,66,0.816,67,0.918,68,0.727,69,0.918,70,0.686,71,0.918,72,0.727,73,0.816,74,0.816,75,0.918,76,0.727,77,0.918,78,0.727,79,0.918,80,0.686,81,0.816,82,1.74,83,0.918,84,0.918,85,0.008,86,0.012,87,0.008,127,2.024,161,1.763,163,2.864,173,1.578,175,0.865,178,1.943,213,1.258,220,3.152,226,1.028,246,2.567,255,1.911,261,1.297,272,3.447,274,3.78,293,0.918,294,0.865,295,1.752,335,2.024,452,2.864,461,3.152,468,4.133,476,3.816,482,2.864,487,1.911,488,3.103,493,2.864,494,2.587,623,3.692,696,2.159,697,4.556,698,3.798,699,4.617,700,4.556,701,5.691,702,3.816,703,5.691,704,3.88,705,3.798,706,2.534,707,3.816,708,4.087,709,2.864,710,2.534,711,2.864,712,3.235,713,2.534,714,3.798,715,2.534,716,2.534,717,2.159,718,2.534,719,3.235,720,3.235,721,2.864,722,1.911,723,2.534,724,1.911,725,2.159,726,2.534,727,2.159,728,2.159,729,2.159,730,2.534,731,2.534,732,3.235,733,3.235]],["title/modules/MaterialModule.html",[88,0.848,208,1.531]],["body/modules/MaterialModule.html",[3,0.273,4,0.241,9,0.241,31,0.023,40,0.589,41,0.306,43,0.273,44,0.339,85,0.013,86,0.017,87,0.013,90,1.34,95,1.507,113,2.066,208,2.338,576,2.835,734,4.162,735,5.373,736,3.138,737,5.373,738,4.162,739,4.162,740,5.373,741,4.162,742,5.373,743,4.162,744,5.373,745,4.162,746,5.373,747,4.162,748,5.373,749,4.162,750,5.373,751,4.162,752,5.373,753,3.545,754,5.373,755,4.162,756,5.373,757,4.162,758,4.162,759,5.373,760,3.545,761,3.545,762,5.373,763,4.162,764,5.373,765,4.162,766,3.138,767,5.373,768,4.162,769,5.373]],["title/modules/NavigationModule.html",[88,0.848,428,2.192]],["body/modules/NavigationModule.html",[3,0.281,4,0.248,9,0.248,31,0.023,40,0.547,41,0.315,43,0.281,44,0.349,47,0.974,68,2.043,78,1.927,85,0.013,86,0.017,87,0.013,88,1.033,90,1.381,91,1.866,92,2.996,93,2.129,94,2.129,95,2.186,101,3.58,105,2.719,106,2.129,107,1.649,109,2.239,113,2.106,119,2.463,128,3.653,208,2.924,210,3.146,211,2.285,428,4.457,597,3.234,770,3.653,771,3.653,772,4.289,773,3.653,774,4.289,775,4.289,776,4.289]],["title/components/PageNotFoundComponent.html",[0,0.346,65,0.952]],["body/components/PageNotFoundComponent.html",[0,0.6,1,0.984,2,1.612,3,0.225,4,0.199,5,1.242,6,1.242,7,1.242,8,1.242,9,0.199,11,1.105,15,1.171,16,2.394,17,2.011,18,1.612,20,1.612,25,1.226,28,0.734,31,0.023,32,0.893,40,0.279,41,0.252,43,0.225,44,0.279,47,0.779,48,1.71,49,1.71,50,1.242,51,2.107,52,1.242,53,1.242,54,0.929,55,1.242,56,0.984,57,1.105,58,1.242,59,0.929,60,1.242,61,0.929,62,1.242,63,0.929,64,1.242,65,1.575,66,2.246,67,1.242,68,0.984,69,1.242,70,0.929,71,1.242,72,0.984,73,1.105,74,1.105,75,1.242,76,0.984,77,1.242,78,0.984,79,1.242,80,0.929,81,1.105,82,0.984,83,1.242,84,1.242,85,0.011,86,0.015,87,0.011,137,3.217,148,3.963,377,1.703,379,2.942,394,2.336,395,2.336,396,2.336,537,2.942,539,1.703,540,2.137,549,3.963,550,2.587,551,2.922,609,3.624,634,4.023,670,4.023,671,2.922,672,2.922,674,2.922,682,2.587,683,2.587,685,2.922,686,2.922,777,4.023,778,2.922,779,5.819,780,5.401,781,4.723,782,3.43,783,4.723,784,4.723,785,4.723,786,4.723,787,4.723,788,4.723,789,4.023,790,3.43,791,3.43,792,2.587]],["title/components/SidenavComponent.html",[0,0.346,68,1.009]],["body/components/SidenavComponent.html",[0,0.475,1,0.802,2,1.395,3,0.183,4,0.162,5,1.013,6,1.013,7,1.013,8,1.013,9,0.162,13,1.316,14,2.101,15,0.955,16,2.323,17,1.951,18,1.395,20,1.395,22,0.435,23,0.984,24,2.31,25,0.635,27,2.342,28,1.335,30,0.635,31,0.023,32,0.913,33,0.883,34,0.563,38,1.163,39,1.648,40,0.48,41,0.205,43,0.183,44,0.228,45,0.901,47,0.635,48,1.48,49,1.48,50,1.013,51,1.923,52,1.013,53,1.013,54,0.757,55,1.013,56,0.802,57,0.901,58,1.013,59,0.757,60,1.013,61,0.757,62,1.013,63,0.757,64,1.013,65,0.757,66,0.901,67,1.013,68,1.523,69,1.013,70,0.757,71,1.013,72,0.802,73,0.901,74,0.901,75,1.013,76,0.802,77,1.013,78,0.802,79,1.013,80,0.757,81,0.901,82,0.802,83,1.013,84,1.013,85,0.009,86,0.013,87,0.009,107,2.041,141,2.545,160,2.783,161,2.464,168,2.804,172,0.955,175,0.955,226,1.106,274,3.673,293,1.013,294,0.955,297,2.636,311,1.143,318,2.783,377,1.389,379,1.742,547,1.905,571,2.382,646,2.545,647,2.545,650,2.109,736,2.109,753,2.382,766,3.081,792,2.109,793,2.382,794,5.31,795,4.828,796,4.086,797,4.828,798,4.828,799,4.112,800,4.522,801,4.522,802,4.522,803,2.382,804,5.023,805,4.086,806,2.797,807,4.112,808,4.086,809,2.797,810,2.797,811,3.48,812,4.828,813,4.086,814,4.086,815,2.797,816,2.797,817,2.797,818,2.797,819,1.607,820,3.48,821,2.382,822,2.382,823,2.382,824,2.382,825,2.382,826,2.382,827,4.086,828,2.382,829,2.797,830,3.48,831,2.797]],["title/components/SignupComponent.html",[0,0.346,70,0.952]],["body/components/SignupComponent.html",[0,0.369,1,0.537,2,1.025,3,0.123,4,0.108,5,0.678,6,0.678,7,0.678,8,0.678,9,0.108,13,0.967,14,1.636,15,0.639,16,2.15,17,1.806,18,1.025,20,1.025,22,0.291,23,0.723,24,1.871,25,0.682,27,2.03,28,1.292,30,0.425,31,0.023,32,0.711,33,0.625,34,0.377,38,1.272,39,1.025,40,0.43,41,0.137,43,0.123,44,0.153,47,0.425,48,1.087,49,1.087,50,0.678,51,1.558,52,0.678,53,0.678,54,0.507,55,0.678,56,0.537,57,1.211,58,0.678,59,0.507,60,0.678,61,0.507,62,0.678,63,0.507,64,0.678,65,0.507,66,0.603,67,0.678,68,0.537,69,0.678,70,1.164,71,0.678,72,0.537,73,0.603,74,0.603,75,0.678,76,0.537,77,0.678,78,0.537,79,0.678,80,0.507,81,0.603,82,1.733,83,0.678,84,0.678,85,0.006,86,0.009,87,0.006,127,2.508,132,0.815,156,3.596,161,1.394,163,2.264,165,1.412,173,1.166,175,1.468,178,2.096,213,0.929,219,3.55,220,1.166,226,0.813,246,2.297,255,1.412,261,0.639,272,4.041,290,2.264,292,1.412,293,1.361,294,1.283,297,1.866,311,0.765,335,2.508,344,1.491,452,2.264,461,3.418,468,4.116,476,2.834,482,2.264,488,1.275,494,2.929,513,3.663,515,3.663,539,0.929,561,4.379,581,3.55,623,2.56,631,1.275,646,3.764,647,3.764,652,1.594,699,4.01,702,3.243,704,3.202,707,4.138,708,3.789,709,3.243,711,2.264,712,2.557,717,1.594,719,2.557,720,2.557,721,2.264,722,1.412,724,1.412,725,1.594,727,1.594,728,1.594,729,1.594,732,3.663,733,3.663,832,1.594,833,3.759,834,3.002,835,4.708,836,2.834,837,3.759,838,5.025,839,4.28,840,5.025,841,5.025,842,1.872,843,4.301,844,3.002,845,3.002,846,1.872,847,3.002,848,2.557,849,1.872,850,3.002,851,1.872,852,3.002,853,3.002,854,3.002,855,1.872,856,3.002,857,4.301,858,1.872,859,1.872,860,1.872,861,1.872,862,1.872,863,1.872,864,1.412,865,1.872,866,1.594,867,1.872,868,1.872,869,1.872,870,1.872,871,1.594,872,1.872,873,1.872,874,1.872,875,1.872,876,1.872,877,1.872,878,1.872,879,2.557,880,1.872,881,1.872,882,1.872,883,1.872,884,1.872,885,1.412,886,1.594,887,1.594,888,1.594,889,1.594,890,1.872,891,3.002]],["title/injectables/TaskHttpService.html",[171,1.201,455,1.875]],["body/injectables/TaskHttpService.html",[3,0.174,4,0.154,9,0.154,11,1.668,12,1.415,22,0.413,23,0.947,25,0.603,28,1.281,30,1.255,31,0.023,32,1.046,33,0.997,34,1.112,38,1.54,40,0.488,41,0.195,43,0.174,44,0.216,45,0.855,57,1.668,73,1.267,85,0.008,86,0.012,87,0.008,118,1.525,168,3.457,171,1.343,172,0.907,174,1.525,175,1.768,178,1.887,224,1.525,226,1.065,231,3.532,232,3.532,244,2.002,245,3.905,246,2.607,248,2.965,261,2.145,293,0.962,294,0.907,295,1.991,301,2.965,303,3.19,306,1.809,307,2.002,308,1.654,309,2.262,311,1.085,318,3.765,319,4.169,437,4.099,455,2.095,466,3.259,523,3.35,613,3.905,687,2.759,819,1.525,892,4.19,893,2.002,894,3.35,895,3.933,896,5.178,897,3.933,898,3.933,899,3.933,900,2.655,901,3.989,902,3.35,903,2.655,904,3.35,905,3.933,906,2.655,907,3.933,908,2.655,909,3.35,910,4.709,911,2.655,912,2.965,913,1.809,914,2.262,915,2.262,916,4.365,917,2.655,918,2.655,919,2.655,920,2.262,921,2.655,922,2.655]],["title/injectables/TaskStateService.html",[171,1.201,456,2.021]],["body/injectables/TaskStateService.html",[3,0.184,4,0.163,9,0.163,11,1.822,12,1.497,22,0.437,23,0.988,25,0.638,28,1.404,30,1.285,31,0.023,32,1.07,33,0.941,34,1.139,38,1.363,39,1.653,40,0.461,41,0.206,43,0.184,44,0.229,45,0.905,73,2.013,85,0.009,86,0.013,87,0.009,168,2.809,171,1.4,172,0.959,174,1.614,175,2.177,178,1.4,224,1.614,226,1.11,259,1.614,261,2.017,293,2.139,294,2.017,295,2.271,306,1.914,311,1.148,437,3.85,453,1.395,454,1.914,455,3.147,456,2.355,466,3.259,490,1.914,687,3.25,819,2.78,892,4.522,901,3.492,912,3.091,913,1.914,916,4.012,923,2.393,924,5.908,925,5.908,926,5.908,927,4.1,928,4.1,929,4.1,930,4.1,931,4.1,932,4.1,933,2.81,934,4.1,935,2.81,936,4.1,937,2.81,938,3.492,939,3.624,940,4.1,941,2.81,942,5.908,943,2.81,944,4.1,945,2.81,946,4.1,947,2.81,948,2.81,949,4.1,950,2.81,951,2.81,952,2.81,953,2.81,954,2.81,955,2.81,956,2.81,957,2.81,958,2.81,959,2.81]],["title/components/TasksCardListComponent.html",[0,0.346,72,1.009]],["body/components/TasksCardListComponent.html",[0,0.341,1,0.477,2,0.931,3,0.109,4,0.096,5,0.602,6,0.602,7,0.602,8,0.602,9,0.096,11,1.292,13,0.878,15,0.568,16,2.091,17,1.757,18,0.931,20,0.931,22,0.259,23,0.657,25,0.619,28,1.34,30,1.141,31,0.023,32,1.027,33,0.99,34,1.011,38,1.264,39,1.624,40,0.442,41,0.122,43,0.109,44,0.135,47,0.378,48,0.988,49,0.988,50,0.602,51,1.453,52,0.602,53,0.602,54,0.45,55,0.602,56,0.477,57,0.536,58,0.602,59,0.738,60,0.602,61,0.45,62,0.602,63,0.45,64,0.602,65,0.45,66,0.536,67,0.602,68,0.477,69,0.602,70,0.45,71,0.602,72,1.151,73,1.844,74,2.258,75,0.602,76,0.477,77,0.602,78,0.477,79,0.602,80,0.45,81,0.536,82,0.477,83,0.602,84,0.602,85,0.008,86,0.008,87,0.005,127,1.453,139,1.354,169,3.417,170,1.699,172,0.568,175,2.179,226,0.738,246,2.186,251,1.133,259,3.211,261,2.253,293,1.256,294,1.184,295,1.333,297,2.362,307,1.254,311,0.68,335,0.886,337,1.133,381,0.886,386,0.886,399,0.886,420,4.771,436,2.362,437,3.518,440,2.615,447,2.732,450,2.057,453,2.362,454,1.133,455,2.535,456,2.886,458,2.615,464,1.858,465,2.057,466,3.141,472,3.772,473,2.615,486,2.057,489,1.254,490,1.133,491,1.254,506,2.057,507,2.057,522,1.417,526,1.417,527,1.417,532,1.254,533,1.254,539,0.826,564,2.615,576,1.133,586,1.254,609,1.036,624,2.323,625,1.417,626,1.417,631,1.133,687,1.847,691,2.323,692,2.953,693,3.417,836,2.615,894,2.323,902,2.323,904,4.052,909,1.417,913,1.133,916,3.025,939,1.858,960,5.39,961,1.417,962,3.468,963,2.728,964,4.428,965,4.428,966,2.728,967,3.468,968,2.728,969,2.728,970,2.728,971,2.728,972,2.728,973,3.468,974,3.468,975,4.012,976,2.728,977,1.663,978,1.663,979,1.663,980,1.663,981,1.663,982,1.663,983,1.663,984,1.663,985,2.728,986,1.663,987,3.241,988,2.728,989,1.663,990,2.728,991,1.663,992,2.728,993,1.663,994,2.728,995,1.663,996,1.663,997,1.663,998,4.758,999,1.663,1000,1.663,1001,1.663,1002,2.728,1003,1.663,1004,1.663,1005,1.663,1006,1.663,1007,1.417,1008,1.663,1009,1.663,1010,1.663,1011,1.417,1012,3.468,1013,3.468,1014,2.728,1015,1.663,1016,1.663,1017,1.417,1018,1.417,1019,1.663,1020,1.663,1021,1.663,1022,1.663,1023,3.417,1024,2.728,1025,2.728,1026,1.663,1027,1.663,1028,1.417]],["title/components/TasksComponent.html",[0,0.346,76,1.009]],["body/components/TasksComponent.html",[0,0.498,1,0.623,2,1.153,3,0.143,4,0.126,5,0.787,6,0.787,7,0.787,8,0.787,9,0.126,11,1.088,13,1.088,14,1.803,15,0.742,16,2.219,17,1.881,18,1.153,20,1.153,22,0.338,23,0.814,24,2.033,25,0.494,28,1.376,30,0.494,31,0.023,32,0.784,33,0.891,34,0.437,38,1.219,39,1.415,40,0.436,41,0.16,43,0.143,44,0.177,45,0.7,47,0.494,48,1.224,49,1.224,50,0.787,51,1.692,52,0.787,53,0.787,54,0.588,55,0.787,56,0.623,57,0.7,58,0.787,59,0.588,60,0.787,61,0.588,62,0.787,63,0.588,64,0.787,65,0.588,66,0.7,67,0.787,68,0.623,69,0.787,70,0.588,71,0.787,72,0.623,73,2.093,74,1.088,75,0.787,76,1.34,77,0.787,78,0.623,79,0.787,80,0.588,81,0.7,82,0.623,83,0.787,84,0.787,85,0.007,86,0.01,87,0.007,127,1.158,168,3.069,172,0.742,175,2.172,178,1.596,226,0.914,259,1.248,293,1.692,294,1.596,295,1.797,297,2.513,311,0.888,337,1.481,344,1.079,375,2.057,376,2.208,377,2.057,378,1.639,379,1.354,380,1.851,381,2.49,383,2.104,384,2.878,385,1.481,386,1.158,387,1.851,388,1.851,389,1.481,390,1.158,391,1.248,394,1.481,395,1.481,396,1.481,397,1.851,398,1.851,399,1.8,400,1.851,401,1.851,436,2.822,437,2.684,440,3.125,447,3.183,453,1.079,454,1.481,455,2.855,456,3.212,464,2.301,465,2.548,466,1.079,470,2.878,473,3.125,489,1.639,490,1.481,491,1.639,506,1.639,507,1.639,511,2.878,532,1.639,533,1.639,540,1.354,552,1.481,586,1.639,648,3.53,687,2.208,690,1.851,792,1.639,819,1.248,836,3.125,866,2.878,879,2.878,885,1.639,913,1.481,939,2.822,1007,1.851,1011,1.851,1017,1.851,1018,1.851,1028,1.851,1029,1.851,1030,4.144,1031,3.379,1032,4.144,1033,4.144,1034,4.144,1035,4.144,1036,4.674,1037,4.674,1038,4.674,1039,3.379,1040,2.174,1041,2.174,1042,2.174,1043,2.174,1044,2.174,1045,3.379,1046,2.174,1047,2.174,1048,2.174,1049,2.174,1050,2.174,1051,2.174,1052,2.174,1053,3.379,1054,3.379,1055,2.174,1056,2.174,1057,2.174,1058,2.174,1059,4.144,1060,4.144,1061,2.174,1062,2.174,1063,2.174,1064,2.174,1065,2.174,1066,2.174,1067,2.174,1068,2.174,1069,2.174,1070,2.174,1071,2.174,1072,3.379,1073,2.878,1074,2.174,1075,2.174,1076,2.174]],["title/components/TopnavComponent.html",[0,0.346,78,1.009]],["body/components/TopnavComponent.html",[0,0.458,1,0.754,2,1.333,3,0.172,4,0.152,5,0.952,6,0.952,7,0.952,8,0.952,9,0.152,13,1.257,14,2.026,15,0.897,16,2.299,17,1.945,18,1.333,20,1.333,22,0.607,23,0.94,24,2.242,25,0.597,27,2.296,28,1.34,30,0.597,31,0.023,32,0.881,33,0.916,34,0.529,37,2.431,38,1.241,39,1.759,40,0.448,41,0.193,43,0.172,44,0.214,45,0.847,47,0.597,48,1.414,49,1.414,50,0.952,51,1.866,52,0.952,53,0.952,54,0.712,55,0.952,56,0.754,57,0.847,58,0.952,59,0.712,60,0.952,61,0.712,62,0.952,63,0.712,64,0.952,65,0.712,66,0.847,67,0.952,68,0.754,69,0.952,70,0.712,71,0.952,72,0.754,73,0.847,74,0.847,75,0.952,76,0.754,77,0.952,78,1.478,79,0.952,80,0.712,81,0.847,82,0.754,83,0.952,84,0.952,85,0.008,86,0.012,87,0.008,107,1.981,141,2.431,161,1.812,168,2.733,172,0.897,175,0.897,226,1.057,259,2.242,274,3.593,295,1.501,311,1.074,344,1.938,375,1.305,376,2.08,390,1.401,399,2.481,450,2.943,453,1.305,458,4.151,486,3.511,537,1.637,539,1.305,543,1.982,546,2.239,646,2.431,647,2.431,650,1.982,657,2.943,677,2.239,682,2.943,683,1.982,736,1.982,766,2.943,799,3.966,800,4.389,801,4.389,802,4.389,803,2.239,804,4.913,807,2.239,811,3.325,819,1.51,820,3.325,821,2.239,822,2.239,823,2.239,824,2.239,825,2.239,826,2.239,828,2.239,830,3.325,939,2.659,987,2.659,1077,2.239,1078,3.904,1079,4.656,1080,3.904,1081,5.153,1082,4.656,1083,4.656,1084,3.904,1085,2.629,1086,2.629,1087,2.629,1088,2.629,1089,3.904,1090,4.656,1091,2.629,1092,2.629,1093,2.629,1094,2.629,1095,2.629,1096,2.629,1097,2.629,1098,2.629,1099,2.629,1100,2.629,1101,2.629,1102,2.629,1103,2.629,1104,3.325,1105,2.629,1106,2.629,1107,2.629,1108,2.629,1109,2.629]],["title/injectables/UIService.html",[171,1.201,246,1.531]],["body/injectables/UIService.html",[3,0.263,4,0.232,9,0.232,11,1.291,12,2.135,22,0.624,23,1.263,25,0.91,28,1.25,30,1.19,31,0.023,32,0.992,33,0.872,34,1.055,38,0.965,39,1.368,40,0.476,41,0.294,43,0.263,44,0.326,45,1.291,85,0.012,86,0.016,87,0.012,161,2.877,171,1.79,172,1.368,174,2.302,224,2.302,226,1.419,246,2.281,261,1.995,285,4.977,288,5.279,293,1.451,294,1.368,295,2.016,306,2.729,375,2.603,537,3.86,577,2.433,609,3.265,760,3.413,761,4.977,987,3.571,1073,5.279,1110,3.413,1111,5.243,1112,5.843,1113,5.843,1114,4.008,1115,6.198,1116,5.243,1117,5.243,1118,4.008,1119,6.198,1120,4.008,1121,5.243,1122,5.243,1123,5.243,1124,5.243,1125,4.008,1126,4.008]],["title/pipes/UppercaseFirstLetterPipe.html",[322,2.021,406,2.192]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.311,4,0.275,9,0.275,11,1.528,13,1.528,15,1.619,23,1.143,28,1.014,30,1.077,31,0.023,32,1.195,33,0.789,34,0.955,38,1.143,40,0.386,41,0.348,43,0.311,44,0.386,85,0.015,86,0.018,87,0.015,178,1.992,294,1.992,322,3.351,406,3.634,416,4.97,417,4.972,550,4.765,1023,4.97,1127,4.744,1128,4.97,1129,4.04,1130,5.835,1131,5.835,1132,4.744,1133,5.835,1134,4.744,1135,4.744]],["title/injectables/UserService.html",[171,1.201,1136,2.397]],["body/injectables/UserService.html",[3,0.275,4,0.243,9,0.243,12,2.233,22,0.652,23,1.3,25,0.952,28,1.277,30,1.225,31,0.023,32,1.021,33,0.898,34,1.086,38,1.009,40,0.531,41,0.308,43,0.275,44,0.341,45,1.35,85,0.013,86,0.017,87,0.013,118,2.407,161,3.1,168,2.964,171,1.843,172,1.431,174,2.407,175,2.038,178,1.431,224,2.407,226,1.461,231,4.501,232,4.501,244,3.16,245,4.754,248,4.07,261,2.038,293,1.518,294,1.431,301,4.07,303,2.854,304,2.61,305,3.569,308,2.61,318,2.854,319,3.16,466,2.081,910,5.085,912,4.07,920,3.569,1136,3.676,1137,3.569,1138,5.397,1139,5.397,1140,4.191,1141,4.191]],["title/components/VerifyEmailComponent.html",[0,0.346,80,0.952]],["body/components/VerifyEmailComponent.html",[0,0.421,1,0.657,2,1.201,3,0.15,4,0.133,5,0.83,6,0.83,7,0.83,8,0.83,9,0.133,13,1.133,14,1.863,15,0.782,16,2.242,17,1.884,18,1.201,20,1.201,22,0.356,23,0.847,24,2.091,25,0.799,26,1.427,27,2.104,28,1.219,30,0.52,31,0.023,32,0.81,33,0.799,34,0.461,38,1.032,39,1.201,40,0.464,41,0.168,43,0.15,44,0.187,47,0.52,48,1.274,49,1.274,50,0.83,51,1.74,52,0.83,53,0.83,54,0.62,55,0.83,56,0.657,57,0.738,58,0.83,59,0.62,60,0.83,61,0.62,62,0.83,63,0.62,64,0.83,65,0.62,66,0.738,67,0.83,68,0.657,69,0.83,70,0.62,71,0.83,72,0.657,73,0.738,74,1.133,75,0.83,76,0.657,77,0.83,78,0.657,79,0.83,80,1.301,81,1.942,82,1.983,83,0.83,84,0.83,85,0.007,86,0.011,87,0.007,127,1.874,132,0.997,154,3.648,165,1.727,170,2.191,173,1.427,175,1.64,178,1.64,213,1.137,220,1.427,226,0.952,229,2.996,246,2.48,261,1.64,263,4.093,274,2.191,278,2.996,295,1.993,297,1.746,311,0.936,322,1.316,329,2.996,335,1.874,366,2.396,375,1.137,376,1.874,377,2.385,381,1.874,383,2.191,389,2.396,390,1.874,391,1.316,399,1.22,461,2.191,468,2.396,487,3.229,488,1.56,493,1.727,494,1.56,539,1.137,540,1.427,549,2.396,552,2.396,558,1.56,559,1.56,561,2.653,581,1.727,604,4.006,615,1.951,620,4.416,623,1.56,629,2.996,631,1.56,646,2.191,647,2.191,695,1.951,702,3.623,707,2.653,708,3.229,709,1.727,711,2.653,722,1.727,724,1.727,819,1.316,839,4.661,885,1.727,886,1.951,887,1.951,888,1.951,889,1.951,1136,3.881,1142,5.009,1143,1.951,1144,4.283,1145,3.518,1146,4.283,1147,4.805,1148,3.518,1149,2.291,1150,2.291,1151,3.518,1152,4.805,1153,2.291,1154,2.291,1155,2.291,1156,2.291,1157,2.291,1158,2.291,1159,2.291,1160,2.291,1161,2.291,1162,2.291,1163,2.291,1164,2.291,1165,2.291,1166,2.291,1167,2.291,1168,4.283,1169,2.291,1170,2.291,1171,2.291,1172,2.291,1173,2.291,1174,3.518,1175,3.518,1176,3.518,1177,2.291]],["title/coverage.html",[1178,4.093]],["body/coverage.html",[0,0.686,1,1.026,9,0.207,10,3.047,27,1.376,31,0.023,33,0.595,54,0.968,56,1.026,59,0.968,61,0.968,63,0.968,65,0.968,68,1.026,70,0.968,72,1.026,74,1.565,76,1.026,78,1.026,80,0.968,85,0.011,86,0.015,87,0.011,103,2.228,104,2.228,134,2.437,137,2.437,151,2.437,153,3.047,171,2.114,180,3.027,182,3.047,225,2.698,246,1.557,295,1.376,304,2.228,308,3.027,322,2.055,344,3.171,370,3.047,406,2.228,414,2.698,417,2.698,420,2.698,432,3.047,433,3.047,455,1.906,456,2.055,547,3.31,549,4.218,563,3.665,569,2.437,577,2.562,604,2.437,608,3.047,633,3.047,687,1.906,688,3.047,694,3.047,696,3.047,777,3.047,778,3.047,793,3.047,832,3.047,864,2.698,892,3.31,893,2.698,923,3.047,960,3.047,961,3.047,1029,3.047,1077,3.047,1110,3.047,1128,3.047,1129,3.047,1136,2.437,1137,3.047,1142,3.047,1143,3.047,1178,3.047,1179,3.047,1180,3.578,1181,3.578,1182,5.923,1183,5.923,1184,3.578,1185,3.578,1186,3.578,1187,3.578,1188,3.578,1189,3.047,1190,3.047,1191,3.578,1192,4.861,1193,3.578,1194,3.578,1195,3.578,1196,5.923,1197,3.578,1198,3.578,1199,3.578,1200,3.578,1201,3.578,1202,3.047,1203,3.578,1204,3.578,1205,3.578,1206,3.578,1207,4.861,1208,3.578,1209,3.578,1210,3.578,1211,3.578,1212,3.578,1213,3.578,1214,3.578,1215,3.047,1216,4.861,1217,4.861,1218,3.047,1219,3.578,1220,3.578]],["title/dependencies.html",[91,1.842,1221,2.937]],["body/dependencies.html",[31,0.023,41,0.363,85,0.015,86,0.019,87,0.015,91,2.153,111,5.099,112,4.515,132,2.153,172,1.689,211,2.636,213,2.457,434,4.215,1222,4.949,1223,7.106,1224,4.949,1225,4.215,1226,4.949,1227,4.949,1228,4.949,1229,4.949,1230,4.949,1231,4.949,1232,4.949,1233,4.949,1234,4.949,1235,4.949,1236,4.949,1237,4.949,1238,4.949]],["title/miscellaneous/functions.html",[1239,1.687,1240,3.605]],["body/miscellaneous/functions.html",[22,0.802,30,1.171,31,0.02,32,0.975,34,1.038,85,0.016,86,0.019,87,0.016,148,3.512,160,3.512,178,1.761,190,3.512,609,3.823,721,3.889,848,4.392,864,4.628,871,5.227,1189,4.392,1190,5.227,1239,2.962,1240,4.392,1241,5.157,1242,5.157,1243,6.138,1244,5.157,1245,5.157,1246,5.157,1247,5.157,1248,6.138,1249,5.157,1250,5.157,1251,5.157]],["title/index.html",[22,0.457,1252,2.937,1253,2.937]],["body/index.html",[0,0.6,4,0.254,17,1.26,31,0.017,32,0.831,85,0.014,86,0.017,87,0.014,107,1.688,148,2.991,160,2.991,295,1.688,613,4.193,657,3.311,661,5.197,789,3.74,938,3.74,987,2.991,1179,4.736,1225,3.74,1254,4.392,1255,6.102,1256,6.102,1257,4.392,1258,4.392,1259,4.392,1260,6.618,1261,6.866,1262,4.392,1263,4.392,1264,4.392,1265,4.392,1266,4.392,1267,4.392,1268,4.392,1269,4.392,1270,6.102,1271,6.102,1272,4.392,1273,6.618,1274,4.392,1275,4.392,1276,4.392,1277,4.392,1278,4.392,1279,4.392,1280,3.74,1281,5.561,1282,5.561,1283,6.415,1284,4.392,1285,5.561,1286,5.561,1287,4.392,1288,6.415,1289,4.392,1290,4.392,1291,4.392,1292,6.102,1293,4.392,1294,4.392]],["title/modules.html",[90,1.548]],["body/modules.html",[31,0.018,85,0.015,86,0.018,87,0.015,89,3.317,90,1.568,101,2.594,102,3.033,112,5.294,203,3.317,207,3.033,208,2.119,402,3.317,407,3.033,408,3.033,428,3.033,598,3.317,602,3.033,1295,7.02,1296,7.02,1297,7.243,1298,6.82,1299,6.82]],["title/overview.html",[1300,4.093]],["body/overview.html",[1,1.817,2,1.09,31,0.023,47,0.725,54,1.407,56,1.491,59,1.715,61,1.407,63,1.407,65,1.407,68,1.817,70,1.407,72,1.491,76,1.491,78,1.491,80,1.407,85,0.01,86,0.014,87,0.01,88,0.769,89,4.668,90,1.028,91,1.389,92,1.584,93,1.584,94,1.584,95,1.156,96,2.718,97,2.718,98,2.718,99,2.718,100,2.718,101,3.167,102,4.298,103,3.237,104,3.237,105,2.23,106,1.584,107,1.227,130,1.7,151,2.174,203,4.538,204,2.718,205,2.718,206,2.718,207,3.237,208,2.814,224,1.833,322,1.833,402,4.795,403,2.718,404,2.718,405,2.718,406,3.237,407,3.237,408,4.028,424,2.718,425,2.718,426,2.718,427,2.718,428,4.346,514,2.718,589,2.174,590,2.718,591,2.718,593,2.718,598,4.405,599,2.718,600,2.718,601,2.718,602,3.237,770,2.718,771,2.718,773,2.718,1104,3.825,1202,2.718,1300,2.718,1301,3.192,1302,3.192,1303,3.192]],["title/routes.html",[130,2.561]],["body/routes.html",[31,0.02,85,0.018,86,0.02,87,0.018,130,3.038]],["title/miscellaneous/typealiases.html",[1239,1.687,1304,4.233]],["body/miscellaneous/typealiases.html",[22,0.835,31,0.02,33,0.893,85,0.017,86,0.02,87,0.017,225,4.048,303,4.539,312,5.353,892,3.656,893,5.025,914,5.353,915,5.353,1239,3.083,1305,5.369,1306,6.285,1307,5.369]],["title/miscellaneous/variables.html",[1239,1.687,1308,3.605]],["body/miscellaneous/variables.html",[22,0.802,31,0.022,33,1.021,85,0.016,86,0.019,87,0.016,127,2.748,293,2.223,294,2.095,297,2.56,308,4.224,1215,4.392,1218,4.392,1239,2.962,1280,5.227,1308,4.392,1309,5.157,1310,5.157,1311,6.138,1312,6.138,1313,5.157,1314,5.157]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["0.6",{"_index":545,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["0.7",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1104,"title":{},"body":{"components/TopnavComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.6",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":547,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["100vw",{"_index":541,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["1035px",{"_index":397,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":1028,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["12",{"_index":1301,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1302,"title":{},"body":{"overview.html":{}}}],["13/21",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1202,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2",{"_index":854,"title":{},"body":{"components/SignupComponent.html":{}}}],["2.0.8",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["2.6.10",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":518,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["200",{"_index":553,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["200px",{"_index":831,"title":{},"body":{"components/SidenavComponent.html":{}}}],["20px",{"_index":398,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["24px",{"_index":1105,"title":{},"body":{"components/TopnavComponent.html":{}}}],["25rem",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["27",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":514,"title":{},"body":{"components/CreateTaskComponent.html":{},"overview.html":{}}}],["3/7",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["3000",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":552,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["30px",{"_index":588,"title":{},"body":{"components/DialogComponent.html":{}}}],["33",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1107,"title":{},"body":{"components/TopnavComponent.html":{}}}],["404",{"_index":779,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40px",{"_index":382,"title":{},"body":{"components/BoardComponent.html":{}}}],["42",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":791,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4px",{"_index":556,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["5",{"_index":1303,"title":{},"body":{"overview.html":{}}}],["5/15",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["5/18",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":549,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["5000",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["50px",{"_index":1177,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["56px",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5px",{"_index":393,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":857,"title":{},"body":{"components/SignupComponent.html":{}}}],["6.5.3",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["66",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["8.0.2",{"_index":1225,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.14",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":380,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["8px",{"_index":562,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["90",{"_index":378,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["99",{"_index":1099,"title":{},"body":{"components/TopnavComponent.html":{}}}],["absolute",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["abstractcontrol",{"_index":482,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["access",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":452,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["action",{"_index":1073,"title":{},"body":{"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["activatedroute",{"_index":1147,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["actual_component",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["add",{"_index":511,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["address",{"_index":1152,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["afterclosed",{"_index":1006,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["again",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["aliases",{"_index":1305,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":390,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["already",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1255,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":738,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":736,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["angular/common",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"modules/EmailModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":741,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":768,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":576,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/MaterialModule.html":{},"components/TasksCardListComponent.html":{}}}],["angular/material/divider",{"_index":743,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":745,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":747,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":749,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":751,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":757,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":753,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/slide",{"_index":765,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":760,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":755,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":763,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiurl",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["app.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":89,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":101,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":388,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["artifacts",{"_index":1274,"title":{},"body":{"index.html":{}}}],["async",{"_index":967,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["auth",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["auth/auth.guard",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/TopnavComponent.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":103,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{}}}],["authmodule",{"_index":203,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":207,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["authtoken",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":383,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["automatically",{"_index":1266,"title":{},"body":{"index.html":{}}}],["available",{"_index":1299,"title":{},"body":{"modules.html":{}}}],["await",{"_index":1015,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backdrop",{"_index":536,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["background",{"_index":542,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{}}}],["backtooltip",{"_index":973,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backward",{"_index":964,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["bar",{"_index":761,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":1102,"title":{},"body":{"components/TopnavComponent.html":{}}}],["bearer",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["behaviorsubject",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(null",{"_index":942,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["behaviorsubject(this.isauthenticated",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(true",{"_index":1124,"title":{},"body":{"injectables/UIService.html":{}}}],["board",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["board'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["board.component",{"_index":411,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["board.component.css",{"_index":371,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":372,"title":{},"body":{"components/BoardComponent.html":{}}}],["board__item",{"_index":392,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":54,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardmodule",{"_index":402,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["boardroutingmodule",{"_index":407,"title":{"modules/BoardRoutingModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["border",{"_index":554,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["bottom",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["breakpointobserver",{"_index":804,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["breakpoints",{"_index":807,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["browse",{"_index":1297,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1273,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["button:not(:last",{"_index":585,"title":{},"body":{"components/DialogComponent.html":{}}}],["calc(100",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["call",{"_index":714,"title":{},"body":{"components/LoginComponent.html":{}}}],["cancel",{"_index":535,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{}}}],["canload",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1019,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["catcherror",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["catcherror((error",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":1165,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["center",{"_index":391,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["center/cover",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":987,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":515,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":586,"title":{},"body":{"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["clear",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1256,"title":{},"body":{"index.html":{}}}],["close",{"_index":451,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["cluster_appmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":403,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":404,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":405,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":424,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":425,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":427,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":426,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_dialogmodule",{"_index":590,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_declarations",{"_index":591,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_exports",{"_index":593,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_imports",{"_index":592,"title":{},"body":{"modules/DialogModule.html":{}}}],["cluster_emailmodule",{"_index":599,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_declarations",{"_index":600,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_imports",{"_index":601,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_navigationmodule",{"_index":770,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_declarations",{"_index":771,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_exports",{"_index":773,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_imports",{"_index":772,"title":{},"body":{"modules/NavigationModule.html":{}}}],["code",{"_index":1268,"title":{},"body":{"index.html":{}}}],["color",{"_index":543,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["column",{"_index":559,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["commonmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["components/dialog/dialog.module",{"_index":422,"title":{},"body":{"modules/BoardModule.html":{}}}],["concatmap",{"_index":1157,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(res",{"_index":1163,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(token",{"_index":1161,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["confirm",{"_index":581,"title":{},"body":{"components/DialogComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmation",{"_index":887,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmpassword",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/SignupComponent.html":{}}}],["const",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"components/TasksCardListComponent.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":578,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(breakpointobserver",{"_index":803,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["constructor(data",{"_index":568,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(fb",{"_index":842,"title":{},"body":{"components/SignupComponent.html":{}}}],["constructor(http",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["constructor(router",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":1114,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(taskhttpservice",{"_index":454,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(uiservice",{"_index":610,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":792,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["content",{"_index":386,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["control",{"_index":481,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["controlname",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":102,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1178,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["created",{"_index":901,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["createtask",{"_index":523,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{}}}],["createtask(task",{"_index":899,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["createtaskcomponent",{"_index":56,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":435,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creation",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":690,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksComponent.html":{}}}],["custom",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{}}}],["data.content",{"_index":580,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.title",{"_index":579,"title":{},"body":{"components/DialogComponent.html":{}}}],["date",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationdate",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(now.gettime",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["decorators",{"_index":571,"title":{},"body":{"components/DialogComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["delete",{"_index":904,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deleted",{"_index":785,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletetask",{"_index":894,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deletetask(id",{"_index":902,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/PageNotFoundComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["descriptipon",{"_index":485,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["destroy",{"_index":440,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["dev",{"_index":1263,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["development",{"_index":1259,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":564,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{}}}],["dialog'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dialog.component",{"_index":596,"title":{},"body":{"modules/DialogModule.html":{}}}],["dialog.component.css",{"_index":565,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialog.component.html",{"_index":566,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialogcomponent",{"_index":59,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogdata",{"_index":569,"title":{"interfaces/DialogData.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":408,"title":{"modules/DialogModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DialogModule.html":{},"modules.html":{},"overview.html":{}}}],["dialogref",{"_index":1002,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["direction",{"_index":558,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1272,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1277,"title":{},"body":{"index.html":{}}}],["display",{"_index":375,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["dist",{"_index":1276,"title":{},"body":{"index.html":{}}}],["divider",{"_index":400,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["documentation",{"_index":1179,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doing",{"_index":692,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["doingtasks",{"_index":1032,"title":{},"body":{"components/TasksComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["done",{"_index":693,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["done_all",{"_index":1025,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["donetasks",{"_index":1033,"title":{},"body":{"components/TasksComponent.html":{}}}],["dragdropmodule",{"_index":737,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":797,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drop",{"_index":739,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":434,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1289,"title":{},"body":{"index.html":{}}}],["easy",{"_index":720,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["edit",{"_index":472,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"components/HomeComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component",{"_index":605,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{}}}],["email.component.css",{"_index":1144,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.html",{"_index":1145,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":1143,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:15",{"_index":1154,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:16",{"_index":1155,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:17",{"_index":1148,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:29",{"_index":1150,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:52",{"_index":1149,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:64",{"_index":1153,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email/verify",{"_index":604,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["emailerrorhandler",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailmodule",{"_index":598,"title":{"modules/EmailModule.html":{}},"body":{"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailroutingmodule",{"_index":602,"title":{"modules/EmailRoutingModule.html":{}},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["end",{"_index":1288,"title":{},"body":{"index.html":{}}}],["enter",{"_index":708,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["entrycomponents",{"_index":595,"title":{},"body":{"modules/DialogModule.html":{}}}],["environment",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["error",{"_index":609,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":629,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["errorinterceptor",{"_index":104,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["errors",{"_index":461,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["eventemitter",{"_index":458,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["execute",{"_index":1285,"title":{},"body":{"index.html":{}}}],["exist",{"_index":784,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expansion",{"_index":1026,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["expirationdate",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":1167,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["expires",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["fab",{"_index":1075,"title":{},"body":{"components/TasksComponent.html":{}}}],["fails",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":845,"title":{},"body":{"components/SignupComponent.html":{}}}],["fff",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["field",{"_index":561,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["fields",{"_index":721,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["files",{"_index":1267,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":866,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["first",{"_index":417,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["firstname",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/SignupComponent.html":{}}}],["fixed",{"_index":538,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["flag",{"_index":1279,"title":{},"body":{"index.html":{}}}],["flex",{"_index":376,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["font",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["form",{"_index":468,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formbuilder",{"_index":843,"title":{},"body":{"components/SignupComponent.html":{}}}],["formcontrol",{"_index":487,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formcontrol(null",{"_index":493,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formctrls",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formctrls.password.value?.length",{"_index":891,"title":{},"body":{"components/SignupComponent.html":{}}}],["formgroup",{"_index":476,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":410,"title":{},"body":{"modules/BoardModule.html":{}}}],["forward",{"_index":965,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["forwardtooltip",{"_index":974,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["found",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.css",{"_index":780,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":781,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":778,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":782,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1240,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1291,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1270,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1254,"title":{},"body":{"index.html":{}}}],["getalltasks",{"_index":1036,"title":{},"body":{"components/TasksComponent.html":{}}}],["getauthdata",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["getconfirmpassworderrors",{"_index":838,"title":{},"body":{"components/SignupComponent.html":{}}}],["getdescription",{"_index":483,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getdescriptionerrors",{"_index":445,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getemailerrors",{"_index":839,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["getemailverificationtoken",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemailverificationtoken(token",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfirstnameerrors",{"_index":840,"title":{},"body":{"components/SignupComponent.html":{}}}],["getformctrls",{"_index":717,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmappedtask",{"_index":927,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(id",{"_index":932,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(this.taskid",{"_index":503,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getpassworderrors",{"_index":841,"title":{},"body":{"components/SignupComponent.html":{}}}],["gettask",{"_index":895,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettask(id",{"_index":905,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettaskid",{"_index":928,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettaskid(id",{"_index":934,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettasks",{"_index":896,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["getter",{"_index":719,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getting",{"_index":1252,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":479,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettitleerrors",{"_index":446,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["getupdatedtaskslist",{"_index":1037,"title":{},"body":{"components/TasksComponent.html":{}}}],["go",{"_index":789,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["graph",{"_index":1298,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":151,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hammerjs",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["header",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":790,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":379,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1292,"title":{},"body":{"index.html":{}}}],["helps",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1258,"title":{},"body":{"index.html":{}}}],["heroku_url",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hideconfirmpassword",{"_index":835,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidepassword",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["home.component.css",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":430,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":61,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":582,"title":{},"body":{"components/DialogComponent.html":{}}}],["html",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["http",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["http.service",{"_index":490,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["http.service.ts",{"_index":893,"title":{},"body":{"injectables/TaskHttpService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http.service.ts:16",{"_index":898,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:25",{"_index":900,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:34",{"_index":908,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:45",{"_index":911,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:54",{"_index":903,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:63",{"_index":906,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http://localhost:3000/api/v2",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1265,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":466,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["import('./auth/auth.module').then(m",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./board/board.module').then(m",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./email/email.module').then(m",{"_index":221,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/NavigationModule.html":{}}}],["inbox",{"_index":889,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["inconvinience",{"_index":628,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["inform",{"_index":1122,"title":{},"body":{"injectables/UIService.html":{}}}],["initauthentication",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialize",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["inject",{"_index":574,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["inject(mat_dialog_data",{"_index":572,"title":{},"body":{"components/DialogComponent.html":{}}}],["injectable",{"_index":171,"title":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":998,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["inputs",{"_index":972,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["intercept",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":180,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":577,"title":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["interfaces",{"_index":589,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["isauth",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["isauth(val",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarktheme",{"_index":798,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ishandset",{"_index":799,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isloading",{"_index":836,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["isloggedin",{"_index":800,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isopen",{"_index":1034,"title":{},"body":{"components/TasksComponent.html":{}}}],["isverified",{"_index":695,"title":{},"body":{"interfaces/IUser.html":{},"components/VerifyEmailComponent.html":{}}}],["isvisible",{"_index":1146,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["itask",{"_index":687,"title":{"interfaces/ITask.html":{}},"body":{"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["item",{"_index":1109,"title":{},"body":{"components/TopnavComponent.html":{}}}],["items",{"_index":583,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["iuser",{"_index":304,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["js",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":385,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1287,"title":{},"body":{"index.html":{}}}],["keep",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["key",{"_index":725,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["later",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["layoutmodule",{"_index":735,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":540,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legend",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["letter",{"_index":1130,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":418,"title":{},"body":{"modules/BoardModule.html":{}}}],["letter.pipe.ts",{"_index":1129,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":1132,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":939,"title":{},"body":{"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["list'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["list.component",{"_index":421,"title":{},"body":{"modules/BoardModule.html":{}}}],["list.component.css",{"_index":962,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.html",{"_index":963,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts",{"_index":961,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:112",{"_index":984,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:17",{"_index":980,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:18",{"_index":981,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:19",{"_index":978,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:20",{"_index":977,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:21",{"_index":979,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:22",{"_index":982,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:23",{"_index":997,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:24",{"_index":996,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:25",{"_index":976,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:34",{"_index":993,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:43",{"_index":991,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:58",{"_index":983,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:66",{"_index":995,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:76",{"_index":986,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:87",{"_index":989,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list/tasks",{"_index":420,"title":{},"body":{"modules/BoardModule.html":{},"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list:not(:last",{"_index":1076,"title":{},"body":{"components/TasksComponent.html":{}}}],["listen",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["loadchildren",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["loaded",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":1112,"title":{},"body":{"injectables/UIService.html":{}}}],["local",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logged",{"_index":808,"title":{},"body":{"components/SidenavComponent.html":{}}}],["login",{"_index":220,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login(email",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":63,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":783,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":787,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.boardmodule",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailmodule",{"_index":222,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["main",{"_index":1100,"title":{},"body":{"components/TopnavComponent.html":{}}}],["map",{"_index":819,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["map((res",{"_index":952,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["map(param",{"_index":1159,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["map(res",{"_index":1066,"title":{},"body":{"components/TasksComponent.html":{}}}],["map(result",{"_index":823,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["margin",{"_index":381,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat",{"_index":399,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat_dialog_data",{"_index":575,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["matbuttonmodule",{"_index":740,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":767,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":848,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["match.validator",{"_index":865,"title":{},"body":{"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":975,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["matdialogmodule",{"_index":769,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":742,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["materialmodule",{"_index":208,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":744,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":746,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":748,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":750,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":756,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":812,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":752,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":764,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":1115,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":759,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":1119,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":754,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":762,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":396,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["maximum",{"_index":517,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["media",{"_index":394,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["menu",{"_index":830,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["message",{"_index":1123,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["min",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mini",{"_index":1074,"title":{},"body":{"components/TasksComponent.html":{}}}],["minimum",{"_index":513,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":1239,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":470,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["modal.mat",{"_index":548,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modal__actions",{"_index":560,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modal__form",{"_index":557,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modaltitle",{"_index":441,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["mode",{"_index":442,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["model",{"_index":689,"title":{},"body":{"interfaces/ITask.html":{}}}],["module",{"_index":88,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1293,"title":{},"body":{"index.html":{}}}],["multi",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":864,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":872,"title":{},"body":{"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":1108,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigate",{"_index":1264,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1090,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigation/navigation.module",{"_index":431,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationmodule",{"_index":428,"title":{"modules/NavigationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["need",{"_index":788,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["never",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1261,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{}}}],["ngondestroy",{"_index":447,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["none",{"_index":401,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["now",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["now.gettime",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["number",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["object",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":465,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["observe",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["onbackward",{"_index":966,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onbackward(id",{"_index":985,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus",{"_index":968,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus(id",{"_index":988,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onclose",{"_index":448,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["ondelete",{"_index":969,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondelete(id",{"_index":990,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondestroy",{"_index":436,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onedit",{"_index":970,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onedit(id",{"_index":992,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward",{"_index":971,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward(id",{"_index":994,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["onlogout",{"_index":801,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["onsave",{"_index":449,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["onsignup",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ontogglesidenav",{"_index":1081,"title":{},"body":{"components/TopnavComponent.html":{}}}],["ontoggletheme",{"_index":802,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["open/close",{"_index":1045,"title":{},"body":{"components/TasksComponent.html":{}}}],["optional",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":486,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["outputs",{"_index":450,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["overlay",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":1300,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1221,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["pagenotfoundcomponent",{"_index":65,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel:not(:last",{"_index":1027,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["param",{"_index":916,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{}}}],["param.get('token",{"_index":1160,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["partial",{"_index":910,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["passworderrorhandler",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwords",{"_index":847,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["permissions",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":322,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"injectables/AuthService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(finalize",{"_index":884,"title":{},"body":{"components/SignupComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":1007,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["pipes",{"_index":1127,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipetransform",{"_index":1133,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["please",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["position",{"_index":537,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["post(`${this.url}/login",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["primary",{"_index":1097,"title":{},"body":{"components/TopnavComponent.html":{}}}],["private",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["probably",{"_index":786,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1278,"title":{},"body":{"index.html":{}}}],["production",{"_index":1280,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"components/TasksCardListComponent.html":{}}}],["properties",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["protected",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":1290,"title":{},"body":{"index.html":{}}}],["provide",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["public",{"_index":567,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["radius",{"_index":555,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["raised",{"_index":584,"title":{},"body":{"components/DialogComponent.html":{}}}],["reactive",{"_index":712,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/EmailModule.html":{}}}],["readme",{"_index":1294,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["receive",{"_index":1175,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["redirect",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":938,"title":{},"body":{"injectables/TaskStateService.html":{},"index.html":{}}}],["reloadtasks",{"_index":929,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["reloadtasks(tasks",{"_index":936,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["repeat",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":1166,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["required",{"_index":852,"title":{},"body":{"components/SignupComponent.html":{}}}],["res.body._id",{"_index":953,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.description",{"_index":955,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.status",{"_index":956,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.tasks.map((task",{"_index":1067,"title":{},"body":{"components/TasksComponent.html":{}}}],["res.body.title",{"_index":954,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["resend",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["resendverificationtoken",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendverificationtoken(email",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["responding",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["response.body.expiresin",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.body.token",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":824,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["results",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["rgba(0",{"_index":544,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{}}}],["right",{"_index":587,"title":{},"body":{"components/DialogComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"components/VerifyEmailComponent.html":{}}}],["router",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/SignupComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":223,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":130,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{}}}],["routing.module.ts",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["run",{"_index":1260,"title":{},"body":{"index.html":{}}}],["running",{"_index":1281,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["save",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["saveauthdata",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1269,"title":{},"body":{"index.html":{}}}],["screen",{"_index":395,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["self",{"_index":1101,"title":{},"body":{"components/TopnavComponent.html":{}}}],["serve",{"_index":1262,"title":{},"body":{"index.html":{}}}],["server",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"index.html":{}}}],["service",{"_index":1111,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["share",{"_index":1054,"title":{},"body":{"components/TasksComponent.html":{}}}],["shared/error.interceptor",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["sharereplay",{"_index":820,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["short",{"_index":856,"title":{},"body":{"components/SignupComponent.html":{}}}],["showsnackbar",{"_index":1113,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":1118,"title":{},"body":{"injectables/UIService.html":{}}}],["side",{"_index":1089,"title":{},"body":{"components/TopnavComponent.html":{}}}],["sidenav",{"_index":794,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidenav.component.css",{"_index":795,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.html",{"_index":796,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":776,"title":{},"body":{"modules/NavigationModule.html":{}}}],["sidenavcomponent",{"_index":68,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["signup",{"_index":219,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["signup(firstname",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.css",{"_index":833,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":834,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":70,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":837,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":907,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["size",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["snack",{"_index":1121,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":1117,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["space",{"_index":387,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["spacer",{"_index":1103,"title":{},"body":{"components/TopnavComponent.html":{}}}],["spinner",{"_index":758,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1307,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":1306,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":218,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:13",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:19",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/auth.service.ts:100",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:112",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:121",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:129",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:137",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:149",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:158",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:165",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:27",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:59",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:83",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/email/email",{"_index":606,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["src/app/auth/email/email.module.ts",{"_index":603,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/app/auth/email/verify",{"_index":1142,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":716,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":710,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":718,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:39",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:51",{"_index":715,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:61",{"_index":713,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":832,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:102",{"_index":859,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":862,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":861,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":860,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":844,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:30",{"_index":858,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:47",{"_index":863,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:54",{"_index":851,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:66",{"_index":849,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:78",{"_index":855,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:90",{"_index":846,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/user.model.ts",{"_index":694,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts",{"_index":1137,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts:11",{"_index":1138,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/user.service.ts:15",{"_index":1140,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/board/board",{"_index":423,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["src/app/board/board.component.ts",{"_index":370,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":373,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":374,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.module.ts",{"_index":409,"title":{},"body":{"modules/BoardModule.html":{}}}],["src/app/board/tasks/create",{"_index":432,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/task",{"_index":892,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/board/tasks/task.model.ts",{"_index":688,"title":{},"body":{"interfaces/ITask.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks",{"_index":960,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts",{"_index":1029,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts:17",{"_index":1049,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:18",{"_index":1048,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:19",{"_index":1051,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:20",{"_index":1052,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:21",{"_index":1046,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:22",{"_index":1047,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:23",{"_index":1050,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:24",{"_index":1039,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:28",{"_index":1043,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:46",{"_index":1040,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:66",{"_index":1041,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:75",{"_index":1044,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:82",{"_index":1042,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/uppercase",{"_index":1128,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component",{"_index":999,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts",{"_index":563,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component.ts:14",{"_index":570,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts:15",{"_index":573,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.module.ts",{"_index":594,"title":{},"body":{"modules/DialogModule.html":{}}}],["src/app/core/core.module.ts",{"_index":429,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:29",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:36",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.module.ts",{"_index":774,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts",{"_index":793,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:14",{"_index":815,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:15",{"_index":816,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:16",{"_index":817,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:17",{"_index":805,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:25",{"_index":806,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:37",{"_index":810,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:44",{"_index":809,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts",{"_index":1077,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:13",{"_index":1092,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:14",{"_index":1093,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:15",{"_index":1085,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:16",{"_index":1084,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:23",{"_index":1086,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:35",{"_index":1088,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:42",{"_index":1091,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:49",{"_index":1087,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/page",{"_index":777,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module",{"_index":597,"title":{},"body":{"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/material.module.ts",{"_index":734,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":608,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:16",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:22",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/ui.service",{"_index":722,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":1110,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:15",{"_index":1116,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:22",{"_index":1120,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment",{"_index":1141,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1253,"title":{"index.html":{}},"body":{}}],["state.service",{"_index":491,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["state.service.ts",{"_index":923,"title":{},"body":{"injectables/TaskStateService.html":{},"coverage.html":{}}}],["state.service.ts:11",{"_index":945,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:12",{"_index":947,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:13",{"_index":948,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:14",{"_index":950,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:15",{"_index":943,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:16",{"_index":931,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:25",{"_index":933,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:42",{"_index":941,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:50",{"_index":937,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:58",{"_index":935,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["statements",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":814,"title":{},"body":{"components/SidenavComponent.html":{}}}],["status",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["sticky",{"_index":1098,"title":{},"body":{"components/TopnavComponent.html":{}}}],["storage",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1275,"title":{},"body":{"index.html":{}}}],["string",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subject",{"_index":473,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["submit",{"_index":1176,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["subscribe",{"_index":885,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subscribe(isauth",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":526,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["subscribe(result",{"_index":1008,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["subscribe(task",{"_index":504,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["subscription",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["subscriptions",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["successfully",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1295,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1004,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["svg",{"_index":1296,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":1053,"title":{},"body":{"components/TasksComponent.html":{}}}],["table",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":489,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["tap",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap(response",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":437,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["task._id",{"_index":1068,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.component",{"_index":415,"title":{},"body":{"modules/BoardModule.html":{}}}],["task.component.css",{"_index":438,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.html",{"_index":439,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts",{"_index":433,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:114",{"_index":469,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:122",{"_index":463,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:17",{"_index":477,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:18",{"_index":475,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:19",{"_index":474,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:20",{"_index":459,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:21",{"_index":478,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:22",{"_index":457,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:29",{"_index":467,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:56",{"_index":480,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:63",{"_index":484,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:70",{"_index":462,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:83",{"_index":460,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:96",{"_index":471,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.creator",{"_index":1070,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.description",{"_index":507,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.model",{"_index":913,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status",{"_index":1069,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('doing",{"_index":1062,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('done",{"_index":1018,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status.includes('todo",{"_index":1017,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.title",{"_index":506,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task/create",{"_index":414,"title":{},"body":{"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["taskarrayresponsetype",{"_index":915,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["taskform",{"_index":443,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskhttpservice",{"_index":455,"title":{"injectables/TaskHttpService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":444,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskidlistener",{"_index":924,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["tasklistener",{"_index":925,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskresponsetype",{"_index":914,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks.component.css",{"_index":1030,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":1031,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":1060,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/create",{"_index":413,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks",{"_index":419,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks.component",{"_index":412,"title":{},"body":{"modules/BoardModule.html":{}}}],["taskscardlistcomponent",{"_index":72,"title":{"components/TasksCardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscomponent",{"_index":76,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskslistlistener",{"_index":926,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskstateservice",{"_index":456,"title":{"injectables/TaskStateService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["test",{"_index":1284,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1283,"title":{},"body":{"index.html":{}}}],["text",{"_index":389,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["theme",{"_index":811,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authlistenersubscription",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.getauthstatuslistener().pipe(map(isloggedin",{"_index":826,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.getemailverificationtoken(token",{"_index":1162,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authservice.getisauth",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.gettoken",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.initauthentication",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(this.formctrls.email.value",{"_index":730,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":828,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.resendverificationtoken(this.email.value).subscribe",{"_index":1173,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(val",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backward",{"_index":1012,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":822,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.clearauthdata",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":531,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.deletetask(id",{"_index":1009,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.description.haserror('maxlength",{"_index":521,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('minlength",{"_index":520,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('required",{"_index":519,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.value",{"_index":525,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.destroy$.next",{"_index":532,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":533,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":1003,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.doingtasks",{"_index":1061,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.donetasks",{"_index":1063,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.drawer.close",{"_index":829,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.edit.emit",{"_index":1001,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.email",{"_index":1170,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.email.haserror('email",{"_index":1172,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.email.haserror('required",{"_index":1171,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.errormessage",{"_index":1169,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.fb.group",{"_index":868,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form",{"_index":850,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.haserror('mustmatch",{"_index":878,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.haserror('required",{"_index":877,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.value",{"_index":883,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.email.haserror('email",{"_index":728,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.haserror('required",{"_index":727,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.value",{"_index":881,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.haserror('minlength",{"_index":875,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.haserror('required",{"_index":874,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.value",{"_index":880,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.password.haserror('minlength",{"_index":876,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.password.haserror('required",{"_index":729,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.password.value",{"_index":882,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.password.value).subscribe",{"_index":731,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.forward",{"_index":1013,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.getalltasks",{"_index":1057,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.getauthdata",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getupdatedtaskslist",{"_index":1064,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.url}/${id",{"_index":921,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${id",{"_index":922,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${token",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(this.url",{"_index":919,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.post",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url",{"_index":917,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.post(`${this.url}/token",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(`${this.url}/${id",{"_index":920,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["this.isauth",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isauth(false",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth(true",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarktheme",{"_index":827,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.ishandset",{"_index":821,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isloading",{"_index":879,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["this.isloggedin",{"_index":825,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isopen",{"_index":1072,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.isvisible",{"_index":1168,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.loginform",{"_index":723,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":726,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modaltitle",{"_index":501,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.mode",{"_index":500,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.onchangestatus(id",{"_index":1014,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.onclose",{"_index":530,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.route.parammap",{"_index":1158,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.router.navigatebyurl",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/authentication/login",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/authentication/signup",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigatebyurl('/board",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('authentication/login",{"_index":890,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.saveauthdata(token",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":867,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":873,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":1125,"title":{},"body":{"injectables/UIService.html":{}}}],["this.taskform",{"_index":492,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('description",{"_index":509,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('title",{"_index":508,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.reset",{"_index":529,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.setvalue",{"_index":505,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskhttpservice",{"_index":522,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.deletetask(id).subscribe",{"_index":1010,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.gettask(id).pipe",{"_index":951,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskhttpservice.gettasks().pipe",{"_index":1065,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskid",{"_index":499,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskidlistener.asobservable",{"_index":944,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskidlistener.next(id",{"_index":959,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.asobservable",{"_index":946,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.next(task",{"_index":957,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasks",{"_index":1055,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.pipe(map(tasks",{"_index":1059,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskslistlistener.asobservable",{"_index":949,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskslistlistener.next(tasks",{"_index":958,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskstateservice",{"_index":502,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.getmappedtask(id).topromise",{"_index":1016,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(id",{"_index":1000,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(null",{"_index":534,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.reloadtasks([...this.tasks",{"_index":1011,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.taskidlistener$.pipe(takeuntil(this.destroy$)).subscribe(id",{"_index":498,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.tasklistener",{"_index":1071,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.taskslistlistener$.pipe",{"_index":1056,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.updatetaskslist(res.body.task",{"_index":527,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.title.haserror('maxlength",{"_index":516,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('minlength",{"_index":512,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('required",{"_index":510,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.value",{"_index":524,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.todotasks",{"_index":1058,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.togglesidenav.emit",{"_index":1094,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.toggletheme.emit",{"_index":1095,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.token",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":918,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.uiservice.showsnackbar",{"_index":886,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.uiservice.showsnackbar('logged",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar('something",{"_index":1020,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.url}/signup",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(res.token.userid",{"_index":1164,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["throwerror",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":453,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["todo",{"_index":691,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["todotasks",{"_index":1035,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggle",{"_index":766,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["togglemodal",{"_index":1038,"title":{},"body":{"components/TasksComponent.html":{}}}],["togglesidenav",{"_index":1082,"title":{},"body":{"components/TopnavComponent.html":{}}}],["toggletheme",{"_index":1083,"title":{},"body":{"components/TopnavComponent.html":{}}}],["token",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["tokentimer",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar.mat",{"_index":1096,"title":{},"body":{"components/TopnavComponent.html":{}}}],["top",{"_index":539,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["topnav",{"_index":1078,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["topnav.component.css",{"_index":1079,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":1080,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav/topnav.component",{"_index":775,"title":{},"body":{"modules/NavigationModule.html":{}}}],["topnavcomponent",{"_index":78,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":550,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":1131,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["translate",{"_index":551,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["true",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["tslib",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1304,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui.service",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":246,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["undo",{"_index":1024,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["unit",{"_index":1282,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":464,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["up",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["update",{"_index":912,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1139,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetask",{"_index":897,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["updatetask(id",{"_index":909,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["updatetask(this.taskid",{"_index":528,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["updatetaskslist",{"_index":930,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["updatetaskslist(task",{"_index":940,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["uppercase",{"_index":416,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":1023,"title":{},"body":{"components/TasksCardListComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":406,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["url(/assets/img/home",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1271,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":1151,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["user.model",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":1156,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["username",{"_index":853,"title":{},"body":{"components/SignupComponent.html":{}}}],["userresponsetype",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1136,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["val",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":709,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validate",{"_index":711,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validation",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":871,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":488,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.email",{"_index":724,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.maxlength(1000",{"_index":497,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.maxlength(20",{"_index":496,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(2",{"_index":869,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":495,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(6",{"_index":870,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.required",{"_index":494,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["value",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1134,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":1135,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1308,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verfied",{"_index":1174,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verification",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["verify",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["verify/:token",{"_index":607,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["verifyemailcomponent",{"_index":80,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":1257,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1126,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1286,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":818,"title":{},"body":{"components/SidenavComponent.html":{}}}],["viewchild('drawer",{"_index":813,"title":{},"body":{"components/SidenavComponent.html":{}}}],["visibility",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":732,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["want",{"_index":1005,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["way",{"_index":888,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["weight",{"_index":1106,"title":{},"body":{"components/TopnavComponent.html":{}}}],["went",{"_index":1021,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["width",{"_index":377,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["wrap",{"_index":384,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["wrong",{"_index":1022,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["z",{"_index":546,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TopnavComponent.html":{}}}],["zone.js",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Initialize authentication.\n   */\n  ngOnInit() {\n    this.authService.initAuthentication();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, CoreModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'board',\n    loadChildren: () => \"import('./board/board.module').then(m => m.BoardModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigateByUrl('/authentication/login');\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'email', loadChildren: () => \"import('./email/email.module').then(m => m.EmailModule)\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getEmailVerificationToken\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                initAuthentication\n                            \n                            \n                                    Private\n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resendVerificationToken\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:129\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:137\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailVerificationToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n                    Get email verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:83\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuth(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:100\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \nresendVerificationToken(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:165\n                \n            \n\n\n            \n                \n                    Resend verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:121\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:112\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(firstName: string, email: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.isAuthenticated)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { IUser } from './user.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\nimport { tap } from 'rxjs/operators';\n\ntype UserResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly URL = environment.apiUrl + '/auth';\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(this.isAuthenticated);\n\n  constructor(private http: HttpClient, private router: Router, private uiService: UIService) {}\n\n  /**\n   * Get token.\n   */\n  getToken(): string {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth(): boolean {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener(): Observable {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  signup(firstName: string, email: string, password: string, confirmPassword: string): Observable {\n    return this.http.post(\n      `${this.URL}/signup`,\n      { firstName, email, password, confirmPassword },\n      { observe: 'response' }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string): Observable> {\n    return this.http\n      .post(`${this.URL}/login`, { email, password }, { observe: 'response' })\n      .pipe(\n        tap(response => {\n          const token = response.body.token;\n          if (token) {\n            const expiresInDuration = response.body.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuth(true);\n            const now = new Date();\n            const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar('Logged in successfully!', null, 3000, 'bottom');\n            this.router.navigateByUrl('/board');\n          }\n        })\n      );\n  }\n\n  /**\n   * Initialize authentication.\n   */\n  initAuthentication() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuth(true);\n      this.setAuthTimer(expiresIn / 1000);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuth(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar('Logged out successfully!', null, 3000, 'bottom');\n    this.router.navigateByUrl('/');\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData(): { token: string; expirationDate: Date } {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n\n  private isAuth(val: boolean) {\n    this.isAuthenticated = val;\n    this.authStatusListener.next(val);\n  }\n\n  /**\n   * Get email verification token.\n   * @params token -> expires in 30 min from creation.\n   */\n  getEmailVerificationToken(token: string): Observable {\n    return this.http.get(`${this.URL}/${token}`);\n  }\n\n  /**\n   * Resend verification token.\n   */\n  resendVerificationToken(email: string): Observable {\n    return this.http.post(`${this.URL}/token`, { email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Board Component\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n -->\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                .board {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 40px auto 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.board__item {\n  margin: 0 5px;\n}\n\n@media only screen and (max-width: 1035px) {\n  .board__item {\n    margin: 0 20px;\n  }\n\n  mat-divider {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            TasksCardListComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BoardRoutingModule\n                        \n                        \n                            DialogModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { BoardComponent } from './board.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CreateTaskComponent } from './tasks/create-task/create-task.component';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\nimport { TasksCardListComponent } from './tasks/tasks-card-list/tasks-card-list.component';\nimport { DialogModule } from '../components/dialog/dialog.module';\n\n@NgModule({\n  declarations: [BoardComponent, TasksComponent, CreateTaskComponent, UppercaseFirstLetterPipe, TasksCardListComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, BoardRoutingModule, MaterialModule, DialogModule]\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardRoutingModule.html":{"url":"modules/BoardRoutingModule.html","title":"module - BoardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board.component';\n\nconst routes: Routes = [{ path: '', component: BoardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NavigationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { NavigationModule } from './navigation/navigation.module';\n\n@NgModule({\n  declarations: [HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule, NavigationModule],\n  exports: [NavigationModule]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                modalTitle\n                            \n                            \n                                mode\n                            \n                            \n                                taskForm\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptionErrors\n                            \n                            \n                                getTitleErrors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDescriptionErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetDescriptionErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:83\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:70\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:122\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\nSet task id null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:29\n                \n            \n\n\n            \n                \n                    Initialize task form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:114\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:96\n                \n            \n\n\n            \n                \n                    Create or edit task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Create Task\" | \"Edit Task\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"create\" | \"edit\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:56\n                                \n                            \n                    \n                        \n                                Get title form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:63\n                                \n                            \n                    \n                        \n                                Get descriptipon form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n  taskForm: FormGroup;\n  mode: 'create' | 'edit';\n  modalTitle: 'Create Task' | 'Edit Task';\n  @Output() close = new EventEmitter();\n  private taskId: string;\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  /**\n   * Initialize task form.\n   */\n  ngOnInit() {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(20)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(1000)]\n      })\n    });\n\n    this.taskStateService.taskIdListener$.pipe(takeUntil(this.destroy$)).subscribe(id => (this.taskId = id));\n\n    if (this.taskId) {\n      this.mode = 'edit';\n      this.modalTitle = 'Edit Task';\n      this.taskStateService\n        .getMappedTask(this.taskId)\n        .subscribe(task => this.taskForm.setValue({ title: task.title, description: task.description }));\n    } else {\n      this.mode = 'create';\n      this.modalTitle = 'Create Task';\n    }\n  }\n\n  /**\n   * Get title form control.\n   */\n  get title(): AbstractControl {\n    return this.taskForm.get('title');\n  }\n\n  /**\n   * Get descriptipon form control.\n   */\n  get description(): AbstractControl {\n    return this.taskForm.get('description');\n  }\n\n  /**\n   * Display title errors.\n   */\n  getTitleErrors(): string {\n    if (this.title.hasError('required')) {\n      return 'You must add a title!';\n    } else if (this.title.hasError('minlength')) {\n      return 'The title must have minimum 3 characters';\n    } else if (this.title.hasError('maxlength')) {\n      return 'The title must have maximum 20 characters';\n    }\n  }\n\n  /**\n   * Display title errors.\n   */\n  getDescriptionErrors(): string {\n    if (this.description.hasError('required')) {\n      return 'You must add a description!';\n    } else if (this.description.hasError('minlength')) {\n      return 'The description must have minimum 3 characters';\n    } else if (this.description.hasError('maxlength')) {\n      return 'The description must have maximum 1000 characters';\n    }\n  }\n\n  /**\n   * Create or edit task.\n   */\n  onSave() {\n    if (this.mode === 'create') {\n      this.taskHttpService\n        .createTask({ id: null, title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } else if (this.mode === 'edit') {\n      this.taskHttpService\n        .updateTask(this.taskId, { title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    }\n\n    this.taskForm.reset();\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  onClose() {\n    this.close.emit();\n  }\n\n  /**\n   * Unsubscribe from observables.\n   * Set task id null.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.taskStateService.getTaskId(null);\n  }\n}\n\n    \n\n    \n        \n\n  {{ modalTitle }}\n  \n    \n      \n        \n         {{ getTitleErrors() }} \n      \n      \n        \n         {{ getDescriptionErrors() }} \n      \n      \n        SAVE\n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n/* Modal styles. */\n.modal.mat-card {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  text-align: center;\n  z-index: 200;\n  border-radius: 4px;\n}\n\n.modal__form {\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: auto;\n}\n\n.modal__actions {\n  display: flex;\n  justify-content: center;\n}\n\nmat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ modalTitle }}                             {{ getTitleErrors() }}                              {{ getDescriptionErrors() }}                     SAVE        CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialog/dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dialog/dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.content }}\n\n  \n    Confirm\n  \n  \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./dialog.component.css\n                \n                :host {\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mat-raised-button:not(:last-child) {\n  margin-right: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.content }}      Confirm        Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dialog/dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogModule.html":{"url":"modules/DialogModule.html","title":"module - DialogModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_imports\n\n\n\ncluster_DialogModule_exports\n\n\n\n\nDialogComponent\n\nDialogComponent\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dialog/dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog.component';\nimport { MaterialModule } from 'src/app/material.module';\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [DialogComponent],\n  entryComponents: [DialogComponent]\n})\nexport class DialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VerifyEmailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { EmailRoutingModule } from './email-routing.module';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\n@NgModule({\n  declarations: [VerifyEmailComponent],\n  imports: [CommonModule, EmailRoutingModule, ReactiveFormsModule, MaterialModule]\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailRoutingModule.html":{"url":"modules/EmailRoutingModule.html","title":"module - EmailRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\n\nconst routes: Routes = [{ path: 'verify/:token', component: VerifyEmailComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:22\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:36\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:29\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => (this.isAuth = isAuth));\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigateByUrl('/authentication/signup');\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        devDo helps you to keep track of your project progress and never miss a\n        deadline.\n      \n      \n        Sign Up!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .home {\n  background: url(/assets/img/home-image.jpg) no-repeat center center/cover;\n  height: calc(100% - 64px);\n  position: relative;\n}\n\n.overlay {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.home__cta {\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  width: 30%;\n  min-width: 25rem;\n  height: 100%;\n}\n\n.home__cta p {\n  line-height: 1.6;\n  font-size: 1.2rem;\n}\n\n@media only screen and (max-width: 599px) {\n  .home {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    devDo helps you to keep track of your project progress and never miss a        deadline.                    Sign Up!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"todo\" | \"doing\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"todo\" | \"doing\" | \"done\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITask {\n  id: string;\n  title: string;\n  description: string;\n  status?: 'todo' | 'doing' | 'done';\n  creator?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        isVerified\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVerified\n                                    \n                                \n                                \n                                    \n                                        isVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  id: string;\n  firstName: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  isVerified: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:39\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> email.\n\n\n                    \n                        Returns :     \"Please enter your email\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:20\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:61\n                \n            \n\n\n            \n                \n                    Call log in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> password.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:32\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hidePassword = true;\n  loginForm: FormGroup;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n\n  /**\n   *  Handle log in form errors -> email.\n   */\n  emailErrorHandler() {\n    if (this.formCtrls.email.hasError('required')) {\n      return 'Please enter your email';\n    } else if (this.formCtrls.email.hasError('email')) {\n      return 'Please enter a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle log in form errors -> password.\n   */\n  passwordErrorHandler() {\n    if (this.formCtrls.password.hasError('required')) {\n      return 'Please enter your password';\n    }\n    return null;\n  }\n\n  /**\n   * Call log in user.\n   */\n  onSubmit() {\n    this.authService.login(this.formCtrls.email.value, this.formCtrls.password.value).subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ emailErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ passwordErrorHandler() }}\n    \n  \n  Log In\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ emailErrorHandler() }}                      {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}              {{ passwordErrorHandler() }}        Log In'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatDialogModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_imports\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                        \n                            TopnavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { TopnavComponent } from './topnav/topnav.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\n@NgModule({\n  declarations: [TopnavComponent, SidenavComponent],\n  imports: [CommonModule, MaterialModule, AppRoutingModule],\n  exports: [SidenavComponent]\n})\nexport class NavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or have been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100% - 64px);\n}\n\n.heading {\n  font-size: 450%;\n}\n\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@media only screen and (max-width: 599px) {\n  .page-not-found {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or have been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drawer\n                            \n                            \n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:25\n                \n            \n\n\n            \n                \n                    Observe breakpoints.\nCheck if user is logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:44\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:37\n                \n            \n\n\n            \n                \n                    Toggle theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  isDarkTheme = false;\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @ViewChild('drawer', { static: false }) drawer: MatSidenav;\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Observe breakpoints.\n   * Check if user is logged in.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle theme.\n   */\n  onToggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Board\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      Log Out\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Board                    Sign Up                    Log In            Log Out                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfirmPasswordErrors\n                            \n                            \n                                getEmailErrors\n                            \n                            \n                                getFirstNameErrors\n                            \n                            \n                                getPasswordErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, uiService: UIService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:90\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> confirm-password field.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:66\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"You must enter a valid email\" | \"This.form is not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstNameErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstNameErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:54\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"This field is required\" | \"Username must have minimum 2 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:78\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> password field.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:30\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:102\n                \n            \n\n\n            \n                \n                    Signup user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:47\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private uiService: UIService,\n    private router: Router\n  ) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit() {\n    this.signupForm = this.fb.group(\n      {\n        firstName: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  getFirstNameErrors() {\n    if (this.formCtrls.firstName.hasError('required')) {\n      return 'This field is required';\n    } else if (this.formCtrls.firstName.hasError('minlength')) {\n      return 'Username must have minimum 2 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  getEmailErrors() {\n    if (this.formCtrls.email.hasError('required')) {\n      return 'You must enter a valid email';\n    } else if (this.formCtrls.email.hasError('email')) {\n      return 'This.form is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> password field.\n   */\n  getPasswordErrors() {\n    if (this.formCtrls.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.formCtrls.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> confirm-password field.\n   */\n  getConfirmPasswordErrors() {\n    if (this.formCtrls.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.formCtrls.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Signup user.\n   */\n  onSubmit() {\n    this.isLoading = true;\n    this.authService\n      .signup(\n        this.formCtrls.firstName.value,\n        this.formCtrls.email.value,\n        this.formCtrls.password.value,\n        this.formCtrls.confirmPassword.value\n      )\n      .pipe(finalize(() => (this.isLoading = false)))\n      .subscribe(() => {\n        this.uiService.showSnackBar(\n          'A confirmation email is on its way to your inbox. Please confirm your email before login',\n          null,\n          5000,\n          'top'\n        );\n        this.router.navigateByUrl('authentication/login');\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ getFirstNameErrors() }}\n  \n\n  \n    \n    {{ getEmailErrors() }}\n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ formCtrls.password.value?.length || 0 }}/6\n    {{ getPasswordErrors() }}\n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ getConfirmPasswordErrors() }}\n  \n  Sign Up\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getFirstNameErrors() }}            {{ getEmailErrors() }}                  {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ formCtrls.password.value?.length || 0 }}/6    {{ getPasswordErrors() }}                  {{ hideConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ getConfirmPasswordErrors() }}    Sign Up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskHttpService.html":{"url":"injectables/TaskHttpService.html","title":"injectable - TaskHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:54\n                \n            \n\n\n            \n                \n                    Delete task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:63\n                \n            \n\n\n            \n                \n                    Get a single task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:34\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:45\n                \n            \n\n\n            \n                \n                    Update task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ITask } from './task.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UIService } from '../../shared/ui.service';\nimport { environment } from '../../../environments/environment';\nimport { map } from 'rxjs/operators';\n\ntype TaskResponseType = HttpResponse;\ntype TaskArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskHttpService {\n  private readonly URL = environment.apiUrl + '/tasks';\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Create a new task.\n   * @param task -> created task\n   * @returns observable.\n   */\n  createTask(task: ITask): Observable {\n    return this.http.post(`${this.URL}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Create a new task.\n   * @param task -> created task.\n   * @returns observable.\n   */\n  getTasks(): Observable {\n    this.uiService.loadingStateChanged.next(true);\n    return this.http.get(this.URL, { observe: 'response' });\n  }\n\n  /**\n   * Update task.\n   * @param id -> task id.\n   * @param task -> Partial task.\n   * @returns observable.\n   */\n  updateTask(id: string, task: Partial): Observable {\n    return this.http.put(`${this.URL}/${id}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Delete task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  deleteTask(id: string): Observable> {\n    return this.http.delete(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Get a single task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getTask(id: string): Observable {\n    return this.http.get(`${this.URL}/${id}`, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskStateService.html":{"url":"injectables/TaskStateService.html","title":"injectable - TaskStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                taskIdListener\n                            \n                            \n                                taskIdListener$\n                            \n                            \n                                    Private\n                                taskListener\n                            \n                            \n                                taskListener$\n                            \n                            \n                                    Private\n                                tasksListListener\n                            \n                            \n                                tasksListListener$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMappedTask\n                            \n                            \n                                getTaskId\n                            \n                            \n                                reloadTasks\n                            \n                            \n                                updateTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:25\n                \n            \n\n\n            \n                \n                    Map task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskId\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:58\n                \n            \n\n\n            \n                \n                    Get task id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadTasks\n                        \n                        \n                    \n                \n            \n            \n                \nreloadTasks(tasks: ITask[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:50\n                \n            \n\n\n            \n                \n                    Reload tasks.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                ITask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> tasks list.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTasksList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTasksList(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:42\n                \n            \n\n\n            \n                \n                    Update tasks list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskIdListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskIdListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskIdListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasksListListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksListListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tasksListListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { ITask } from './task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStateService {\n  private taskListener = new BehaviorSubject(null);\n  taskListener$ = this.taskListener.asObservable();\n  private tasksListListener = new BehaviorSubject(null);\n  tasksListListener$ = this.tasksListListener.asObservable();\n  private taskIdListener = new BehaviorSubject(null);\n  taskIdListener$ = this.taskIdListener.asObservable();\n\n  constructor(private taskHttpService: TaskHttpService) {}\n\n  /**\n   * Map task.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getMappedTask(id: string): Observable {\n    return this.taskHttpService.getTask(id).pipe(\n      map((res: any) => {\n        return {\n          id: res.body._id,\n          title: res.body.title,\n          description: res.body.description,\n          status: res.body.status\n        };\n      })\n    );\n  }\n\n  /**\n   * Update tasks list.\n   * @param task -> created task.\n   */\n  updateTasksList(task: ITask) {\n    this.taskListener.next(task);\n  }\n\n  /**\n   * Reload tasks.\n   * @param tasks -> tasks list.\n   */\n  reloadTasks(tasks: ITask[]) {\n    this.tasksListListener.next(tasks);\n  }\n\n  /**\n   * Get task id.\n   * @param id -> task id.\n   */\n  getTaskId(id: string) {\n    this.taskIdListener.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksCardListComponent.html":{"url":"components/TasksCardListComponent.html","title":"component - TasksCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-card-list\n            \n\n            \n                styleUrls\n                ./tasks-card-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backward\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                forward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deleteTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBackward\n                            \n                            \n                                    Private\n                                    Async\n                                onChangeStatus\n                            \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onForward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backTooltip\n                            \n                            \n                                forwardTooltip\n                            \n                            \n                                isLoading\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService, uiService: UIService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forwardTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         ITask[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:112\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \nonBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:76\n                \n            \n\n\n            \n                \n                    Change status on backward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            onChangeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeStatus(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:87\n                \n            \n\n\n            \n                \n                    Change status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:43\n                \n            \n\n\n            \n                \n                    Delete task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \nonForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:66\n                \n            \n\n\n            \n                \n                    Change status on forward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            backward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ITask } from '../task.model';\nimport { UIService } from '../../../shared/ui.service';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n@Component({\n  selector: 'app-tasks-card-list',\n  templateUrl: './tasks-card-list.component.html',\n  styleUrls: ['./tasks-card-list.component.css']\n})\nexport class TasksCardListComponent implements OnDestroy {\n  @Input() tasks: ITask[];\n  @Input() title: string;\n  @Input() forwardTooltip: string;\n  @Input() backTooltip: string;\n  @Input() isLoading: boolean;\n  @Output() edit = new EventEmitter();\n  private forward = false;\n  private backward = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    private taskHttpService: TaskHttpService,\n    private taskStateService: TaskStateService,\n    private uiService: UIService,\n    private dialog: MatDialog\n  ) {}\n\n  onEdit(id: string) {\n    this.taskStateService.getTaskId(id);\n    this.edit.emit();\n  }\n\n  /**\n   * Delete task.\n   * @param id -> task id.\n   */\n  onDelete(id: string) {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      data: { title: 'Delete Task', content: 'Are you sure you want to delete this task?' }\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        if (result) {\n          this.deleteTask(id);\n        }\n      });\n  }\n\n  private deleteTask(id: string) {\n    this.taskHttpService.deleteTask(id).subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Change status on forward.\n   * @param id -> task id.\n   */\n  onForward(id: string) {\n    this.backward = false;\n    this.forward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status on backward.\n   * @param id -> task id.\n   */\n  onBackward(id: string) {\n    this.forward = false;\n    this.backward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status.\n   * @param id -> task id.\n   * @returns promise\n   */\n  private async onChangeStatus(id: string): Promise {\n    try {\n      const task = await this.taskStateService.getMappedTask(id).toPromise();\n\n      let status: 'todo' | 'doing' | 'done';\n\n      if (this.forward) {\n        status = task.status.includes('todo') ? 'doing' : 'done';\n      }\n\n      if (this.backward) {\n        status = task.status.includes('done') ? 'doing' : 'todo';\n      }\n\n      this.taskHttpService\n        .updateTask(id, { status })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } catch (error) {\n      this.uiService.showSnackBar('Something went wrong! Try again later.', null, 5000, 'top');\n    }\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    \n      {{ task.title | uppercaseFirstLetter }}\n    \n\n    \n      {{ task.description | uppercaseFirstLetter }}\n    \n\n    \n      \n        undo\n      \n      \n        done\n        done_all\n      \n\n      \n        edit\n      \n\n      \n        delete\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tasks-card-list.component.css\n                \n                mat-expansion-panel:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}            {{ task.title | uppercaseFirstLetter }}              {{ task.description | uppercaseFirstLetter }}                      undo                    done        done_all                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                doingTasks$\n                            \n                            \n                                doneTasks$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                tasks\n                            \n                            \n                                tasks$\n                            \n                            \n                                todoTasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllTasks\n                            \n                            \n                                    Private\n                                getUpdatedTasksList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n                    Get tasks.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUpdatedTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedTasksList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:66\n                \n            \n\n\n            \n                \n                    Get new task.\n\n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:82\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModal\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:75\n                \n            \n\n\n            \n                \n                    Open/close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doingTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doneTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITask[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil, map, switchMap, finalize, share } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { TaskStateService } from './task-state.service';\nimport { ITask } from './task.model';\n\n/**\n * Tasks List Component\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n  isOpen = false;\n  isLoading = false;\n  tasks$: Observable;\n  todoTasks$: Observable;\n  doingTasks$: Observable;\n  doneTasks$: Observable;\n  private tasks: ITask[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n\n    this.tasks$ = this.taskStateService.tasksListListener$.pipe(\n      switchMap(() => this.getAllTasks()),\n      share()\n    );\n\n    this.todoTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('todo'))));\n    this.doingTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('doing'))));\n    this.doneTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('done'))));\n\n    this.getUpdatedTasksList();\n  }\n\n  /**\n   * Get tasks.\n   */\n  private getAllTasks(): Observable {\n    return this.taskHttpService.getTasks().pipe(\n      finalize(() => (this.isLoading = false)),\n      map(res => {\n        return res.body.tasks.map((task: any) => {\n          return {\n            id: task._id,\n            title: task.title,\n            description: task.description,\n            status: task.status,\n            creator: task.creator\n          };\n        });\n      })\n    );\n  }\n\n  /**\n   * Get new task.\n   */\n  private getUpdatedTasksList(): Subscription {\n    return this.taskStateService.taskListener$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Open/close modal.\n   */\n  toggleModal() {\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    add\n  \n\n\n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.css\n                \n                .tasks-container {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.list {\n  width: 300px;\n}\n\n.action {\n  display: flex;\n  margin: 20px;\n}\n\n.action .mat-mini-fab {\n  margin-left: auto;\n}\n\n@media only screen and (max-width: 1035px) {\n  mat-divider {\n    display: none;\n  }\n\n  app-tasks-card-list:not(:last-child) {\n    margin-bottom: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                ./topnav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleSidenav\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidenav\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidenav\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTheme\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:23\n                \n            \n\n\n            \n                \n                    Get authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:49\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:35\n                \n            \n\n\n            \n                \n                    Toggle side navigation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:42\n                \n            \n\n\n            \n                \n                    Change theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})\nexport class TopnavComponent implements OnInit {\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @Output() toggleSidenav = new EventEmitter();\n  @Output() toggleTheme = new EventEmitter();\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Get authentication status.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle side navigation.\n   */\n  onToggleSidenav() {\n    this.toggleSidenav.emit();\n  }\n\n  /**\n   * Change theme.\n   */\n  onToggleTheme() {\n    this.toggleTheme.emit();\n  }\n\n  /**\n   * Log out user.\n   */\n  onLogout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  devDo\n  \n  \n    \n      My Board\n    \n    \n      Sign Up\n    \n    \n      Log In\n    \n    \n      Log Out\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./topnav.component.css\n                \n                .mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 99;\n}\n\n.main-navigation {\n  display: flex;\n  align-self: baseline;\n}\n\n.spacer {\n  flex: 1 1 0;\n}\n\n.app-title {\n  font-size: 24px;\n  font-weight: 400;\n}\n\n.mat-nav-list .mat-list-item {\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu    devDo              My Board              Sign Up              Log In              Log Out        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:22\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  MatSnackBar,\n  MatSnackBarVerticalPosition\n} from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(\n    message: string,\n    action: any,\n    duration: number,\n    position: MatSnackBarVerticalPosition\n  ) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return;\n    }\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from './user.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly URL = environment.apiUrl + '/user';\n\n  constructor(private http: HttpClient) {}\n\n  update(id: string, user: Partial): Observable>> {\n    return this.http.put(`${this.URL}/${id}`, user, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/email/verify-email/verify-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n            \n                styleUrls\n                ./verify-email.component.css\n            \n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, userService: UserService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/email/verify-email/verify-email.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:52\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:29\n                \n            \n\n\n            \n                \n                    Validate user's email address.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:64\n                \n            \n\n\n            \n                \n                    Resend verification email with a new token.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { UserService } from '../../user.service';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n  email: FormControl;\n  errorMessage: string;\n  isVisible: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Validate user's email address.\n   */\n  ngOnInit() {\n    this.route.paramMap\n      .pipe(\n        map(param => param.get('token')),\n        concatMap(token => this.authService.getEmailVerificationToken(token)),\n        concatMap(res => this.userService.update(res.token.userId, { isVerified: true })),\n        catchError(error => {\n          if (error.error.message === 'Your request to verify your email has expired.') {\n            this.isVisible = true;\n          } else {\n            this.isVisible = false;\n          }\n          return (this.errorMessage = error.error.message);\n        })\n      )\n      .subscribe();\n\n    this.email = new FormControl(null, [Validators.required, Validators.email]);\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  getEmailErrors(): string {\n    if (this.email.hasError('required')) {\n      return 'You must enter your email';\n    } else if (this.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Resend verification email with a new token.\n   */\n  onSubmit() {\n    this.authService.resendVerificationToken(this.email.value).subscribe(() => {\n      this.isVisible = false;\n      this.uiService.showSnackBar(\n        'A confirmation email is on its way to your inbox. Please confirm your email before login',\n        null,\n        5000,\n        'top'\n      );\n    });\n  }\n}\n\n    \n\n    \n        \n  Your email has been verfied. You can now log in.\n  {{ errorMessage }}\n\n  \n    Enter your email address to receive a new verification email.\n    \n      \n    \n    {{ getEmailErrors() }}\n    Submit\n  \n\n\n    \n\n    \n                \n                    ./verify-email.component.css\n                \n                .mat-card {\n  min-width: 300px;\n  width: 50%;\n  margin: 50px auto;\n  text-align: center;\n}\n\n.email {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  width: 50%;\n  margin: auto;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your email has been verfied. You can now log in.  {{ errorMessage }}      Enter your email address to receive a new verification email.                  {{ getEmailErrors() }}    Submit  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                61 %\n                (13/21)\n            \n        \n        \n            \n                \n                src/app/auth/email/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/board/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-http.service.ts\n            \n            injectable\n            TaskHttpService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-state.service.ts\n            \n            injectable\n            TaskStateService\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task.model.ts\n            \n            interface\n            ITask\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n            \n            component\n            TasksCardListComponent\n            \n                27 %\n                (5/18)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/board/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/core/navigation/topnav/topnav.component.ts\n            \n            component\n            TopnavComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.0.2\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            core-js : ^2.6.10\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 8.0.2.\nDocumentation\nThe documentation for this project can be found here.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_exports\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskArrayResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            TaskResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            UserResponseType   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/board/tasks/task-http.service.ts\n    \n    \n        \n            \n                \n                    \n                    TaskArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    src/app/auth/auth.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: HEROKU_URL\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v2'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
