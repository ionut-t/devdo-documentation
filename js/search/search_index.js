var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.338,1,1.033]],["body/components/AppComponent.html",[0,0.589,1,1.718,2,1.594,3,0.186,4,0.167,5,1.213,6,1.213,7,1.213,8,1.213,9,0.167,10,3.221,11,1.213,12,3.009,13,1.594,14,2.182,15,1.16,16,2.401,17,2.104,18,1.594,19,5.858,20,1.594,21,5.128,22,0.504,23,1.071,24,2.349,25,5.128,26,0.815,27,2.262,28,2.666,29,1.117,30,3.733,31,1.12,32,0.017,33,1.094,34,0.768,35,0.977,36,3.733,37,3.96,38,3.338,39,1.071,40,1.11,41,5.128,42,6.306,43,3.733,44,5.128,45,0.416,46,0.246,47,3.733,48,1.39,49,3.96,50,3.733,51,3.733,52,0.186,53,0.186,54,1.16,55,3.733,56,1.017,57,3.733,58,3.733,59,0.712,60,1.666,61,1.594,62,1.213,63,2.049,64,1.213,65,1.213,66,1.017,67,1.279,68,1.213,69,1.017,70,1.213,71,0.973,72,1.213,73,1.017,74,1.213,75,1.017,76,1.16,77,1.666,78,0.973,79,1.213,80,0.973,81,1.213,82,1.017,83,1.213,84,0.973,85,1.11,86,1.213,87,0.973,88,1.213,89,0.973,90,0.648,91,1.017,92,1.213,93,0.973,94,1.213,95,1.017,96,1.11,97,1.11,98,1.213,99,0.931,100,1.213,101,1.017,102,1.213,103,0.973,104,1.11,105,0.973,106,1.213,107,1.213,108,0.008,109,0.011,110,0.008]],["title/modules/AppModule.html",[111,0.757,112,2.674]],["body/modules/AppModule.html",[1,2.076,3,0.216,4,0.194,9,0.194,17,1.179,32,0.017,45,0.492,46,0.286,52,0.216,53,0.216,59,0.825,90,0.752,108,0.009,109,0.012,110,0.009,111,0.864,112,5.447,113,1.288,114,1.691,115,2.717,116,2.717,117,2.717,118,1.407,119,3.736,120,3.736,121,3.736,122,3.736,123,3.736,124,4.046,125,4.64,126,4.64,127,4.64,128,2.438,129,1.54,130,4.331,131,2.11,132,5.665,133,4.887,134,3.052,135,1.925,136,5.665,137,4.331,138,5.665,139,6.313,140,2.458,141,2.458,142,4.331,143,4.331,144,4.331,145,4.331,146,5.665,147,5.665,148,5.665,149,3.025]],["title/classes/AppPage.html",[53,0.189,150,2.931]],["body/classes/AppPage.html",[3,0.272,4,0.244,9,0.244,12,2.606,22,0.738,23,1.368,29,1.249,32,0.017,39,1.368,45,0.36,52,0.272,53,0.272,56,1.784,61,1.697,108,0.012,109,0.014,110,0.012,134,3.849,150,5.06,151,5.461,152,4.711,153,7.279,154,7.279,155,5.461,156,5.461,157,4.711,158,5.461,159,5.653,160,5.461,161,5.461]],["title/modules/AppRoutingModule.html",[111,0.757,124,2.154]],["body/modules/AppRoutingModule.html",[0,0.544,3,0.242,4,0.217,9,0.217,32,0.017,38,3.165,45,0.475,46,0.321,48,1.811,52,0.242,53,0.242,78,1.59,84,1.59,85,1.814,108,0.011,109,0.013,110,0.011,113,1.446,118,1.58,124,3.463,131,1.811,135,2.074,162,4.195,163,3.165,164,3.56,165,3.971,166,4.862,167,4.3,168,4.862,169,4.862,170,3.427,171,4.195,172,2.201,173,4.688,174,2.76,175,4.195,176,4.195,177,2.596,178,4.712,179,4.862,180,4.862,181,4.195,182,4.862,183,4.862,184,4.3,185,4.862,186,4.862]],["title/guards/AuthGuard.html",[167,2.674,187,2.674]],["body/guards/AuthGuard.html",[3,0.223,4,0.2,9,0.2,11,1.456,12,2.137,13,1.392,22,0.605,23,1.209,26,0.978,27,2.714,28,2.809,29,1.104,31,1.265,32,0.017,33,1.005,34,0.868,35,1.104,39,0.935,45,0.448,46,0.296,48,1.668,52,0.223,53,0.223,54,1.392,56,1.577,108,0.01,109,0.013,110,0.01,159,4.996,167,4.081,172,2.028,181,5.853,187,4.081,188,4.479,189,3.864,190,5.285,191,5.791,192,4.437,193,4.479,194,5.791,195,4.479,196,4.081,197,2.919,198,5.791,199,4.081,200,5.791,201,4.472,202,5.791,203,5.791,204,2.905,205,3.509,206,1.882,207,1.522,208,2.542,209,2.392,210,1.392,211,4.956,212,4.479,213,4.479]],["title/interceptors/AuthInterceptor.html",[126,2.47,214,2.47]],["body/interceptors/AuthInterceptor.html",[3,0.237,4,0.212,9,0.212,11,1.543,13,1.476,22,0.641,23,1.255,26,1.037,27,2.877,28,2.852,29,1.146,31,1.313,32,0.017,33,1.043,34,0.9,35,1.146,38,3.912,39,0.992,45,0.435,46,0.313,52,0.237,53,0.237,54,1.476,56,1.293,108,0.01,109,0.013,110,0.01,126,3.912,140,2.695,172,2.721,206,1.953,208,2.695,214,3.912,215,4.096,216,4.096,217,5.185,218,4.748,219,5.185,220,5.981,221,5.69,222,5.981,223,4.748,224,4.236,225,6.01,226,4.642,227,4.096,228,5.185,229,6.01,230,4.748,231,4.748,232,4.748,233,4.748,234,4.748,235,4.748,236,4.748]],["title/modules/AuthModule.html",[111,0.757,237,2.674]],["body/modules/AuthModule.html",[3,0.227,4,0.203,9,0.203,32,0.017,45,0.496,46,0.3,52,0.227,53,0.227,59,0.866,75,1.967,76,1.412,80,1.883,90,0.789,93,1.883,108,0.01,109,0.013,110,0.01,111,0.907,113,1.351,114,1.774,115,2.78,116,1.955,117,1.955,118,1.476,128,2.515,129,1.616,131,2.177,135,1.986,141,2.579,237,5.495,238,3.92,239,3.92,240,3.92,241,4.701,242,2.958,243,4.099,244,4.543,245,2.946,246,2.168,247,4.119,248,1.955,249,3.509,250,3.92,251,3.92,252,3.92,253,3.92,254,3.509,255,3.509]],["title/modules/AuthRoutingModule.html",[111,0.757,241,2.47]],["body/modules/AuthRoutingModule.html",[0,0.565,3,0.258,4,0.231,9,0.231,32,0.017,45,0.471,46,0.341,48,1.925,52,0.258,53,0.258,80,1.652,93,1.652,105,1.347,108,0.011,109,0.014,110,0.011,113,1.537,118,1.679,131,1.925,135,2.154,163,3.364,164,3.659,165,4.124,172,2.34,173,4.461,174,2.933,175,4.459,178,3.992,241,4.124,252,4.459,253,4.459,256,5.168,257,3.992,258,3.364,259,4.459,260,5.168,261,5.168,262,3.643]],["title/injectables/AuthService.html",[28,1.481,206,1.233]],["body/injectables/AuthService.html",[3,0.093,4,0.084,9,0.084,12,0.893,22,0.253,23,0.636,26,0.409,28,1.189,29,1.353,31,1.337,32,0.018,33,1.062,34,0.988,35,1.167,37,2.353,38,4.159,39,1.412,40,1.558,45,0.38,46,0.123,48,0.697,52,0.093,53,0.093,54,0.582,56,1.74,67,0.76,90,0.771,105,1.72,108,0.004,109,0.007,110,0.004,129,1.37,140,1.062,172,2.696,174,2.974,192,3.348,197,2.641,204,3.026,205,2.962,206,0.99,207,0.636,209,0.999,210,2.302,211,2.353,224,2.147,250,2.628,257,2.353,258,1.983,263,0.999,264,1.445,265,0.727,266,3.853,267,3.853,268,6.086,269,3.853,270,2.716,271,2.187,272,4.441,273,3.046,274,4.441,275,3.831,276,3.046,277,4.441,278,4.441,279,4.441,280,4.441,281,3.046,282,3.046,283,3.046,284,3.046,285,1.319,286,3.13,287,2.501,288,3.046,289,2.147,290,1.871,291,3.046,292,4.441,293,4.441,294,3.046,295,1.815,296,1.871,297,2.628,298,4.14,299,2.628,300,1.871,301,1.319,302,1.871,303,3.046,304,3.046,305,2.691,306,3.046,307,1.871,308,3.831,309,1.871,310,3.046,311,1.871,312,1.871,313,3.046,314,1.871,315,3.046,316,3.046,317,1.871,318,2.89,319,1.871,320,3.046,321,1.871,322,2.628,323,3.046,324,4.058,325,1.871,326,3.046,327,3.046,328,5.955,329,4.521,330,1.871,331,2.353,332,3.046,333,2.335,334,1.871,335,3.046,336,2.628,337,3.046,338,1.871,339,2.353,340,1.31,341,1.198,342,1.703,343,3.046,344,1.536,345,1.871,346,1.871,347,1.871,348,2.147,349,1.871,350,1.983,351,1.218,352,1.615,353,1.319,354,1.615,355,1.134,356,1.445,357,1.445,358,0.731,359,1.615,360,4.441,361,3.046,362,1.871,363,1.871,364,1.871,365,1.983,366,2.147,367,1.871,368,1.871,369,0.999,370,1.871,371,1.871,372,3.046,373,1.871,374,1.871,375,3.046,376,2.628,377,1.871,378,3.324,379,1.871,380,3.046,381,3.046,382,1.942,383,3.046,384,2.147,385,1.871,386,3.046,387,1.871,388,3.046,389,1.871,390,1.871,391,0.847,392,1.871,393,1.871,394,1.871,395,1.871,396,1.871,397,1.871,398,1.871,399,1.871,400,1.871,401,1.871,402,1.871,403,1.871,404,1.871,405,1.871,406,1.871,407,1.871,408,1.871,409,1.871,410,2.628,411,1.871,412,1.615,413,1.134,414,1.871,415,1.871,416,1.871,417,1.871,418,1.871,419,1.615,420,1.871,421,1.871,422,1.871]],["title/modules/CoreModule.html",[111,0.757,125,2.47]],["body/modules/CoreModule.html",[3,0.23,4,0.206,9,0.206,17,1.258,32,0.017,45,0.487,46,0.305,52,0.23,53,0.23,59,0.88,78,1.891,84,1.891,85,1.374,90,0.802,108,0.01,109,0.013,110,0.01,111,0.922,113,1.374,114,1.803,115,2.802,116,1.988,117,1.988,118,2.116,124,4.117,125,5.068,128,2.541,129,1.643,131,2.2,135,2.007,141,2.622,170,3.256,171,3.985,242,2.971,245,2.977,246,2.204,249,3.568,423,3.985,424,3.985,425,3.985,426,3.985,427,5.007,428,4.619,429,4.619,430,4.619]],["title/components/CreateProjectComponent.html",[0,0.338,66,1.033]],["body/components/CreateProjectComponent.html",[0,0.391,1,0.62,2,1.107,3,0.114,4,0.102,5,0.74,6,0.74,7,0.74,8,0.74,9,0.102,11,2.065,13,1.107,14,1.635,15,0.708,16,2.252,17,1.974,18,1.107,20,1.107,22,0.308,23,0.744,24,1.849,26,0.497,29,1.301,31,0.778,32,0.017,33,1.184,34,0.895,35,0.679,39,1.193,40,1.699,45,0.408,46,0.15,52,0.114,53,0.114,54,0.708,56,1.195,59,0.434,60,1.158,61,1.107,62,0.74,63,1.613,64,0.74,65,0.74,66,1.352,67,1.679,68,0.74,69,0.62,70,0.74,71,0.593,72,0.74,73,0.62,74,0.74,75,0.62,76,0.708,77,1.158,78,0.593,79,0.74,80,0.593,81,0.74,82,0.62,83,0.74,84,0.593,85,0.677,86,0.74,87,0.593,88,0.74,89,0.593,90,0.395,91,0.62,92,0.74,93,0.593,94,0.74,95,0.62,96,0.677,97,0.677,98,0.74,99,0.568,100,0.74,101,0.62,102,0.74,103,0.593,104,0.677,105,0.593,106,0.74,107,0.74,108,0.005,109,0.008,110,0.005,207,0.774,210,1.856,248,0.98,265,0.851,295,1.426,331,2.752,333,3.463,340,0.774,341,0.708,342,1.857,358,0.889,382,1.148,431,5.959,432,5.334,433,1.964,434,2.727,435,4.389,436,3.563,437,3.094,438,2.578,439,3.787,440,4.414,441,4.389,442,3.787,443,2.503,444,3.499,445,4.284,446,2.159,447,3.508,448,2.319,449,1.758,450,3.463,451,3.887,452,3.563,453,2.66,454,2.277,455,2.022,456,3.746,457,2.651,458,3.499,459,3.835,460,2.277,461,2.022,462,3.243,463,1.796,464,3.051,465,2.277,466,2.277,467,2.022,468,2.277,469,2.159,470,3.094,471,3.787,472,2.277,473,2.277,474,3.232,475,2.277,476,2.277,477,2.277,478,2.277,479,1.613,480,1.964,481,2.277,482,3.074,483,2.159,484,1.38,485,2.491,486,1.38,487,1.605,488,1.482,489,1.758,490,1.148,491,1.292,492,2.277,493,2.319,494,1.292,495,3.074,496,1.964,497,2.277,498,2.277,499,3.563,500,1.459,501,4.284,502,1.964,503,3.074,504,2.277,505,2.277,506,2.277,507,2.277,508,2.277,509,1.758,510,1.758,511,1.964,512,2.277,513,2.277,514,2.277,515,3.563,516,1.964,517,3.563,518,3.074,519,2.511,520,3.563,521,1.482,522,2.277,523,1.758,524,1.605,525,3.563,526,4.284,527,3.074,528,3.074,529,2.319,530,2.511]],["title/components/CreateTaskComponent.html",[0,0.338,69,1.033]],["body/components/CreateTaskComponent.html",[0,0.461,1,0.569,2,1.035,3,0.104,4,0.093,5,0.679,6,0.679,7,0.679,8,0.679,9,0.093,11,1.95,13,1.035,14,1.546,15,0.65,16,2.221,17,1.946,18,1.035,20,1.035,22,0.282,23,0.695,24,1.764,26,0.457,29,1.307,31,0.727,32,0.017,33,1.041,34,0.899,35,0.635,37,2.572,39,1.207,40,1.719,45,0.408,46,0.138,52,0.104,53,0.104,54,0.65,56,1.131,59,0.398,60,1.082,61,1.035,62,0.679,63,1.538,64,0.679,65,0.679,66,0.569,67,1.643,68,0.679,69,1.289,70,0.679,71,0.545,72,0.679,73,0.569,74,0.679,75,0.569,76,0.65,77,1.082,78,0.545,79,0.679,80,0.545,81,0.679,82,0.569,83,0.679,84,0.545,85,0.622,86,0.679,87,0.545,88,0.679,89,0.545,90,0.363,91,0.569,92,0.679,93,0.545,94,0.679,95,0.569,96,1.234,97,0.622,98,0.679,99,0.521,100,0.679,101,0.569,102,0.679,103,0.545,104,0.622,105,0.545,106,0.679,107,0.679,108,0.005,109,0.007,110,0.005,207,0.71,210,1.97,224,2.347,248,0.899,265,0.795,295,1.38,331,2.572,333,3.338,340,0.71,341,0.65,342,1.95,358,0.816,378,2.873,382,2.092,434,1.981,437,2.926,438,2.542,439,3.581,440,4.255,443,2.386,444,3.337,445,4.085,446,2.018,447,3.366,448,2.167,453,2.515,455,1.89,456,3.636,457,2.528,458,3.337,459,3.657,461,1.89,462,3.405,463,1.678,464,2.941,467,1.89,470,2.926,474,3.082,479,2.799,480,1.803,482,2.873,483,2.018,484,1.267,485,2.356,486,1.267,487,1.473,488,1.36,489,1.614,490,1.053,491,1.186,493,2.167,494,1.89,495,2.873,496,1.803,500,1.939,501,4.085,502,1.803,503,2.873,511,1.803,518,2.873,519,2.347,521,2.702,523,1.614,524,1.473,526,4.085,527,2.873,528,2.873,530,2.347,531,5.974,532,5.348,533,1.803,534,2.873,535,3.33,536,2.926,537,3.597,538,4.151,539,3.33,540,4.151,541,4.151,542,3.337,543,1.614,544,3.338,545,3.502,546,3.33,547,2.09,548,2.09,549,2.09,550,2.347,551,2.572,552,2.09,553,2.09,554,2.09,555,3.581,556,2.09,557,2.09,558,1.981,559,2.09,560,2.09,561,2.09,562,2.09,563,2.09,564,2.09,565,1.186,566,2.09,567,2.09,568,2.09,569,4.735,570,2.572,571,1.803,572,2.09,573,1.803,574,2.09,575,2.09,576,2.09,577,1.614,578,1.614,579,2.09,580,2.09,581,2.09,582,2.873,583,2.09,584,2.09,585,3.33,586,2.873,587,2.09,588,2.09,589,1.614,590,1.614,591,2.09,592,3.33]],["title/components/DialogComponent.html",[0,0.338,71,0.989]],["body/components/DialogComponent.html",[0,0.528,1,1.039,2,1.618,3,0.19,4,0.171,5,1.24,6,1.24,7,1.24,8,1.24,9,0.171,15,1.186,16,2.407,17,2.109,18,1.618,20,1.618,22,0.516,26,0.834,29,0.992,31,0.834,32,0.017,33,1.028,34,0.78,35,0.727,45,0.344,46,0.252,52,0.19,53,0.19,59,0.727,60,1.692,61,1.618,62,1.24,63,2.068,64,1.24,65,1.24,66,1.039,67,1.299,68,1.24,69,1.039,70,1.24,71,1.659,72,1.24,73,1.039,74,1.24,75,1.039,76,1.186,77,1.692,78,0.995,79,1.24,80,0.995,81,1.24,82,1.039,83,1.24,84,0.995,85,1.135,86,1.24,87,0.995,88,1.24,89,0.995,90,0.662,91,1.039,92,1.24,93,0.995,94,1.24,95,1.039,96,1.135,97,1.135,98,1.24,99,0.952,100,1.24,101,1.039,102,1.24,103,0.995,104,1.135,105,0.995,106,1.24,107,1.24,108,0.008,109,0.011,110,0.008,174,3.612,265,1.243,295,1.243,438,2.108,479,1.728,530,3.669,593,2.948,594,3.669,595,5.112,596,4.492,597,3.816,598,4.695,599,3.816,600,3.293,601,3.816,602,3.816,603,3.293,604,3.293,605,2.484,606,1.728,607,2.166,608,3.293,609,5.206,610,5.206,611,3.669,612,2.484,613,1.728,614,2.484,615,2.484,616,2.484,617,2.166,618,2.69,619,2.313,620,1.821,621,3.816,622,3.816,623,2.948,624,2.313,625,3.816,626,3.816]],["title/interfaces/DialogData.html",[598,2.674,606,1.718]],["body/interfaces/DialogData.html",[0,0.573,3,0.264,4,0.236,9,0.236,16,1.645,17,1.441,18,1.645,20,1.645,22,0.715,32,0.017,34,0.963,45,0.424,46,0.349,52,0.264,53,0.264,71,1.379,108,0.012,109,0.014,110,0.012,174,3.003,265,1.535,295,1.791,438,1.882,479,3.26,593,4.087,594,3.729,595,4.565,596,4.565,598,4.88,603,4.565,604,4.565,605,3.444,606,2.395,607,4.088,608,4.565,627,3.444]],["title/modules/DialogModule.html",[111,0.757,628,2.299]],["body/modules/DialogModule.html",[3,0.25,4,0.224,9,0.224,32,0.017,45,0.467,46,0.331,52,0.25,53,0.25,59,0.956,71,2.042,90,0.871,108,0.011,109,0.014,110,0.011,111,1.001,113,1.492,114,1.958,115,2.91,116,2.158,117,2.158,118,2.197,128,2.677,129,1.784,131,2.317,135,2.114,242,3.034,245,3.136,246,2.393,628,4.636,629,4.328,630,4.328,631,5.016,632,4.328,633,5.016,634,6.221,635,5.016,636,3.04]],["title/modules/EmailModule.html",[111,0.757,637,2.674]],["body/modules/EmailModule.html",[3,0.238,4,0.214,9,0.214,32,0.017,45,0.49,46,0.315,52,0.238,53,0.238,59,0.911,89,1.907,90,1.047,103,1.907,104,1.421,105,1.246,108,0.01,109,0.013,110,0.01,111,0.954,113,1.421,114,1.866,115,2.846,116,2.056,117,2.056,118,1.553,128,2.597,129,1.7,131,2.248,135,2.051,141,2.712,242,2.997,245,3.042,246,2.28,247,4.253,248,2.056,255,3.691,636,2.896,637,5.447,638,4.123,639,4.123,640,4.123,641,4.763,642,4.778,643,3.368,644,4.123,645,3.368]],["title/modules/EmailRoutingModule.html",[111,0.757,641,2.47]],["body/modules/EmailRoutingModule.html",[0,0.573,3,0.264,4,0.236,9,0.236,32,0.017,45,0.475,46,0.349,48,1.971,52,0.264,53,0.264,89,1.676,90,1.116,103,1.676,104,1.574,108,0.012,109,0.014,110,0.012,113,1.574,118,1.719,131,1.971,135,2.185,163,3.444,164,3.697,165,4.184,172,2.395,173,4.184,255,4.087,262,3.729,641,4.184,643,3.729,644,4.565,645,3.729,646,5.291,647,5.291,648,5.291]],["title/interceptors/ErrorInterceptor.html",[127,2.47,214,2.47]],["body/interceptors/ErrorInterceptor.html",[3,0.225,4,0.201,9,0.201,11,1.464,13,1.401,22,0.609,23,1.214,26,0.984,29,1.108,31,1.27,32,0.017,33,1.009,34,0.871,35,1.108,39,0.941,45,0.464,46,0.297,52,0.225,53,0.225,54,1.401,56,1.583,108,0.01,109,0.013,110,0.01,127,3.784,140,2.558,206,1.889,207,1.532,214,3.784,215,3.888,217,5.866,219,5.015,220,5.866,221,5.552,222,5.866,227,3.888,228,5.015,287,3.262,358,1.759,382,2.271,463,2.93,649,3.888,650,4.097,651,4.507,652,4.507,653,4.507,654,4.97,655,5.813,656,3.888,657,4.507,658,4.507,659,4.507,660,4.507,661,4.49,662,4.507,663,4.507,664,3.481,665,4.507,666,4.507,667,4.507,668,4.507,669,4.507,670,5.015,671,4.507,672,2.933,673,1.939,674,4.507]],["title/components/FooterComponent.html",[0,0.338,73,1.033]],["body/components/FooterComponent.html",[0,0.525,1,1.027,2,1.605,3,0.188,4,0.169,5,1.225,6,1.225,7,1.225,8,1.225,9,0.169,13,1.605,14,2.193,15,1.172,16,2.404,17,2.107,18,1.605,20,1.605,22,0.509,23,1.078,24,2.359,29,0.984,32,0.017,33,0.896,34,0.565,39,0.788,40,1.121,45,0.249,46,0.249,52,0.188,53,0.188,59,0.719,60,1.678,61,1.605,62,1.225,63,2.058,64,1.225,65,1.225,66,1.027,67,1.288,68,1.225,69,1.027,70,1.225,71,0.983,72,1.225,73,1.725,74,1.225,75,1.027,76,1.172,77,1.678,78,0.983,79,1.225,80,0.983,81,1.225,82,1.027,83,1.225,84,0.983,85,1.121,86,1.225,87,0.983,88,1.225,89,0.983,90,0.654,91,1.027,92,1.225,93,0.983,94,1.225,95,1.027,96,1.121,97,1.121,98,1.225,99,0.941,100,1.225,101,1.027,102,1.225,103,0.983,104,1.121,105,0.983,106,1.225,107,1.225,108,0.008,109,0.011,110,0.008,172,2.338,265,1.233,295,1.233,342,1.225,607,2.14,612,2.454,613,2.666,614,2.464,620,1.799,675,3.253,676,5.164,677,5.889,678,5.164,679,7.014,680,3.771,681,3.771,682,5.164,683,3.771,684,5.164,685,3.771,686,3.771,687,3.988,688,5.164,689,5.164,690,3.771,691,2.14,692,3.253,693,3.771,694,2.658,695,2.912,696,3.771,697,2.658,698,3.771,699,2.454,700,3.771,701,3.253]],["title/modules/FooterModule.html",[111,0.757,702,2.47]],["body/modules/FooterModule.html",[3,0.252,4,0.226,9,0.226,32,0.017,45,0.468,46,0.334,52,0.252,53,0.252,59,0.965,73,2.121,90,0.879,108,0.011,109,0.014,110,0.011,111,1.01,113,1.505,114,1.976,115,2.922,116,2.178,117,2.178,118,2.206,128,2.692,129,1.801,131,2.33,135,2.126,242,3.041,245,3.153,246,2.415,636,3.068,702,4.987,703,4.367,704,4.367,705,5.062,706,4.367,707,5.062,708,5.062]],["title/components/ForgotPasswordComponent.html",[0,0.338,75,1.033]],["body/components/ForgotPasswordComponent.html",[0,0.459,1,0.806,2,1.352,3,0.148,4,0.132,5,0.962,6,0.962,7,0.962,8,0.962,9,0.132,13,1.352,14,1.92,15,0.92,16,2.338,17,2.049,18,1.352,20,1.352,22,0.4,23,0.908,24,2.116,26,0.647,27,1.794,28,2.47,29,1.246,31,0.95,32,0.017,33,0.986,34,0.851,35,0.829,39,1.186,40,1.881,45,0.399,46,0.195,52,0.148,53,0.148,54,0.92,56,0.806,59,0.564,60,1.413,61,1.352,62,0.962,63,1.846,64,0.962,65,0.962,66,0.806,67,1.085,68,0.962,69,0.806,70,0.962,71,0.772,72,0.962,73,0.806,74,0.962,75,1.547,76,2.085,77,1.413,78,0.772,79,0.962,80,0.772,81,0.962,82,0.806,83,0.962,84,0.772,85,0.88,86,0.962,87,0.772,88,0.962,89,0.772,90,0.895,91,0.806,92,0.962,93,0.772,94,0.962,95,0.806,96,0.88,97,0.88,98,0.962,99,0.739,100,0.962,101,0.806,102,0.962,103,0.772,104,0.88,105,1.748,106,0.962,107,0.962,108,0.006,109,0.009,110,0.006,208,1.68,210,0.92,248,1.274,254,5.18,265,1.038,287,2.96,295,1.445,297,3.752,298,3.667,299,2.554,342,1.413,382,1.492,438,2.539,443,2.598,444,4.004,446,2.635,447,3.938,453,3.123,455,2.925,457,3.033,461,2.468,462,1.68,463,2.192,464,2.752,467,2.468,483,2.635,484,3.834,485,1.68,490,1.492,491,1.68,493,1.927,494,1.68,523,2.287,524,2.087,530,3.065,620,1.413,672,1.927,673,1.274,709,5.787,710,2.287,711,4.447,712,3.752,713,3.697,714,4.349,715,2.961,716,2.554,717,2.961,718,2.961,719,2.961,720,1.927,721,2.554,722,2.087,723,2.961,724,2.961,725,2.961,726,2.287,727,2.287,728,3.752,729,3.359,730,2.961,731,1.492,732,2.287]],["title/components/HomeComponent.html",[0,0.338,78,0.989]],["body/components/HomeComponent.html",[0,0.538,1,0.802,2,1.346,3,0.147,4,0.132,5,0.957,6,0.957,7,0.957,8,0.957,9,0.132,11,0.957,13,1.346,14,1.914,15,0.915,16,2.337,17,2.048,18,1.346,20,1.346,22,0.398,23,0.905,24,2.11,26,0.643,28,2.548,29,1.204,31,0.643,32,0.017,33,0.892,34,0.649,35,0.561,39,1.073,40,1.528,45,0.374,46,0.194,48,1.097,52,0.147,53,0.147,54,0.915,59,0.561,60,1.408,61,1.346,62,0.957,63,1.841,64,0.957,65,0.957,66,0.802,67,1.081,68,0.957,69,0.802,70,0.957,71,0.768,72,0.957,73,0.802,74,0.957,75,0.802,76,0.915,77,1.408,78,1.477,79,0.957,80,0.768,81,0.957,82,0.802,83,0.957,84,0.768,85,1.795,86,0.957,87,0.768,88,0.957,89,0.768,90,0.511,91,0.802,92,0.957,93,0.768,94,0.957,95,0.802,96,0.876,97,0.876,98,0.957,99,0.735,100,0.957,101,0.802,102,0.957,103,0.768,104,0.876,105,0.768,106,0.957,107,0.957,108,0.006,109,0.009,110,0.006,192,3.826,197,2.183,207,1.001,210,1.761,211,4.376,265,1.034,275,2.541,340,1.001,341,0.915,344,2.183,391,2.565,412,2.541,413,1.785,434,2.067,529,3.688,536,3.621,542,3.993,550,3.053,607,1.671,613,1.333,614,2.067,615,1.917,616,1.917,617,1.671,618,2.076,619,3.114,624,1.785,673,1.267,691,2.458,694,2.076,697,3.053,731,3.043,733,2.541,734,5.209,735,5.138,736,4.332,737,5.138,738,5.666,739,2.945,740,4.332,741,2.945,742,4.332,743,2.945,744,2.945,745,4.332,746,3.993,747,3.993,748,5.138,749,2.945,750,2.274,751,4.332,752,2.274,753,2.945,754,2.945,755,2.945,756,2.945,757,3.345,758,4.332,759,4.332,760,4.332,761,4.332,762,4.332,763,4.332,764,4.332,765,3.737,766,2.945,767,2.945,768,2.945,769,2.945,770,3.93,771,3.737,772,2.274,773,2.541,774,2.076,775,2.076,776,2.076,777,2.541,778,2.541,779,2.945,780,2.274,781,1.917,782,2.541,783,2.945,784,2.945,785,2.541,786,2.076,787,2.541,788,2.945,789,2.945,790,2.945,791,2.274,792,2.274,793,2.945]],["title/interfaces/IProject.html",[558,1.81,606,1.718]],["body/interfaces/IProject.html",[3,0.256,4,0.229,9,0.229,11,2.316,22,0.693,32,0.017,33,1.237,34,1.116,35,1.42,52,0.256,108,0.011,109,0.014,110,0.011,265,1.506,271,4.045,295,1.88,329,5.894,500,2.919,558,3.011,606,2.323,627,3.341,794,4.428,795,7.127,796,5.504]],["title/interfaces/ITask.html",[606,1.718,797,2.154]],["body/interfaces/ITask.html",[3,0.254,4,0.227,9,0.227,11,2.371,22,0.687,32,0.017,34,1.093,35,1.354,52,0.254,108,0.011,109,0.014,110,0.011,265,1.498,295,1.86,305,4.305,479,3.216,500,2.91,537,2.886,606,2.302,627,3.31,796,5.487,797,3.561,798,4.387,799,5.085,800,5.87,801,5.87,802,5.255]],["title/interfaces/IUser.html",[351,2.47,606,1.718]],["body/interfaces/IUser.html",[3,0.258,4,0.232,9,0.232,22,0.7,32,0.017,34,1.118,35,1.21,52,0.258,105,1.864,108,0.011,109,0.014,110,0.011,205,4.157,265,1.515,295,1.882,298,4.333,324,5.039,339,5.522,351,4.13,500,2.929,606,2.345,627,3.372,803,4.469,804,6.169]],["title/components/LoginComponent.html",[0,0.338,80,0.989]],["body/components/LoginComponent.html",[0,0.428,1,0.717,2,1.239,3,0.131,4,0.118,5,0.856,6,0.856,7,0.856,8,0.856,9,0.118,13,1.239,14,1.791,15,0.819,16,2.302,17,2.017,18,1.239,20,1.239,22,0.356,23,0.832,24,1.997,26,0.575,27,1.596,28,2.365,29,1.289,31,0.871,32,0.017,33,0.93,34,0.803,35,0.76,39,1.203,40,1.802,45,0.4,46,0.174,52,0.131,53,0.131,54,0.819,56,1.085,59,0.502,60,1.295,61,1.239,62,0.856,63,1.742,64,0.856,65,0.856,66,0.717,67,1.337,68,0.856,69,0.717,70,0.856,71,0.686,72,0.856,73,0.717,74,0.856,75,0.717,76,1.79,77,1.295,78,0.686,79,0.856,80,1.397,81,0.856,82,0.717,83,0.856,84,0.686,85,0.783,86,0.856,87,0.686,88,0.856,89,0.686,90,0.457,91,0.717,92,0.856,93,0.686,94,0.856,95,0.717,96,0.783,97,0.783,98,0.856,99,0.657,100,0.856,101,0.717,102,0.856,103,0.686,104,0.783,105,1.397,106,0.856,107,0.856,108,0.006,109,0.009,110,0.006,149,2.862,197,2.009,199,2.809,208,1.495,210,0.819,248,1.133,258,3.489,265,0.951,287,2.848,295,1.446,298,3.813,301,1.856,318,2.594,340,1.634,341,1.494,342,1.562,344,2.903,358,1.028,438,2.658,443,2.423,448,2.594,455,2.729,456,3.49,457,2.862,461,2.262,462,3.438,463,2.009,464,1.406,467,2.262,474,3.489,484,1.596,485,2.729,490,1.327,491,1.495,493,2.594,494,2.262,612,1.714,613,1.192,614,1.257,713,3.489,720,1.714,722,1.856,752,2.034,805,2.272,806,4.808,807,3.985,808,4.448,809,4.808,810,3.129,811,4.808,812,5.361,813,3.713,814,3.985,815,2.634,816,2.634,817,3.078,818,3.438,819,2.634,820,3.985,821,2.634,822,3.985,823,2.634,824,2.634,825,2.634,826,2.034,827,2.634,828,3.078,829,3.078,830,2.809,831,1.856,832,2.634,833,2.034,834,2.634,835,2.809,836,2.634,837,2.034,838,2.272,839,1.856,840,2.634,841,3.438,842,3.078,843,3.078,844,3.078]],["title/modules/MaterialModule.html",[111,0.757,242,1.554]],["body/modules/MaterialModule.html",[3,0.228,4,0.205,9,0.205,32,0.017,45,0.518,46,0.302,52,0.228,53,0.228,108,0.01,109,0.013,110,0.01,113,1.362,118,1.489,135,1.997,242,2.406,605,2.982,845,4.581,846,5.875,847,3.538,848,5.875,849,4.581,850,4.581,851,5.875,852,4.581,853,5.875,854,4.581,855,5.875,856,4.581,857,5.875,858,4.581,859,5.875,860,4.581,861,5.875,862,4.581,863,5.875,864,3.952,865,5.875,866,4.581,867,5.875,868,4.581,869,4.581,870,5.875,871,3.952,872,3.952,873,5.875,874,4.581,875,5.875,876,4.581,877,3.538,878,5.875,879,4.581,880,5.875,881,5.875,882,4.581]],["title/components/ModalComponent.html",[0,0.338,82,1.033]],["body/components/ModalComponent.html",[0,0.509,1,0.969,2,1.542,3,0.177,4,0.159,5,1.157,6,1.612,7,1.157,8,1.157,9,0.159,13,1.542,14,2.128,15,1.106,16,2.389,17,2.094,18,1.542,20,1.542,22,0.772,23,1.036,24,2.302,26,1.248,29,1.239,32,0.017,33,0.861,34,0.743,39,1.036,40,1.475,45,0.235,46,0.235,52,0.177,53,0.177,59,0.678,60,1.612,61,1.542,62,1.157,63,2.008,64,1.157,65,1.157,66,0.969,67,1.238,68,1.157,69,0.969,70,1.157,71,0.928,72,1.157,73,0.969,74,1.157,75,0.969,76,1.106,77,1.612,78,0.928,79,1.157,80,0.928,81,1.157,82,1.683,83,1.157,84,0.928,85,1.058,86,1.157,87,0.928,88,1.157,89,0.928,90,0.618,91,0.969,92,1.157,93,0.928,94,1.157,95,0.969,96,1.058,97,1.475,98,1.157,99,0.888,100,1.157,101,0.969,102,1.157,103,0.928,104,1.058,105,0.928,106,1.157,107,1.157,108,0.008,109,0.011,110,0.008,295,1.184,342,1.157,384,2.509,391,2.941,444,4.355,446,3.007,447,3.718,453,3.461,467,3.242,479,2.941,483,3.007,524,2.509,529,2.317,617,2.02,619,2.157,673,2.135,691,2.816,697,2.509,699,2.317,731,2.501,765,3.071,773,4.281,781,3.229,782,3.071,883,3.071,884,5.712,885,4.962,886,4.281,887,4.962,888,3.559,889,3.559,890,3.559,891,4.281,892,3.559,893,3.559,894,3.559,895,4.281,896,3.559,897,4.355,898,2.749,899,3.071,900,2.749,901,3.559,902,3.559,903,3.559,904,3.559]],["title/modules/ModalModule.html",[111,0.757,243,2.154]],["body/modules/ModalModule.html",[3,0.252,4,0.226,9,0.226,32,0.017,45,0.468,46,0.334,52,0.252,53,0.252,59,0.965,82,2.121,90,0.879,108,0.011,109,0.014,110,0.011,111,1.01,113,1.505,114,1.976,115,2.922,116,2.178,117,2.178,118,2.206,128,2.692,129,1.801,131,2.33,135,2.126,242,3.041,243,4.349,245,3.153,246,2.415,636,3.068,905,4.367,906,4.367,907,5.062,908,4.367,909,5.062,910,5.062]],["title/modules/NavigationModule.html",[111,0.757,427,2.47]],["body/modules/NavigationModule.html",[3,0.231,4,0.207,9,0.207,32,0.017,45,0.487,46,0.306,52,0.231,53,0.231,59,0.884,90,0.805,91,2.096,101,1.978,108,0.01,109,0.013,110,0.01,111,0.926,113,1.379,114,1.811,115,2.807,116,1.996,117,1.996,118,2.12,124,4.121,128,2.548,129,1.65,131,2.206,135,2.013,141,2.633,162,4.002,242,2.974,245,2.985,246,2.213,427,5.071,636,2.811,702,4.726,911,4.002,912,4.002,913,4.638,914,4.002,915,4.638,916,4.638,917,4.638,918,4.638]],["title/components/PageNotFoundComponent.html",[0,0.338,84,0.989]],["body/components/PageNotFoundComponent.html",[0,0.588,1,1.01,2,1.586,3,0.185,4,0.166,5,1.205,6,1.205,7,1.205,8,1.205,9,0.166,11,1.205,15,1.152,16,2.4,17,2.103,18,1.586,20,1.586,26,1.275,29,0.707,32,0.017,33,0.886,45,0.245,46,0.245,52,0.185,53,0.185,59,0.707,60,1.659,61,1.586,62,1.205,63,2.043,64,1.205,65,1.205,66,1.01,67,1.273,68,1.205,69,1.01,70,1.205,71,0.967,72,1.205,73,1.01,74,1.205,75,1.01,76,1.152,77,1.659,78,0.967,79,1.205,80,0.967,81,1.205,82,1.01,83,1.205,84,1.639,85,2.228,86,1.205,87,0.967,88,1.205,89,0.967,90,0.644,91,1.01,92,1.205,93,0.967,94,1.205,95,1.01,96,1.103,97,1.103,98,1.205,99,0.925,100,1.205,101,1.01,102,1.205,103,0.967,104,1.103,105,0.967,106,1.205,107,1.205,108,0.008,109,0.011,110,0.008,170,3.598,184,4.114,391,1.679,620,1.769,650,4.432,673,1.595,691,2.897,692,3.199,731,1.869,734,4.404,770,3.322,772,3.942,774,2.613,775,2.613,776,2.613,777,3.199,778,4.404,780,2.864,781,2.413,791,2.864,792,2.864,897,4.432,898,2.864,899,3.199,919,4.404,920,3.199,921,6.288,922,5.837,923,5.104,924,3.708,925,5.104,926,5.104,927,5.104,928,5.104,929,5.104,930,5.104,931,4.404,932,4.404,933,2.613,934,3.708,935,3.708,936,3.708,937,3.708]],["title/modules/PipesModule.html",[111,0.757,938,2.299]],["body/modules/PipesModule.html",[3,0.264,4,0.237,9,0.237,32,0.017,45,0.425,46,0.35,52,0.264,53,0.264,59,1.011,90,0.921,108,0.012,109,0.014,110,0.012,111,1.059,113,1.577,114,2.071,115,2.983,116,2.282,117,2.282,118,2.252,128,2.77,129,1.887,135,2.188,938,4.604,939,4.576,940,4.576,941,4.576,942,5.098,943,5.304,944,4.576,945,3.738,946,5.304]],["title/injectables/ProjectHttpService.html",[206,1.233,450,2.299]],["body/injectables/ProjectHttpService.html",[3,0.16,4,0.144,9,0.144,11,1.755,12,1.533,22,0.434,23,0.964,26,0.702,29,1.278,31,1.366,32,0.017,33,1.085,34,1.005,35,1.192,39,1.433,45,0.413,46,0.212,52,0.16,53,0.16,54,0.999,56,1.703,67,1.151,108,0.007,109,0.01,110,0.007,140,1.824,177,3.152,204,3.397,206,1.5,207,1.092,209,1.716,210,1.679,263,1.716,265,1.102,270,3.807,271,3.065,285,2.265,286,4.161,289,3.253,295,1.668,340,1.092,341,0.999,348,3.253,350,3.515,355,1.947,356,2.482,365,4.069,366,4.407,434,3.66,438,2.64,450,2.797,469,2.797,500,3.02,516,3.982,558,2.817,565,1.824,947,4.835,948,2.265,949,3.982,950,4.616,951,5.903,952,4.616,953,4.616,954,4.616,955,3.214,956,3.982,957,3.214,958,3.004,959,4.616,960,2.773,961,3.214,962,4.616,963,4.829,964,3.214,965,2.773,966,2.773,967,3.214,968,3.214,969,3.577,970,3.214,971,2.773,972,3.214]],["title/injectables/ProjectStateService.html",[206,1.233,451,2.47]],["body/injectables/ProjectStateService.html",[3,0.16,4,0.143,9,0.143,11,2.028,12,1.527,22,0.432,23,0.961,26,0.699,29,1.33,31,1.287,32,0.017,33,1.128,34,0.883,35,1.123,39,1.357,40,1.368,45,0.412,46,0.211,52,0.16,53,0.16,54,0.994,56,1.253,108,0.007,109,0.01,110,0.007,177,2.457,204,3.159,206,1.495,207,1.088,209,1.708,210,2.02,263,1.708,265,1.098,271,1.816,295,1.552,340,2.002,341,1.831,342,1.914,353,2.255,358,1.249,382,3.146,434,3.515,438,2.68,449,2.471,450,3.938,451,2.995,469,2.788,486,1.939,500,3.086,509,2.471,510,2.471,558,3.101,565,1.816,947,4.992,969,3.57,973,2.471,974,5.388,975,6.499,976,5.388,977,4.601,978,5.892,979,4.601,980,4.601,981,3.97,982,4.601,983,3.2,984,5.892,985,2.761,986,4.601,987,3.2,988,4.601,989,3.2,990,4.601,991,5.083,992,3.2,993,2.761,994,4.601,995,4.601,996,2.761,997,1.816,998,3.2,999,2.761,1000,3.2,1001,3.2,1002,3.2,1003,3.2,1004,2.761,1005,3.2,1006,3.2,1007,3.2,1008,3.2,1009,3.2]],["title/components/ProjectsComponent.html",[0,0.338,87,0.989]],["body/components/ProjectsComponent.html",[0,0.365,1,0.559,2,1.02,3,0.234,4,0.092,5,0.667,6,0.667,7,0.667,8,0.667,9,0.092,11,1.332,13,1.02,14,1.527,15,0.638,16,2.214,17,1.94,18,1.02,20,1.02,22,0.277,23,0.685,24,1.745,26,0.717,29,1.286,31,1.119,32,0.017,33,1.155,34,0.921,35,0.976,39,1.198,40,2.006,45,0.405,46,0.135,48,0.764,52,0.102,53,0.102,59,0.391,60,1.066,61,1.02,62,0.667,63,1.522,64,0.667,65,0.667,66,0.559,67,0.818,68,0.667,69,0.559,70,0.667,71,0.855,72,0.667,73,0.559,74,0.667,75,0.559,76,0.638,77,1.066,78,0.535,79,0.667,80,0.535,81,0.667,82,0.559,83,0.667,84,0.535,85,1.219,86,0.667,87,1.221,88,0.667,89,0.535,90,0.356,91,0.559,92,0.667,93,0.535,94,0.667,95,0.559,96,0.61,97,1.393,98,0.667,99,0.512,100,0.667,101,0.559,102,0.667,103,0.535,104,0.61,105,0.535,106,0.667,107,0.667,108,0.007,109,0.007,110,0.004,149,1.752,172,0.929,174,1.164,177,3.365,192,3.476,204,1.856,205,1.988,207,0.697,210,1.783,226,1.584,265,0.783,271,1.862,295,1.662,340,1.393,341,1.274,342,1.066,344,2.361,358,0.801,391,1.485,413,1.988,434,3.35,437,2.89,438,2.59,447,2.135,449,1.584,450,3.311,451,3.734,467,2.659,470,2.89,479,0.929,486,1.243,487,1.446,488,1.335,500,2.726,509,2.534,510,2.534,521,3.049,536,2.89,542,3.302,550,2.312,551,2.534,558,1.956,565,1.164,589,1.584,590,1.584,594,2.89,605,1.335,607,2.327,612,1.335,613,1.485,614,1.956,617,2.659,618,2.312,619,2.484,620,1.956,624,2.839,673,0.883,694,1.446,695,1.584,699,2.135,731,1.654,732,1.584,770,1.335,771,1.77,772,2.534,786,1.446,810,2.669,831,1.446,835,2.312,933,1.446,949,2.83,956,2.83,958,4.102,969,2.839,1010,1.77,1011,4.1,1012,3.281,1013,4.1,1014,3.537,1015,4.685,1016,2.534,1017,2.83,1018,3.281,1019,4.042,1020,3.281,1021,2.051,1022,2.051,1023,2.83,1024,2.051,1025,2.051,1026,3.281,1027,2.051,1028,2.83,1029,2.312,1030,2.83,1031,2.051,1032,3.281,1033,3.281,1034,3.281,1035,2.051,1036,2.83,1037,3.281,1038,3.281,1039,2.051,1040,2.051,1041,2.051,1042,2.051,1043,2.051,1044,2.534,1045,2.051,1046,2.051,1047,2.051,1048,2.051,1049,2.051,1050,2.83,1051,2.051,1052,2.83,1053,1.77,1054,2.051,1055,1.77,1056,1.77,1057,1.77,1058,1.77,1059,1.77,1060,2.051,1061,2.051,1062,2.051,1063,2.051,1064,2.83,1065,2.83,1066,3.281,1067,3.281,1068,2.534,1069,2.051,1070,1.77,1071,2.534,1072,2.83,1073,1.77,1074,1.584,1075,1.77,1076,1.77,1077,2.051]],["title/modules/ProjectsModule.html",[111,0.757,1078,2.674]],["body/modules/ProjectsModule.html",[3,0.222,4,0.199,9,0.199,32,0.017,45,0.498,46,0.294,52,0.222,53,0.222,59,0.849,66,1.956,67,1.111,87,1.872,90,0.773,108,0.01,109,0.013,110,0.01,111,0.889,113,1.324,114,1.738,115,2.753,116,1.916,117,1.916,118,1.447,128,2.482,129,1.584,131,2.149,135,1.96,141,2.527,177,2.377,242,2.942,243,4.077,245,2.907,246,2.124,247,4.065,248,1.916,249,3.439,251,3.841,432,3.439,628,4.353,938,3.495,1078,5.483,1079,3.841,1080,3.841,1081,3.841,1082,4.675,1083,4.452,1084,5.768,1085,4.452,1086,3.841,1087,4.452,1088,4.452]],["title/modules/ProjectsRoutingModule.html",[111,0.757,1082,2.47]],["body/modules/ProjectsRoutingModule.html",[0,0.473,3,0.264,4,0.237,9,0.237,32,0.017,45,0.476,46,0.35,48,1.976,52,0.264,53,0.264,87,1.678,99,1.323,108,0.012,109,0.014,110,0.012,113,1.577,118,1.724,131,1.976,135,2.188,163,3.452,164,3.701,165,4.19,172,2.401,173,4.19,178,4.097,262,3.738,1082,4.19,1086,4.576,1089,5.304,1090,5.304,1091,4.097,1092,5.304,1093,5.304]],["title/components/ResetPasswordComponent.html",[0,0.338,89,0.989]],["body/components/ResetPasswordComponent.html",[0,0.424,1,0.705,2,1.222,3,0.129,4,0.116,5,0.841,6,0.841,7,0.841,8,0.841,9,0.116,13,1.222,14,1.772,15,0.804,16,2.296,17,2.012,18,1.222,20,1.222,22,0.35,23,0.821,24,1.979,26,0.859,28,2.442,29,1.228,31,0.859,32,0.017,33,0.922,34,0.796,35,0.75,39,1.11,40,1.169,45,0.425,46,0.171,48,0.964,52,0.129,53,0.129,56,1.071,59,0.493,60,1.278,61,1.222,62,0.841,63,1.726,64,0.841,65,0.841,66,0.705,67,0.981,68,0.841,69,0.705,70,0.841,71,0.674,72,0.841,73,0.705,74,0.841,75,0.705,76,0.804,77,1.278,78,0.674,79,0.841,80,0.674,81,0.841,82,0.705,83,0.841,84,0.674,85,0.769,86,0.841,87,0.674,88,0.841,89,1.385,90,1.168,91,0.705,92,0.841,93,0.674,94,0.841,95,0.705,96,0.769,97,0.769,98,0.841,99,0.646,100,0.841,101,0.705,102,0.841,103,0.674,104,0.769,105,0.674,106,0.841,107,0.841,108,0.006,109,0.009,110,0.006,149,2.837,190,3.352,192,3.79,199,2.772,208,1.469,210,1.776,248,1.113,265,0.939,287,2.831,295,1.436,298,4,301,1.824,324,2.772,340,1.337,341,1.222,358,1.01,369,1.382,382,1.304,391,1.78,438,1.692,443,2.397,448,2.559,455,2.699,456,2.383,457,2.837,461,2.232,462,2.232,463,1.982,464,2.539,474,3.096,484,3.22,485,1.469,490,1.304,491,1.469,494,2.232,519,1.824,611,2.772,645,4.652,672,1.684,673,1.113,710,1.998,711,4.103,712,3.393,713,3.458,716,3.393,720,1.684,729,3.037,808,4.413,813,3.673,826,1.998,828,3.037,829,3.037,830,2.772,833,1.998,837,1.998,842,4.103,843,4.103,844,3.037,997,1.469,1044,1.998,1094,5.694,1095,4.93,1096,4.756,1097,2.232,1098,4.584,1099,4.103,1100,3.393,1101,2.587,1102,2.587,1103,2.587,1104,2.587,1105,2.587,1106,2.587,1107,1.824,1108,2.587,1109,2.232,1110,2.587,1111,2.232,1112,2.232,1113,1.998,1114,2.232,1115,2.587,1116,2.232,1117,2.232,1118,2.232,1119,2.587,1120,2.587,1121,2.232,1122,2.587,1123,2.232,1124,3.393,1125,3.393,1126,3.393]],["title/components/SidenavComponent.html",[0,0.338,91,1.033]],["body/components/SidenavComponent.html",[0,0.467,1,0.831,2,1.381,3,0.152,4,0.136,5,0.991,6,0.991,7,0.991,8,0.991,9,0.136,13,1.381,14,1.953,15,0.948,16,2.347,17,2.057,18,1.381,20,1.381,22,0.412,23,0.928,24,2.146,26,0.666,28,2.577,29,1.289,31,0.666,32,0.017,33,0.91,34,0.863,35,0.581,39,1.095,40,1.559,45,0.422,46,0.201,52,0.152,53,0.152,54,0.948,59,0.581,60,1.444,61,1.381,62,0.991,63,1.872,64,0.991,65,0.991,66,0.831,67,1.109,68,0.991,69,0.831,70,0.991,71,0.795,72,0.991,73,0.831,74,0.991,75,0.831,76,0.948,77,1.444,78,0.795,79,0.991,80,0.795,81,0.991,82,0.831,83,0.991,84,0.795,85,0.907,86,0.991,87,0.795,88,0.991,89,0.795,90,0.529,91,1.569,92,0.991,93,0.795,94,0.991,95,0.831,96,0.907,97,0.907,98,0.991,99,0.761,100,0.991,101,0.831,102,0.991,103,0.795,104,0.907,105,0.795,106,0.991,107,0.991,108,0.007,109,0.01,110,0.007,129,2.049,177,2.373,196,3.133,197,2.904,204,2.773,207,1.037,210,0.948,265,1.061,318,4.161,340,1.037,341,0.948,344,2.24,358,1.191,365,2.893,391,1.381,529,1.985,600,2.631,607,2.522,613,1.381,614,2.502,615,1.985,616,1.985,620,1.455,731,1.537,746,3.133,747,3.133,750,2.356,770,1.985,847,2.356,864,2.631,877,3.433,933,2.15,997,1.731,1073,2.631,1127,2.631,1128,6.124,1129,5.244,1130,4.445,1131,5.244,1132,5.244,1133,4.524,1134,4.971,1135,4.971,1136,4.971,1137,2.631,1138,5.515,1139,4.445,1140,3.05,1141,4.524,1142,4.445,1143,3.05,1144,3.05,1145,3.834,1146,5.244,1147,4.445,1148,3.05,1149,3.05,1150,3.05,1151,3.05,1152,3.834,1153,2.631,1154,2.631,1155,2.631,1156,2.631,1157,2.631,1158,2.631,1159,4.445,1160,2.631,1161,3.05,1162,3.834,1163,3.133]],["title/components/SignupComponent.html",[0,0.338,93,0.989]],["body/components/SignupComponent.html",[0,0.405,1,0.655,2,1.156,3,0.12,4,0.107,5,0.782,6,0.782,7,0.782,8,0.782,9,0.107,13,1.156,14,1.693,15,0.748,16,2.272,17,1.991,18,1.156,20,1.156,22,0.325,23,0.776,24,1.905,26,0.812,28,2.379,29,1.232,31,0.812,32,0.017,33,1.014,34,0.766,35,0.709,39,1.068,40,1.521,45,0.415,46,0.159,48,0.896,52,0.12,53,0.12,56,1.013,59,0.458,60,1.208,61,1.156,62,0.782,63,1.662,64,0.782,65,0.782,66,0.655,67,1.276,68,0.782,69,0.655,70,0.782,71,0.627,72,0.782,73,0.655,74,0.782,75,0.655,76,0.748,77,1.208,78,0.627,79,0.782,80,0.627,81,0.782,82,0.655,83,0.782,84,0.627,85,0.715,86,0.782,87,0.627,88,0.782,89,0.627,90,0.417,91,0.655,92,0.782,93,1.333,94,0.782,95,0.655,96,0.715,97,0.715,98,0.782,99,0.6,100,0.782,101,0.655,102,0.782,103,0.627,104,0.715,105,1.524,106,0.782,107,0.782,108,0.005,109,0.008,110,0.005,149,2.952,192,3.693,197,1.874,199,2.62,201,1.858,208,1.365,210,1.589,248,1.035,257,4.27,258,1.565,265,0.888,287,2.759,295,1.395,298,3.351,301,1.695,324,2.62,333,2.754,339,1.858,340,1.545,341,1.413,344,2.291,358,0.939,382,1.212,391,1.683,413,1.457,438,2.585,443,2.291,448,2.42,455,2.58,456,3.351,457,2.73,458,3.604,461,2.11,462,3.318,463,1.874,464,1.284,474,2.958,485,1.365,490,1.212,491,1.365,494,2.902,611,3.203,612,1.565,613,1.089,614,1.148,664,1.858,672,1.565,673,1.035,713,3.329,720,1.565,722,1.695,726,1.858,727,1.858,746,3.604,747,3.604,752,1.858,808,4.27,810,2.958,813,3.51,817,2.872,818,3.208,826,1.858,828,2.872,829,2.872,830,2.62,831,1.695,833,1.858,835,2.62,837,1.858,838,2.075,839,1.695,841,3.208,842,3.95,843,3.95,844,2.872,945,2.62,1029,1.695,1095,4.77,1097,2.075,1098,4.412,1100,3.208,1107,1.695,1109,2.075,1111,2.075,1112,2.075,1113,1.858,1114,2.075,1121,2.075,1123,2.075,1124,3.208,1125,4.412,1126,3.208,1164,2.075,1165,4.545,1166,3.718,1167,4.545,1168,3.718,1169,2.405,1170,2.405,1171,2.405,1172,2.405,1173,2.405,1174,2.405,1175,2.405,1176,2.405,1177,2.405,1178,2.405,1179,2.405,1180,2.405,1181,2.405,1182,2.075,1183,3.718]],["title/injectables/TaskHttpService.html",[206,1.233,544,2.299]],["body/injectables/TaskHttpService.html",[3,0.141,4,0.126,9,0.126,11,1.803,12,1.346,22,0.381,23,0.876,26,0.616,29,1.227,31,1.358,32,0.017,33,1.079,34,0.991,35,1.185,39,1.437,45,0.425,46,0.186,52,0.141,53,0.141,54,0.877,56,1.615,67,1.384,108,0.006,109,0.009,110,0.006,140,1.601,177,2.241,204,3.399,206,1.364,207,0.959,209,1.506,210,1.725,263,1.506,265,1.002,270,3.531,271,2.844,285,1.988,286,3.911,287,2.915,289,2.958,295,1.826,340,0.959,341,0.877,342,1.927,348,2.958,350,3.261,354,2.434,355,1.71,356,2.179,365,3.861,366,4.18,410,2.434,438,2.585,442,4.787,469,2.543,500,3.033,537,4.386,544,2.543,558,1.346,565,1.601,654,4.286,687,3.87,797,3.149,948,1.988,958,2.731,960,2.434,963,4.581,969,3.767,1091,4.581,1184,4.662,1185,4.196,1186,3.62,1187,4.196,1188,4.196,1189,4.196,1190,4.196,1191,4.196,1192,2.821,1193,4.196,1194,2.821,1195,4.196,1196,2.821,1197,4.196,1198,4.196,1199,4.196,1200,2.821,1201,2.821,1202,1.988,1203,2.434,1204,2.434,1205,2.821,1206,2.821,1207,2.821,1208,2.821,1209,2.821,1210,2.821,1211,2.821]],["title/injectables/TaskStateService.html",[206,1.233,545,2.299]],["body/injectables/TaskStateService.html",[3,0.155,4,0.139,9,0.139,11,2.003,12,1.48,22,0.419,23,0.939,26,0.677,29,1.341,31,1.347,32,0.017,33,1.07,34,0.963,35,1.175,39,1.288,40,1.727,45,0.424,46,0.205,52,0.155,53,0.155,54,0.964,56,1.442,96,1.338,108,0.007,109,0.01,110,0.007,204,3.003,206,1.462,207,1.054,209,1.656,210,1.998,263,1.656,265,1.074,295,1.72,305,2.726,340,1.974,341,1.805,342,1.887,353,2.186,357,2.395,358,1.211,434,2.526,438,2.701,469,2.726,479,2.036,486,1.879,500,3.002,537,4.126,543,2.395,544,3.897,545,2.726,558,2.526,565,1.76,570,2.395,577,2.395,578,2.395,687,3.474,796,2.395,797,3.296,969,3.208,973,2.395,981,2.676,985,2.676,991,5.01,993,2.676,996,2.676,997,3.004,999,2.676,1004,2.676,1091,3.474,1184,5.022,1202,2.186,1212,5.294,1213,6.43,1214,5.294,1215,4.499,1216,4.499,1217,4.499,1218,4.499,1219,4.499,1220,4.499,1221,3.101,1222,4.499,1223,4.499,1224,3.101,1225,4.499,1226,3.101,1227,3.171,1228,4.499,1229,3.101,1230,4.499,1231,3.101,1232,3.101,1233,3.101,1234,3.101,1235,3.101,1236,3.101,1237,3.101,1238,3.101,1239,3.101,1240,3.101,1241,3.101,1242,2.676,1243,3.101,1244,3.101,1245,3.101]],["title/components/TasksCardListComponent.html",[0,0.338,95,1.033]],["body/components/TasksCardListComponent.html",[0,0.42,1,0.695,2,1.209,3,0.127,4,0.114,5,0.829,6,0.829,7,0.829,8,0.829,9,0.114,15,0.793,16,2.292,17,2.008,18,1.209,20,1.209,22,0.345,23,0.813,26,0.557,29,1.348,31,1.241,32,0.017,33,1.08,34,1.06,35,1.083,39,1.102,40,1.908,45,0.311,46,0.168,52,0.127,53,0.127,54,0.793,59,0.486,60,1.264,61,1.209,62,0.829,63,1.714,64,0.829,65,0.829,66,0.695,67,0.971,68,0.829,69,0.695,70,0.829,71,0.665,72,0.829,73,0.695,74,0.829,75,0.695,76,0.793,77,1.264,78,0.665,79,0.829,80,0.665,81,0.829,82,0.695,83,0.829,84,0.665,85,0.759,86,0.829,87,0.665,88,0.829,89,0.665,90,0.443,91,0.695,92,0.829,93,0.665,94,0.829,95,1.437,96,2.028,97,2.301,98,0.829,99,0.637,100,0.829,101,0.695,102,0.829,103,0.665,104,0.759,105,0.665,106,0.829,107,0.829,108,0.006,109,0.008,110,0.006,205,2.358,295,1.741,342,1.714,384,1.798,438,2.46,446,2.358,453,3.984,479,2.571,483,3.442,488,1.661,500,2.161,521,3.696,537,1.448,545,3.627,577,3.005,578,3.005,620,1.857,623,1.971,624,2.358,673,1.098,731,1.286,774,1.798,775,1.798,776,1.798,797,2.676,802,3.005,810,3.069,886,3.357,891,5.163,958,3.696,1016,3.005,1017,3.357,1030,3.357,1068,4.074,1071,1.971,1074,1.971,1202,1.798,1227,2.742,1246,5.512,1247,5.512,1248,2.202,1249,4.716,1250,3.891,1251,3.357,1252,3.357,1253,4.716,1254,4.716,1255,4.069,1256,4.069,1257,2.552,1258,3.891,1259,2.552,1260,2.552,1261,2.552,1262,2.552,1263,2.552,1264,2.552,1265,2.552,1266,2.552,1267,3.357,1268,2.552,1269,3.357,1270,2.552,1271,2.552,1272,3.357,1273,2.552,1274,2.552,1275,2.552,1276,2.552,1277,2.552,1278,2.552,1279,3.891,1280,3.891,1281,2.552,1282,2.552,1283,2.552,1284,2.202]],["title/components/TasksComponent.html",[0,0.338,99,0.947]],["body/components/TasksComponent.html",[0,0.417,1,0.469,2,0.885,3,0.086,4,0.077,5,0.56,6,0.56,7,0.56,8,0.56,9,0.077,11,1.637,13,0.885,14,1.355,15,0.536,16,2.143,17,1.892,18,0.885,20,0.885,22,0.233,23,0.595,24,1.574,26,0.622,29,1.303,31,1.1,32,0.017,33,1.003,34,0.915,35,0.96,39,1.164,40,1.972,45,0.403,46,0.114,48,0.642,52,0.086,53,0.086,56,0.469,59,0.328,60,0.925,61,0.885,62,0.56,63,1.373,64,0.56,65,0.56,66,0.469,67,0.71,68,0.56,69,0.469,70,0.56,71,0.742,72,0.56,73,0.469,74,0.56,75,0.469,76,0.536,77,0.925,78,0.449,79,0.56,80,0.449,81,0.56,82,0.469,83,0.56,84,0.449,85,0.512,86,0.56,87,0.449,88,0.56,89,0.449,90,0.299,91,0.469,92,0.56,93,0.449,94,0.56,95,0.469,96,1.816,97,0.847,98,0.56,99,1.054,100,0.56,101,0.469,102,0.56,103,0.449,104,0.512,105,0.449,106,0.56,107,0.56,108,0.006,109,0.006,110,0.004,149,1.942,172,0.78,174,0.978,190,2.564,204,2.616,207,0.586,210,2.125,226,1.331,265,0.68,295,1.564,305,3.78,340,1.59,341,1.454,342,0.925,344,3.077,357,2.199,358,0.673,369,0.92,384,1.214,391,1.647,413,1.044,434,2.404,437,2.564,438,2.615,467,1.616,470,2.564,479,0.78,486,1.044,487,1.214,488,1.122,489,1.331,500,2.883,519,1.214,536,2.564,537,3.881,542,2.978,543,1.331,544,3.053,545,3.23,550,2.007,551,2.199,558,1.736,565,0.978,570,1.331,571,1.487,573,1.487,582,1.487,586,1.487,589,1.331,590,1.331,594,2.564,605,1.122,607,2.065,613,1.647,614,2.232,615,1.122,616,1.122,617,2.065,618,2.007,619,2.205,620,1.358,623,1.331,624,2.835,694,2.007,699,1.122,701,1.487,731,1.834,732,1.331,770,1.122,774,1.214,775,1.214,776,1.214,781,1.122,786,2.007,787,1.487,797,0.978,810,2.368,831,2.007,835,2.007,839,1.214,900,1.331,932,1.487,933,2.007,958,3.279,969,2.835,997,0.978,1014,3.139,1016,2.199,1019,3.645,1023,2.456,1028,2.456,1029,2.007,1044,2.199,1050,2.456,1052,2.456,1053,1.487,1055,1.487,1056,1.487,1057,1.487,1058,1.487,1059,1.487,1064,2.456,1065,2.456,1071,2.199,1072,2.456,1074,1.331,1075,2.456,1076,1.487,1099,3.263,1163,2.007,1186,2.456,1202,1.214,1227,2.564,1242,3.139,1251,2.456,1252,2.456,1255,4.036,1256,4.036,1267,2.456,1269,2.456,1272,2.456,1284,1.487,1285,1.487,1286,3.638,1287,2.847,1288,3.638,1289,3.638,1290,3.638,1291,2.847,1292,4.225,1293,2.847,1294,2.847,1295,1.723,1296,1.723,1297,1.723,1298,1.723,1299,3.551,1300,2.847,1301,1.723,1302,1.723,1303,1.723,1304,1.723,1305,2.847,1306,1.723,1307,1.723,1308,1.723,1309,1.723,1310,1.723,1311,1.723,1312,1.723,1313,1.723,1314,1.723,1315,2.847,1316,1.723,1317,1.723,1318,1.723,1319,1.723,1320,1.723,1321,1.723,1322,1.723,1323,1.723,1324,1.723,1325,3.638,1326,3.638,1327,2.847,1328,1.723,1329,3.638,1330,1.723,1331,2.847,1332,3.638,1333,3.638,1334,2.847,1335,1.723,1336,1.723,1337,1.723,1338,1.723,1339,1.723,1340,1.723,1341,1.723,1342,1.723,1343,2.847,1344,1.723,1345,1.723,1346,1.723,1347,1.487,1348,1.487,1349,1.723,1350,1.723]],["title/modules/TasksModule.html",[111,0.757,1351,2.674]],["body/modules/TasksModule.html",[3,0.215,4,0.193,9,0.193,32,0.017,45,0.5,46,0.285,52,0.215,53,0.215,59,0.824,67,1.078,69,1.941,90,0.75,95,1.941,96,1.682,97,1.682,99,1.778,108,0.009,109,0.012,110,0.009,111,0.863,113,1.285,114,1.687,115,2.714,116,1.86,117,1.86,118,1.404,128,2.434,129,1.537,131,2.107,135,1.923,141,2.453,242,2.919,243,4.044,245,2.852,246,2.062,247,3.988,248,1.86,532,3.338,628,4.318,636,2.619,938,3.429,1247,3.338,1351,5.498,1352,3.729,1353,3.729,1354,3.729,1355,4.638,1356,4.322,1357,3.729,1358,4.322,1359,4.322,1360,4.322,1361,4.322,1362,4.322]],["title/modules/TasksRoutingModule.html",[111,0.757,1355,2.47]],["body/modules/TasksRoutingModule.html",[0,0.493,3,0.276,4,0.247,9,0.247,32,0.017,45,0.466,46,0.365,48,2.059,52,0.276,53,0.276,99,1.647,108,0.012,109,0.014,110,0.012,113,1.644,118,1.797,131,2.059,135,2.243,163,3.599,164,3.768,165,4.296,172,2.503,173,3.599,262,3.897,1246,4.27,1355,4.296,1357,4.77]],["title/components/TopnavComponent.html",[0,0.338,101,1.033]],["body/components/TopnavComponent.html",[0,0.456,1,0.797,2,1.34,3,0.146,4,0.131,5,0.951,6,0.951,7,0.951,8,0.951,9,0.131,13,1.34,14,1.907,15,0.909,16,2.335,17,2.054,18,1.34,20,1.34,22,0.582,23,0.9,24,2.104,26,0.639,28,2.543,29,1.301,31,0.639,32,0.017,33,0.888,34,0.902,35,0.558,38,2.806,39,1.179,40,1.679,45,0.397,46,0.193,52,0.146,53,0.146,54,0.909,59,0.558,60,1.401,61,1.34,62,0.951,63,1.835,64,0.951,65,0.951,66,0.797,67,1.075,68,0.951,69,0.797,70,0.951,71,0.763,72,0.951,73,0.797,74,0.951,75,0.797,76,0.909,77,1.401,78,0.763,79,0.951,80,0.763,81,0.951,82,0.797,83,0.951,84,0.763,85,0.87,86,0.951,87,0.763,88,0.951,89,0.763,90,0.508,91,0.797,92,0.951,93,0.763,94,0.951,95,0.797,96,0.87,97,0.87,98,0.951,99,0.73,100,0.951,101,1.538,102,0.951,103,0.763,104,0.87,105,0.763,106,0.951,107,0.951,108,0.006,109,0.009,110,0.006,129,2.009,177,2.302,197,2.173,204,2.726,207,0.994,210,0.909,265,1.029,305,2.612,318,4.1,342,1.401,358,1.142,391,1.951,446,2.612,453,3.649,479,1.324,483,3.102,613,1.324,614,2.057,617,1.66,620,2.442,673,1.259,691,1.66,697,2.062,746,3.038,747,3.038,750,2.259,757,3.329,785,2.524,791,3.329,792,2.259,847,2.259,877,3.329,895,2.524,997,1.66,1133,4.416,1134,4.873,1135,4.873,1136,4.873,1137,2.524,1138,5.435,1141,2.524,1145,3.719,1152,3.719,1153,2.524,1154,2.524,1155,2.524,1156,2.524,1157,2.524,1158,2.524,1160,2.524,1162,3.719,1163,3.038,1227,3.038,1299,3.038,1348,2.524,1363,2.524,1364,4.311,1365,5.119,1366,4.311,1367,5.648,1368,5.119,1369,5.119,1370,4.311,1371,2.925,1372,2.925,1373,2.925,1374,2.925,1375,4.311,1376,5.119,1377,2.925,1378,2.925,1379,2.925,1380,2.925,1381,2.925,1382,2.925,1383,2.925,1384,2.925,1385,2.925,1386,2.925,1387,2.925,1388,2.925,1389,2.925,1390,2.925,1391,2.925,1392,2.925,1393,2.925]],["title/injectables/UIService.html",[206,1.233,287,1.718]],["body/injectables/UIService.html",[3,0.224,4,0.201,9,0.201,11,1.461,12,2.146,22,0.608,23,1.212,26,0.982,29,1.226,31,1.268,32,0.017,33,1.008,34,0.87,35,1.107,39,0.939,40,1.337,45,0.424,46,0.297,52,0.224,53,0.224,54,1.398,108,0.01,109,0.013,110,0.01,197,3.424,206,1.887,207,1.529,209,2.401,263,2.401,265,1.386,287,2.628,295,1.535,333,3.896,336,5.861,340,1.529,341,1.398,342,1.887,353,3.17,606,2.628,613,2.628,650,4.092,691,3.856,871,3.88,872,5.547,1070,5.861,1299,4.092,1394,3.88,1395,5.806,1396,6.429,1397,5.806,1398,4.497,1399,6.794,1400,5.806,1401,5.806,1402,5.806,1403,6.794,1404,4.497,1405,5.806,1406,5.806,1407,4.497,1408,5.806,1409,4.497,1410,4.497]],["title/pipes/UppercaseFirstLetterPipe.html",[369,2.026,942,2.47]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.261,4,0.234,9,0.234,11,1.699,13,1.625,15,1.625,23,1.092,29,0.997,31,1.142,32,0.017,33,1.195,34,0.783,35,0.997,39,1.092,45,0.345,46,0.345,52,0.261,53,0.261,56,1.738,108,0.011,109,0.014,110,0.011,341,1.984,369,3.408,898,5.32,942,4.154,944,5.506,945,5.056,1068,4.929,1411,5.229,1412,5.506,1413,4.511,1414,6.382,1415,6.382,1416,5.229,1417,6.382,1418,5.229,1419,5.229]],["title/injectables/UserService.html",[206,1.233,1420,2.674]],["body/injectables/UserService.html",[3,0.233,4,0.209,9,0.209,12,2.227,22,0.631,23,1.242,26,1.02,29,1.247,31,1.299,32,0.017,33,1.032,34,0.891,35,1.133,39,0.975,45,0.469,46,0.308,52,0.233,53,0.233,54,1.451,56,1.271,108,0.01,109,0.013,110,0.01,140,2.649,197,3.666,204,2.962,206,1.932,207,1.586,209,2.492,210,2.034,263,2.492,265,1.419,270,4.612,271,3.713,285,3.29,286,4.855,289,4.191,295,1.562,340,1.586,341,1.451,348,4.191,350,3.038,351,3.038,352,4.027,355,2.829,365,3.038,366,3.29,469,3.603,500,1.912,963,5.053,971,4.027,1420,4.191,1421,4.027,1422,5.946,1423,5.946,1424,4.668,1425,4.668]],["title/components/VerifyEmailComponent.html",[0,0.338,103,0.989]],["body/components/VerifyEmailComponent.html",[0,0.421,1,0.697,2,1.213,3,0.128,4,0.114,5,0.832,6,0.832,7,0.832,8,0.832,9,0.114,13,1.213,14,1.76,15,0.796,16,2.293,17,2.009,18,1.213,20,1.213,22,0.346,23,0.815,24,1.968,26,0.852,27,1.552,28,2.34,29,1.188,31,0.852,32,0.017,33,0.917,34,0.852,35,0.744,39,0.987,40,1.16,45,0.424,46,0.169,48,0.954,52,0.128,53,0.128,56,1.063,59,0.488,60,1.268,61,1.213,62,0.832,63,1.717,64,0.832,65,0.832,66,0.697,67,0.973,68,0.832,69,0.697,70,0.832,71,0.667,72,0.832,73,0.697,74,0.832,75,0.697,76,0.796,77,1.268,78,0.667,79,0.832,80,0.667,81,0.832,82,0.697,83,0.832,84,0.667,85,0.761,86,0.832,87,0.667,88,0.832,89,0.667,90,0.444,91,0.697,92,0.832,93,0.667,94,0.832,95,0.697,96,0.761,97,1.16,98,0.832,99,0.639,100,0.832,101,0.697,102,0.832,103,1.378,104,1.957,105,1.94,106,0.832,107,0.832,108,0.006,109,0.008,110,0.006,149,2.083,190,3.331,201,1.978,205,2.364,208,1.453,210,1.642,248,1.102,258,1.667,265,0.931,268,3.366,287,2.821,295,1.488,308,4.559,318,2.539,322,3.366,342,1.848,344,1.966,358,1,369,1.367,376,3.366,382,1.291,413,2.364,419,3.366,438,1.681,443,2.382,455,2.682,457,2.821,461,2.214,463,1.966,464,2.523,484,3.632,485,1.453,490,1.291,491,1.453,493,1.667,494,1.453,611,1.805,613,1.159,614,1.861,615,1.667,616,1.667,617,2.214,619,1.552,620,1.222,624,2.364,643,4.527,656,2.209,661,4.393,664,1.978,670,3.366,672,1.667,673,1.102,699,2.539,713,3.44,720,1.667,721,2.209,722,1.805,726,1.978,727,1.978,728,3.366,729,3.013,731,2.664,781,1.667,786,2.75,804,2.209,817,3.013,839,1.805,897,2.75,900,3.013,997,1.453,1029,1.805,1099,4.081,1116,2.209,1117,2.209,1118,2.209,1182,2.209,1347,2.209,1420,4.392,1426,5.542,1427,2.209,1428,4.726,1429,3.901,1430,4.726,1431,3.901,1432,2.561,1433,2.561,1434,5.284,1435,2.561,1436,2.561,1437,2.561,1438,2.561,1439,2.561,1440,2.561,1441,2.561,1442,2.561,1443,2.561,1444,2.561,1445,2.561,1446,2.561,1447,4.726,1448,2.561,1449,2.561,1450,3.901,1451,3.366,1452,3.901]],["title/coverage.html",[1453,4.474]],["body/coverage.html",[0,0.676,1,0.922,9,0.151,10,2.921,28,1.322,32,0.017,34,0.507,49,2.615,53,0.169,66,0.922,69,0.922,71,0.882,73,0.922,75,0.922,78,0.882,80,0.882,82,0.922,84,0.882,87,0.882,89,0.882,91,0.922,93,0.882,95,0.922,97,1.424,99,0.845,101,0.922,103,0.882,108,0.007,109,0.01,110,0.007,126,2.203,127,2.203,150,2.615,152,2.921,167,2.386,170,2.386,187,2.386,189,2.921,206,2.212,214,3.118,216,2.921,254,2.615,264,2.615,287,1.533,342,1.1,351,2.203,355,2.903,369,1.807,391,3.405,431,2.921,432,2.615,433,2.921,443,1.706,450,2.051,451,2.203,490,1.706,529,3.618,531,2.921,532,2.615,533,2.921,544,2.051,545,2.051,558,1.615,593,3.7,598,2.386,606,2.736,643,2.386,645,2.386,649,2.921,675,2.921,709,2.921,710,3.7,733,2.921,794,2.921,797,1.921,798,2.921,803,2.921,805,2.921,883,2.921,897,3.918,919,2.921,920,2.921,942,2.203,945,2.386,947,3.376,948,3.376,973,3.7,1010,2.921,1094,2.921,1107,2.386,1127,2.921,1164,2.921,1184,3.376,1246,2.615,1247,2.615,1248,2.921,1285,2.921,1363,2.921,1394,2.921,1412,2.921,1413,2.921,1420,2.386,1421,2.921,1426,2.921,1427,2.921,1453,2.921,1454,2.921,1455,3.385,1456,3.385,1457,2.921,1458,7.073,1459,2.921,1460,6.954,1461,5.559,1462,4.796,1463,2.921,1464,2.921,1465,4.79,1466,5.559,1467,5.559,1468,3.385,1469,3.385,1470,4.79,1471,3.385,1472,4.79,1473,4.79,1474,6.378,1475,5.559,1476,2.921,1477,2.921,1478,2.921,1479,5.559,1480,5.559,1481,4.79,1482,4.79,1483,3.385,1484,3.385,1485,3.385,1486,4.79,1487,3.385,1488,3.385,1489,3.385,1490,4.79,1491,4.79,1492,3.385,1493,3.385,1494,3.385,1495,3.385,1496,3.385,1497,3.385,1498,3.385,1499,3.385,1500,2.921,1501,2.921,1502,2.921,1503,4.133,1504,2.921,1505,2.921,1506,3.385,1507,3.385]],["title/dependencies.html",[114,1.782,1508,3.165]],["body/dependencies.html",[32,0.017,46,0.359,48,2.024,108,0.012,109,0.014,110,0.012,114,2.122,133,5.636,134,4.604,207,1.847,246,2.593,248,2.338,534,4.688,1509,5.434,1510,7.7,1511,5.434,1512,4.688,1513,5.434,1514,5.434,1515,5.434,1516,5.434,1517,5.434,1518,5.434,1519,5.434,1520,5.434,1521,5.434,1522,5.434,1523,5.434,1524,5.434,1525,5.434]],["title/miscellaneous/enumerations.html",[1526,1.69,1527,3.939]],["body/miscellaneous/enumerations.html",[22,0.723,32,0.017,67,1.877,108,0.012,109,0.014,110,0.012,305,3.924,341,2.404,434,3.09,440,5.001,471,5.587,521,4.898,537,3.675,555,5.587,800,5.587,801,5.587,802,5.001,1526,2.859,1527,4.62,1528,7.232,1529,5.355]],["title/miscellaneous/functions.html",[1526,1.69,1530,3.939]],["body/miscellaneous/functions.html",[22,0.762,31,1.232,32,0.015,33,0.979,35,1.075,56,1.536,108,0.012,109,0.015,110,0.012,184,3.976,196,3.976,224,3.976,650,4.708,830,3.976,1107,4.708,1113,5.159,1476,4.867,1477,5.763,1526,3.012,1530,4.867,1531,5.641,1532,5.641,1533,6.68,1534,5.641,1535,5.641,1536,4.867,1537,5.641,1538,5.641,1539,6.68,1540,5.641,1541,5.641,1542,5.641]],["title/index.html",[22,0.428,1543,3.165,1544,3.165]],["body/index.html",[0,0.595,4,0.218,17,1.327,32,0.013,33,0.846,108,0.011,109,0.013,110,0.011,129,1.733,157,4.204,184,3.434,196,3.434,342,1.583,434,3.185,654,4.719,695,5.405,757,3.763,931,4.204,1036,4.204,1299,3.434,1454,5.271,1512,4.204,1545,4.873,1546,6.674,1547,6.674,1548,4.873,1549,4.873,1550,4.873,1551,7.207,1552,7.462,1553,4.873,1554,4.873,1555,4.873,1556,4.873,1557,4.873,1558,4.873,1559,4.873,1560,4.873,1561,6.674,1562,6.674,1563,4.873,1564,7.207,1565,4.873,1566,4.873,1567,4.873,1568,4.873,1569,4.873,1570,4.873,1571,4.204,1572,6.11,1573,6.11,1574,6.998,1575,4.873,1576,6.11,1577,6.11,1578,4.873,1579,4.873,1580,4.873,1581,6.674,1582,4.873,1583,4.873]],["title/modules.html",[113,1.542]],["body/modules.html",[32,0.014,108,0.011,109,0.014,110,0.011,112,3.568,113,1.505,124,2.873,125,3.295,134,5.464,237,3.568,241,3.295,242,2.073,243,2.873,427,3.295,628,3.068,637,3.568,641,3.295,702,3.295,938,3.068,1078,3.568,1082,3.295,1351,3.568,1355,3.295,1584,7.752,1585,7.752,1586,7.901,1587,7.424,1588,7.424]],["title/overview.html",[1589,4.474]],["body/overview.html",[1,1.803,2,0.957,32,0.017,53,0.154,59,0.587,66,1.436,69,1.436,71,1.725,73,1.803,75,1.436,78,1.374,80,1.374,82,1.803,84,1.374,87,1.374,89,1.374,90,0.534,91,1.803,93,1.374,95,1.436,99,1.315,101,1.436,103,1.374,108,0.007,109,0.01,110,0.007,111,0.615,112,5.118,113,0.916,114,1.202,115,1.325,116,1.325,117,1.325,118,1.001,119,2.657,120,2.657,121,2.657,122,2.657,123,2.657,124,3.489,125,4.765,126,3.432,127,3.432,128,1.926,129,1.095,164,1.644,187,2.171,237,5.159,238,2.657,239,2.657,240,2.657,241,3.432,242,2.914,243,3.986,263,1.644,369,1.644,423,2.657,424,2.657,425,2.657,426,2.657,427,4.88,627,2.005,628,4.19,629,2.657,630,2.657,632,2.657,637,4.95,638,2.657,639,2.657,640,2.657,641,3.432,702,4.414,703,2.657,704,2.657,706,2.657,905,2.657,906,2.657,908,2.657,911,2.657,912,2.657,914,2.657,938,3.726,939,2.657,940,2.657,941,2.657,942,4.308,1078,5.159,1079,2.657,1080,2.657,1081,2.657,1082,3.432,1163,3.716,1351,5.229,1352,2.657,1353,2.657,1354,2.657,1355,3.432,1589,2.657,1590,3.08,1591,3.08,1592,3.08,1593,3.08,1594,3.08]],["title/routes.html",[164,2.769]],["body/routes.html",[32,0.015,108,0.013,109,0.015,110,0.013,164,3.297]],["title/miscellaneous/typealiases.html",[1526,1.69,1595,4.566]],["body/miscellaneous/typealiases.html",[22,0.766,32,0.015,34,0.85,108,0.012,109,0.015,110,0.012,264,4.379,350,4.895,359,5.781,947,3.996,948,5.373,965,5.781,966,5.781,1184,3.996,1203,5.781,1204,5.781,1526,3.027,1596,5.67,1597,6.7,1598,6.7,1599,5.67]],["title/miscellaneous/variables.html",[1526,1.69,1600,3.939]],["body/miscellaneous/variables.html",[22,0.527,32,0.017,34,1.06,49,4.083,56,1.063,105,1.018,108,0.008,109,0.012,110,0.008,149,2.823,176,3.368,259,3.368,295,1.431,333,3.204,340,2.48,341,2.238,344,1.968,355,3.894,443,2.665,456,2.366,457,3.585,458,3.726,459,4.083,462,2.216,463,1.968,464,2.084,490,1.968,661,5.467,673,2.275,691,3.001,780,4.083,1451,4.561,1457,4.561,1459,5.172,1462,3.368,1463,5.543,1464,5.543,1478,3.368,1500,4.561,1501,3.368,1502,3.368,1503,3.368,1504,4.561,1505,4.561,1526,2.084,1536,3.368,1571,4.561,1600,3.368,1601,5.287,1602,3.904,1603,3.904,1604,3.904,1605,5.995,1606,3.904,1607,3.904,1608,3.904,1609,3.904,1610,6.714,1611,3.904,1612,3.904,1613,6.922,1614,3.904,1615,5.995,1616,3.904,1617,3.904,1618,5.287,1619,3.904,1620,3.904,1621,3.904,1622,3.904,1623,3.904,1624,3.904,1625,3.904,1626,5.287,1627,5.287,1628,3.904,1629,3.904,1630,3.904,1631,3.904,1632,5.287,1633,3.904,1634,3.904,1635,5.287,1636,5.287,1637,5.287,1638,5.287]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":894,"title":{},"body":{"components/ModalComponent.html":{}}}],["0.7",{"_index":783,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1163,"title":{},"body":{"components/SidenavComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":793,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.6",{"_index":790,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":529,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["1003px",{"_index":1284,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["100vw",{"_index":893,"title":{},"body":{"components/ModalComponent.html":{}}}],["10px",{"_index":1074,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["15/23",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1590,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1591,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["2.6.10",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":527,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["200",{"_index":901,"title":{},"body":{"components/ModalComponent.html":{}}}],["200px",{"_index":1073,"title":{},"body":{"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{}}}],["2019",{"_index":683,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":1071,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["24",{"_index":1594,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":1389,"title":{},"body":{"components/TopnavComponent.html":{}}}],["25",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":787,"title":{},"body":{"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["27",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":526,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["3/11",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["3/12",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["3000",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":900,"title":{},"body":{"components/ModalComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["30px",{"_index":626,"title":{},"body":{"components/DialogComponent.html":{}}}],["33",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1593,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1391,"title":{},"body":{"components/TopnavComponent.html":{}}}],["404",{"_index":921,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["42",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":935,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4px",{"_index":904,"title":{},"body":{"components/ModalComponent.html":{}}}],["5/8",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":897,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["5000",{"_index":672,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["50px",{"_index":1347,"title":{},"body":{"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["56px",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["6",{"_index":1125,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["6.5.3",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["6/14",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["6/15",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{}}}],["65",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1592,"title":{},"body":{"overview.html":{}}}],["8.0.2",{"_index":1512,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.3",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["8/20",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["9.1.0",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":732,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["99",{"_index":1385,"title":{},"body":{"components/TopnavComponent.html":{}}}],["absolute",{"_index":780,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":456,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":448,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["account's",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":1070,"title":{},"body":{"components/ProjectsComponent.html":{},"injectables/UIService.html":{}}}],["activatedroute",{"_index":1099,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["add",{"_index":1064,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["address",{"_index":1434,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["afterclosed",{"_index":1057,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["again",{"_index":666,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["aliases",{"_index":1596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":617,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["already",{"_index":1538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1546,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":849,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":847,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["angular/common",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"modules/EmailModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/ProjectsModule.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"modules/TasksModule.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":852,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":879,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":605,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/MaterialModule.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["angular/material/divider",{"_index":854,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":856,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":858,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":860,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":862,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":882,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":868,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":864,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/slide",{"_index":876,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":871,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":866,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":874,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["animations",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["animations/router.animation",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["animationtriggermetadata",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["another",{"_index":1537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["any)._id",{"_index":584,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["api",{"_index":1038,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["apiurl",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["app.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":112,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":150,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":124,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":1344,"title":{},"body":{"components/TasksComponent.html":{}}}],["artifacts",{"_index":1565,"title":{},"body":{"index.html":{}}}],["auth",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["auth/auth.guard",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/TopnavComponent.html":{}}}],["authguard",{"_index":167,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":126,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["authmodule",{"_index":237,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":225,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":231,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":241,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":28,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["authtoken",{"_index":229,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":786,"title":{},"body":{"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["automatically",{"_index":1556,"title":{},"body":{"index.html":{}}}],["available",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["backdrop",{"_index":892,"title":{},"body":{"components/ModalComponent.html":{}}}],["background",{"_index":765,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["backtooltip",{"_index":1253,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backward",{"_index":1255,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["bar",{"_index":872,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":1388,"title":{},"body":{"components/TopnavComponent.html":{}}}],["bearer",{"_index":235,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["behaviorsubject",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(null",{"_index":991,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["behaviorsubject(this.isauthenticated",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(true",{"_index":1408,"title":{},"body":{"injectables/UIService.html":{}}}],["between",{"_index":1076,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["birthyear",{"_index":682,"title":{},"body":{"components/FooterComponent.html":{}}}],["boolean",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["bootstrap",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["border",{"_index":902,"title":{},"body":{"components/ModalComponent.html":{}}}],["bottom",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["break",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breakpointobserver",{"_index":1138,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["breakpoints",{"_index":1141,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["browse",{"_index":1586,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1564,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["button",{"_index":936,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["button:not(:last",{"_index":622,"title":{},"body":{"components/DialogComponent.html":{}}}],["calc(100",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{},"components/ProjectsComponent.html":{}}}],["calc(100vh",{"_index":932,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["cancel",{"_index":530,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["canload",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["case",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror",{"_index":656,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["catcherror((error",{"_index":660,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":1444,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["center",{"_index":619,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["center/cover",{"_index":769,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1299,"title":{},"body":{"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":623,"title":{},"body":{"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["class",{"_index":53,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["clear",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1547,"title":{},"body":{"index.html":{}}}],["close",{"_index":447,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{}}}],["closemodal",{"_index":1015,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["cluster_appmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":423,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":424,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":426,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":425,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_dialogmodule",{"_index":629,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_declarations",{"_index":630,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_exports",{"_index":632,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_imports",{"_index":631,"title":{},"body":{"modules/DialogModule.html":{}}}],["cluster_emailmodule",{"_index":638,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_declarations",{"_index":639,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_imports",{"_index":640,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_footermodule",{"_index":703,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_declarations",{"_index":704,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_exports",{"_index":706,"title":{},"body":{"modules/FooterModule.html":{},"overview.html":{}}}],["cluster_footermodule_imports",{"_index":705,"title":{},"body":{"modules/FooterModule.html":{}}}],["cluster_modalmodule",{"_index":905,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":906,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":908,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_imports",{"_index":907,"title":{},"body":{"modules/ModalModule.html":{}}}],["cluster_navigationmodule",{"_index":911,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_declarations",{"_index":912,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_exports",{"_index":914,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_imports",{"_index":913,"title":{},"body":{"modules/NavigationModule.html":{}}}],["cluster_pipesmodule",{"_index":939,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":940,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":941,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":1079,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_declarations",{"_index":1080,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_imports",{"_index":1081,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1352,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":1353,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1354,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":1559,"title":{},"body":{"index.html":{}}}],["color",{"_index":697,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/TopnavComponent.html":{}}}],["column",{"_index":616,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["commonmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["components/dialog/dialog.component",{"_index":1045,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["components/dialog/dialog.module",{"_index":1085,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["components/modal/modal.module",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/ProjectsModule.html":{}}}],["concatmap",{"_index":1439,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(res",{"_index":1442,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(token",{"_index":1440,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["confirm",{"_index":611,"title":{},"body":{"components/DialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmation",{"_index":1029,"title":{},"body":{"components/ProjectsComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmpassword",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["const",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsRoutingModule.html":{},"components/TasksComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":608,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["constructor(authservice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(breakpointobserver",{"_index":1137,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["constructor(data",{"_index":597,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(fb",{"_index":1097,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(http",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["constructor(projecthttpservice",{"_index":449,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{}}}],["constructor(router",{"_index":739,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":1398,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(taskhttpservice",{"_index":543,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["constructor(taskstateservice",{"_index":1257,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["constructor(uiservice",{"_index":651,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":933,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["content",{"_index":607,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["context",{"_index":1504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":464,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["control.haserror('email",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.haserror('maxlength",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.haserror('minlength",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.haserror('mustmatch",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.haserror('required",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.invalid",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlname",{"_index":1542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copy",{"_index":690,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":125,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1453,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProjectHttpService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["created",{"_index":687,"title":{},"body":{"components/FooterComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["createdat",{"_index":795,"title":{},"body":{"interfaces/IProject.html":{}}}],["createproject",{"_index":516,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectHttpService.html":{}}}],["createproject(project",{"_index":954,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["createprojectcomponent",{"_index":66,"title":{"components/CreateProjectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createtask",{"_index":1185,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["createtask(projecturl",{"_index":1191,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["createtask(this.project.url",{"_index":583,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["createtaskcomponent",{"_index":69,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":535,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creation",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":796,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{}}}],["credential.ts",{"_index":1457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":698,"title":{},"body":{"components/FooterComponent.html":{}}}],["currentyear",{"_index":684,"title":{},"body":{"components/FooterComponent.html":{}}}],["custom",{"_index":1534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["data.content",{"_index":610,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.title",{"_index":609,"title":{},"body":{"components/DialogComponent.html":{}}}],["date",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProject.html":{}}}],["date().getfullyear",{"_index":685,"title":{},"body":{"components/FooterComponent.html":{}}}],["date(expirationdate",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(now.gettime",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":764,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decoration",{"_index":700,"title":{},"body":{"components/FooterComponent.html":{}}}],["decorators",{"_index":600,"title":{},"body":{"components/DialogComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["delete",{"_index":958,"title":{},"body":{"injectables/ProjectHttpService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["deleted",{"_index":927,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletedid",{"_index":1013,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["deleteproject",{"_index":949,"title":{},"body":{"injectables/ProjectHttpService.html":{},"components/ProjectsComponent.html":{}}}],["deleteproject(id",{"_index":956,"title":{},"body":{"injectables/ProjectHttpService.html":{},"components/ProjectsComponent.html":{}}}],["deletetask",{"_index":1186,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksComponent.html":{}}}],["deletetask(id",{"_index":1294,"title":{},"body":{"components/TasksComponent.html":{}}}],["deletetask(projecturl",{"_index":1193,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["deletetask(this.taskstateservice.project.url",{"_index":1341,"title":{},"body":{"components/TasksComponent.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["descriptipon",{"_index":482,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["destroy",{"_index":437,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["dev",{"_index":1554,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":757,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["development",{"_index":1550,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":594,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["dialog'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dialog.component",{"_index":635,"title":{},"body":{"modules/DialogModule.html":{}}}],["dialog.component.html",{"_index":596,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialog.component.scss",{"_index":595,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialogcomponent",{"_index":71,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogdata",{"_index":598,"title":{"interfaces/DialogData.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":628,"title":{"modules/DialogModule.html":{}},"body":{"modules/DialogModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["dialogref",{"_index":1052,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["direction",{"_index":615,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1563,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1568,"title":{},"body":{"index.html":{}}}],["display",{"_index":613,"title":{},"body":{"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["displayformerrors",{"_index":443,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["displayformerrors(control",{"_index":455,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["displayformerrors(description",{"_index":528,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["displayformerrors(email",{"_index":728,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["displayformerrors(formctrls.confirmpassword",{"_index":1126,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["displayformerrors(formctrls.email",{"_index":841,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["displayformerrors(formctrls.firstname",{"_index":1183,"title":{},"body":{"components/SignupComponent.html":{}}}],["displayformerrors(formctrls.password",{"_index":844,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["displayformerrors(name",{"_index":525,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["displayformerrors(title",{"_index":592,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["displaying",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displays",{"_index":461,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dist",{"_index":1567,"title":{},"body":{"index.html":{}}}],["divider",{"_index":1349,"title":{},"body":{"components/TasksComponent.html":{}}}],["document.body.clientwidth",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1454,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doing",{"_index":801,"title":{},"body":{"interfaces/ITask.html":{},"miscellaneous/enumerations.html":{}}}],["doingtasks",{"_index":1288,"title":{},"body":{"components/TasksComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["don't",{"_index":1069,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["don\\'t",{"_index":1077,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["done",{"_index":802,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["done_all",{"_index":1280,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["donetasks",{"_index":1289,"title":{},"body":{"components/TasksComponent.html":{}}}],["dragdropmodule",{"_index":848,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":1131,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drop",{"_index":850,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":534,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1579,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":152,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":156,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":155,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["edit",{"_index":521,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["element(by.css('app",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["email.component",{"_index":644,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{}}}],["email.component.html",{"_index":1429,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.scss",{"_index":1428,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":1427,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:16",{"_index":1436,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:17",{"_index":1437,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:18",{"_index":1431,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:30",{"_index":1433,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:53",{"_index":1432,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:60",{"_index":1435,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email/${token",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/token",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/verify",{"_index":643,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["emailmodule",{"_index":637,"title":{"modules/EmailModule.html":{}},"body":{"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailroutingmodule",{"_index":641,"title":{"modules/EmailRoutingModule.html":{}},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["end",{"_index":695,"title":{},"body":{"components/FooterComponent.html":{},"components/ProjectsComponent.html":{},"index.html":{}}}],["enter",{"_index":1451,"title":{},"body":{"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["entrycomponents",{"_index":634,"title":{},"body":{"modules/DialogModule.html":{}}}],["enumerations",{"_index":1527,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{}}}],["error",{"_index":650,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":670,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["errorinterceptor",{"_index":127,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":661,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":463,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["errors.utils",{"_index":491,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["errors.utils.ts",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":453,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["execute",{"_index":1576,"title":{},"body":{"index.html":{}}}],["exist",{"_index":926,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expansion",{"_index":1281,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["expirationdate",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":1446,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["expires",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["exports",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/FooterModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{}}}],["fab",{"_index":1346,"title":{},"body":{"components/TasksComponent.html":{}}}],["fails",{"_index":1541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1100,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["fff",{"_index":785,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["field",{"_index":730,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["fields",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["files",{"_index":1558,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["first",{"_index":945,"title":{},"body":{"modules/PipesModule.html":{},"components/SignupComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["firstname",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/SignupComponent.html":{}}}],["fixed",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["flag",{"_index":1570,"title":{},"body":{"index.html":{}}}],["flex",{"_index":614,"title":{},"body":{"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["font",{"_index":791,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["footer",{"_index":676,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["footer.component",{"_index":708,"title":{},"body":{"modules/FooterModule.html":{}}}],["footer.component.html",{"_index":678,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":677,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer__link",{"_index":696,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":73,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footermodule",{"_index":702,"title":{"modules/FooterModule.html":{}},"body":{"modules/FooterModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["forgot",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["forgotpassword",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":75,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":462,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":1098,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":484,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formcontrol(null",{"_index":493,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formctrls",{"_index":813,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formctrls.password.value?.length",{"_index":1124,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup",{"_index":474,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":1084,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["forward",{"_index":1256,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["forwardtooltip",{"_index":1254,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["found",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.html",{"_index":923,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":922,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":920,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":924,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":1478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1530,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1580,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1561,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1545,"title":{},"body":{"index.html":{}}}],["getauthdata",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["getdescription",{"_index":480,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["getemailverificationtoken",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemailverificationtoken(token",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["getformctrls",{"_index":826,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmappedproject",{"_index":977,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["getmappedproject(id",{"_index":982,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["getmappedproject(this.projectid",{"_index":506,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["getmappedprojects",{"_index":978,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["getmappedtask",{"_index":1215,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(projecturl",{"_index":1220,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(this.project.url",{"_index":574,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getmappedtask(this.taskstateservice.project.url",{"_index":1335,"title":{},"body":{"components/TasksComponent.html":{}}}],["getmappedtasks",{"_index":1216,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtasks(projecturl",{"_index":1222,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getname",{"_index":477,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["getproject",{"_index":950,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["getproject(id",{"_index":959,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["getprojectid",{"_index":979,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["getprojectid(id",{"_index":986,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["getprojects",{"_index":951,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["gettask",{"_index":1187,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettask(projecturl",{"_index":1195,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettaskid",{"_index":1217,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettaskid(id",{"_index":1223,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettasks",{"_index":1188,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettasks(projecturl",{"_index":1198,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["getter",{"_index":828,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getting",{"_index":1543,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":562,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettitletext",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":931,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["graph",{"_index":1587,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":187,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":1283,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["h1')).gettext",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerjs",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":226,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["headers",{"_index":233,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":934,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":770,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1581,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helps",{"_index":758,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1549,"title":{},"body":{"index.html":{}}}],["heroku_url",{"_index":1459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hideconfirmpassword",{"_index":1095,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["hidepassword",{"_index":808,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":734,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["home.component.html",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":429,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":784,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":78,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":612,"title":{},"body":{"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SignupComponent.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["http",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["http.service",{"_index":486,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["http.service.ts",{"_index":948,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http.service.ts:14",{"_index":953,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["http.service.ts:16",{"_index":1190,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:21",{"_index":955,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["http.service.ts:25",{"_index":1192,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:28",{"_index":961,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["http.service.ts:37",{"_index":960,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{}}}],["http.service.ts:47",{"_index":964,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["http.service.ts:51",{"_index":1200,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:56",{"_index":957,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["http.service.ts:60",{"_index":1194,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:69",{"_index":1196,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http://localhost:3000/api/v2",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1555,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":655,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":222,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":228,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":1201,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["httpparams().set('projectid",{"_index":1206,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["httprequest",{"_index":220,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["https://devdo.herokuapp.com/api/v2",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":500,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UserService.html":{}}}],["id).pipe",{"_index":1232,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["identifier",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":767,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["import",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["import('./auth/auth.module').then(m",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./email/email.module').then(m",{"_index":260,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["import('./projects/projects.module').then(m",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./tasks/tasks.module').then(m",{"_index":1092,"title":{},"body":{"modules/ProjectsRoutingModule.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["inbox",{"_index":727,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["inconvinience",{"_index":669,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["inform",{"_index":1406,"title":{},"body":{"injectables/UIService.html":{}}}],["initauthentication",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialize",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["inject",{"_index":603,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["inject(mat_dialog_data",{"_index":601,"title":{},"body":{"components/DialogComponent.html":{}}}],["injectable",{"_index":206,"title":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":891,"title":{},"body":{"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{}}}],["inputs",{"_index":886,"title":{},"body":{"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{}}}],["intercept",{"_index":217,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":219,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":214,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":215,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":606,"title":{"interfaces/DialogData.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["interfaces",{"_index":627,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["interval",{"_index":679,"title":{},"body":{"components/FooterComponent.html":{}}}],["ionut",{"_index":688,"title":{},"body":{"components/FooterComponent.html":{}}}],["iproject",{"_index":558,"title":{"interfaces/IProject.html":{}},"body":{"components/CreateTaskComponent.html":{},"interfaces/IProject.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["isauth",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["isauth(val",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarktheme",{"_index":1132,"title":{},"body":{"components/SidenavComponent.html":{}}}],["isforgotpassword",{"_index":809,"title":{},"body":{"components/LoginComponent.html":{}}}],["ishandset",{"_index":1133,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isleft",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":810,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["isloggedin",{"_index":1134,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isopen",{"_index":1014,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["isright",{"_index":259,"title":{},"body":{"modules/AuthRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["isverified",{"_index":804,"title":{},"body":{"interfaces/IUser.html":{},"components/VerifyEmailComponent.html":{}}}],["isvisible",{"_index":1430,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["itask",{"_index":797,"title":{"interfaces/ITask.html":{}},"body":{"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["item",{"_index":1393,"title":{},"body":{"components/TopnavComponent.html":{}}}],["items",{"_index":618,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["iuser",{"_index":351,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["js",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":694,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1578,"title":{},"body":{"index.html":{}}}],["keep",{"_index":759,"title":{},"body":{"components/HomeComponent.html":{}}}],["key",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["later",{"_index":667,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["layoutmodule",{"_index":846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["leave",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":781,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["letter",{"_index":1414,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":946,"title":{},"body":{"modules/PipesModule.html":{}}}],["letter.pipe.ts",{"_index":1413,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":1416,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":789,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["list",{"_index":1227,"title":{},"body":{"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["list'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["list.component",{"_index":1359,"title":{},"body":{"modules/TasksModule.html":{}}}],["list.component.html",{"_index":1250,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.scss",{"_index":1249,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts",{"_index":1248,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:11",{"_index":1262,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:12",{"_index":1263,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:13",{"_index":1260,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:14",{"_index":1259,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:15",{"_index":1261,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:16",{"_index":1265,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:17",{"_index":1266,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:18",{"_index":1264,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:19",{"_index":1258,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:23",{"_index":1271,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:28",{"_index":1273,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:32",{"_index":1268,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:36",{"_index":1270,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list/tasks",{"_index":1247,"title":{},"body":{"components/TasksCardListComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["list:not(:last",{"_index":1350,"title":{},"body":{"components/TasksComponent.html":{}}}],["listen",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["loadchildren",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{}}}],["loaded",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":1396,"title":{},"body":{"injectables/UIService.html":{}}}],["local",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logged",{"_index":1142,"title":{},"body":{"components/SidenavComponent.html":{}}}],["login",{"_index":258,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login(email",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(this.formctrls.email.value",{"_index":836,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":807,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":806,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":80,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":811,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":822,"title":{},"body":{"components/LoginComponent.html":{}}}],["looking",{"_index":925,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":929,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailmodule",{"_index":261,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["m.projectsmodule",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1093,"title":{},"body":{"modules/ProjectsRoutingModule.html":{}}}],["main",{"_index":1386,"title":{},"body":{"components/TopnavComponent.html":{}}}],["map",{"_index":997,"title":{},"body":{"injectables/ProjectStateService.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["map((res",{"_index":999,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["map(param",{"_index":1117,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["map(parammap",{"_index":1319,"title":{},"body":{"components/TasksComponent.html":{}}}],["map(res",{"_index":1004,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["map(result",{"_index":1155,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["mapped",{"_index":984,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["margin",{"_index":624,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat",{"_index":620,"title":{},"body":{"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat_dialog_data",{"_index":604,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["matbuttonmodule",{"_index":851,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":878,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":1536,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["match.validator",{"_index":1109,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":1019,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["matdialogmodule",{"_index":880,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":853,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/ProjectsModule.html":{}}}],["materialmodule",{"_index":242,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":855,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":857,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":859,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":861,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":881,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":867,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":1146,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":863,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":875,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":1399,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":870,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":1403,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":865,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":873,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["maximum",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":459,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["menu",{"_index":1162,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["message",{"_index":1407,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["method",{"_index":1023,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["min",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mini",{"_index":1345,"title":{},"body":{"components/TasksComponent.html":{}}}],["minlength",{"_index":458,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1526,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":763,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":467,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["modal'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["modal.component",{"_index":910,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal.component.html",{"_index":885,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":884,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.mat",{"_index":896,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":82,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":243,"title":{"modules/ModalModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ModalModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["modalprojecttitle",{"_index":471,"title":{},"body":{"components/CreateProjectComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modalprojecttitle.create",{"_index":512,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["modalprojecttitle.edit",{"_index":504,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["modaltasktitle",{"_index":555,"title":{},"body":{"components/CreateTaskComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modaltasktitle.create",{"_index":579,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modaltasktitle.edit",{"_index":572,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modaltitle",{"_index":439,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["mode",{"_index":440,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mode.create",{"_index":511,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["mode.edit",{"_index":502,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["model",{"_index":799,"title":{},"body":{"interfaces/ITask.html":{}}}],["module",{"_index":111,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/FooterModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/FooterModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":663,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1582,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":1067,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["multi",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":1107,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":1114,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name.touppercase",{"_index":1054,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["nav",{"_index":1392,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigate",{"_index":1036,"title":{},"body":{"components/ProjectsComponent.html":{},"index.html":{}}}],["navigateto",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":1376,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigation/navigation.module",{"_index":430,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationmodule",{"_index":427,"title":{"modules/NavigationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["need",{"_index":930,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["needs",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["never",{"_index":762,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":221,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":236,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":659,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1552,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/FooterModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngondestroy",{"_index":542,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["none",{"_index":701,"title":{},"body":{"components/FooterComponent.html":{},"components/TasksComponent.html":{}}}],["now",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["now.gettime",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"injectables/ProjectStateService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["number",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":551,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["observe",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["onbackward",{"_index":1251,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onbackward(id",{"_index":1267,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onchangestatus",{"_index":1291,"title":{},"body":{"components/TasksComponent.html":{}}}],["onchangestatus(id",{"_index":1300,"title":{},"body":{"components/TasksComponent.html":{}}}],["onclose",{"_index":444,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{}}}],["ondelete",{"_index":1016,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["ondelete(id",{"_index":1269,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["ondelete(name",{"_index":1026,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["ondestroy",{"_index":536,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["onedit",{"_index":1017,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{}}}],["onedit(id",{"_index":1030,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{}}}],["onforgotpassword",{"_index":812,"title":{},"body":{"components/LoginComponent.html":{}}}],["onforward",{"_index":1252,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onforward(id",{"_index":1272,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["onlogout",{"_index":1135,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["onsave",{"_index":445,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["onsignup",{"_index":738,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":713,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ontogglesidenav",{"_index":1367,"title":{},"body":{"components/TopnavComponent.html":{}}}],["ontoggletheme",{"_index":1136,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["onviewproject",{"_index":1018,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["onviewproject(url",{"_index":1034,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["open",{"_index":1033,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["open/close",{"_index":1305,"title":{},"body":{"components/TasksComponent.html":{}}}],["opens",{"_index":820,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"components/SidenavComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":483,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["outputs",{"_index":446,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["overlay",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":1589,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":788,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1508,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":937,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["page",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["pagenotfoundcomponent",{"_index":84,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel:not(:last",{"_index":1282,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["param",{"_index":969,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["param.get('token",{"_index":1118,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["parammap.get('projecturl",{"_index":1320,"title":{},"body":{"components/TasksComponent.html":{}}}],["params",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["partial",{"_index":963,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["password'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["password.component",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{}}}],["password.component.html",{"_index":712,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":711,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":710,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":719,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":714,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1105,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1104,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":716,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":715,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1102,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":718,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":717,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":1106,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":1101,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":1103,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/${token",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/:token",{"_index":648,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["password/forgot",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":645,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["permissions",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":369,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(finalize",{"_index":838,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":1058,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["pipes",{"_index":1411,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipes/pipes.module",{"_index":1088,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["pipesmodule",{"_index":938,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1417,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["placeholder",{"_index":457,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":664,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["position",{"_index":691,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["post(`${this.url}/login",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["prepareroute",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["prepareroute(outlet",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["primary",{"_index":1383,"title":{},"body":{"components/TopnavComponent.html":{}}}],["private",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["probably",{"_index":928,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1569,"title":{},"body":{"index.html":{}}}],["production",{"_index":1571,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":761,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":434,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["project._id",{"_index":1006,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["project.component",{"_index":1087,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["project.component.html",{"_index":436,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.scss",{"_index":435,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts",{"_index":433,"title":{},"body":{"components/CreateProjectComponent.html":{},"coverage.html":{}}}],["project.component.ts:16",{"_index":475,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:17",{"_index":473,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:18",{"_index":472,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:19",{"_index":454,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:20",{"_index":476,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:21",{"_index":452,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:25",{"_index":465,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:52",{"_index":478,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:59",{"_index":481,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:66",{"_index":460,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:78",{"_index":468,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.component.ts:98",{"_index":466,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["project.description",{"_index":510,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{}}}],["project.model",{"_index":565,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["project.name",{"_index":509,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{}}}],["project.url",{"_index":1007,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["project/create",{"_index":432,"title":{},"body":{"components/CreateProjectComponent.html":{},"modules/ProjectsModule.html":{},"coverage.html":{}}}],["project?.name",{"_index":1343,"title":{},"body":{"components/TasksComponent.html":{}}}],["projectarrayresponsetype",{"_index":966,"title":{},"body":{"injectables/ProjectHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["projectchange",{"_index":980,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["projectchange(project",{"_index":988,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["projectchanged",{"_index":974,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["projectform",{"_index":441,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["projecthttpservice",{"_index":450,"title":{"injectables/ProjectHttpService.html":{}},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"coverage.html":{}}}],["projectid",{"_index":442,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/TaskHttpService.html":{}}}],["projectidlistener",{"_index":975,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["projectonchange",{"_index":976,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["projectresponsetype",{"_index":965,"title":{},"body":{"injectables/ProjectHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["projects",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"components/TopnavComponent.html":{}}}],["projects'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["projects.component",{"_index":1086,"title":{},"body":{"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{}}}],["projects.component.html",{"_index":1012,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.component.scss",{"_index":1011,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projectscomponent",{"_index":87,"title":{"components/ProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectsmodule",{"_index":1078,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsroutingmodule",{"_index":1082,"title":{"modules/ProjectsRoutingModule.html":{}},"body":{"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["projectstateservice",{"_index":451,"title":{"injectables/ProjectStateService.html":{}},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"coverage.html":{}}}],["projecturl",{"_index":1091,"title":{},"body":{"modules/ProjectsRoutingModule.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["promise",{"_index":159,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{}}}],["properties",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["protected",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":157,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["public",{"_index":438,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["query",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":903,"title":{},"body":{"components/ModalComponent.html":{}}}],["raised",{"_index":621,"title":{},"body":{"components/DialogComponent.html":{}}}],["reactive",{"_index":818,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{}}}],["readme",{"_index":1583,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["receive",{"_index":1452,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["redirect",{"_index":745,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":692,"title":{},"body":{"components/FooterComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":1557,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":768,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":227,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":232,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":234,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":1445,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["require",{"_index":1505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.body._id",{"_index":1233,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.description",{"_index":1235,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.project",{"_index":1239,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.project._id",{"_index":1000,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["res.body.project.description",{"_index":1002,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["res.body.project.name",{"_index":1001,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["res.body.projects.map((project",{"_index":1005,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["res.body.status",{"_index":1236,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.tasks.map((task",{"_index":1240,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.title",{"_index":1234,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["resend",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["resendverificationtoken",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendverificationtoken(email",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["resetform",{"_index":1096,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(token",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":89,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetting",{"_index":725,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["responding",{"_index":662,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["response.body.expiresin",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.body.token",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":1156,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["results",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1032,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["return",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["rgba(0",{"_index":782,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["right",{"_index":625,"title":{},"body":{"components/DialogComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["router",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["routeranimation",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":262,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":164,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{}}}],["routing.module.ts",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ProjectsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["run",{"_index":1551,"title":{},"body":{"index.html":{}}}],["running",{"_index":1572,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["save",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["saveauthdata",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1560,"title":{},"body":{"index.html":{}}}],["screen",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["self",{"_index":1387,"title":{},"body":{"components/TopnavComponent.html":{}}}],["send",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["serve",{"_index":1553,"title":{},"body":{"index.html":{}}}],["server",{"_index":654,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"index.html":{}}}],["service",{"_index":1395,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":224,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["share",{"_index":1315,"title":{},"body":{"components/TasksComponent.html":{}}}],["shared/error.interceptor",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["sharereplay",{"_index":1152,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["showsnackbar",{"_index":1397,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":1402,"title":{},"body":{"injectables/UIService.html":{}}}],["side",{"_index":1375,"title":{},"body":{"components/TopnavComponent.html":{}}}],["sidenav",{"_index":1128,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidenav.component.html",{"_index":1130,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1129,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":917,"title":{},"body":{"modules/NavigationModule.html":{}}}],["sidenavcomponent",{"_index":91,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":746,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["signup",{"_index":257,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["signup(firstname",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.html",{"_index":1166,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":1165,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/must",{"_index":1108,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["signup/signup.component",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":93,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":1167,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":1197,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["size",{"_index":792,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["slidetotheleft",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slidetotheright",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["slugified",{"_index":1037,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["snack",{"_index":1405,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":1401,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":668,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"modules/PipesModule.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsModule.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["space",{"_index":1075,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["spacer",{"_index":1348,"title":{},"body":{"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["spec\\.ts",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":869,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../enums.ts",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project",{"_index":1597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../router.animation.ts",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task",{"_index":1598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/animations/router.animation.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":256,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":216,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:15",{"_index":223,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:9",{"_index":218,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":750,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/auth.service.ts:100",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:112",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:121",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:129",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:137",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:149",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:158",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:165",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:173",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:180",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:27",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:59",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:83",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/email/email",{"_index":646,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["src/app/auth/email/email.module.ts",{"_index":642,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/app/auth/email/reset",{"_index":1094,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/email/verify",{"_index":1426,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["src/app/auth/forgot",{"_index":709,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":805,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":825,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":823,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":824,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":814,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":816,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:36",{"_index":827,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:43",{"_index":815,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:50",{"_index":821,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":819,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":1164,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":1175,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":1174,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":1173,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:19",{"_index":1168,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:31",{"_index":1171,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:48",{"_index":1176,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:55",{"_index":1169,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:62",{"_index":1172,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/user.model.ts",{"_index":803,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts",{"_index":1421,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts:11",{"_index":1422,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/user.service.ts:15",{"_index":1424,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/components/dialog/dialog.component",{"_index":1316,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts",{"_index":593,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component.ts:14",{"_index":599,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts:15",{"_index":602,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.module",{"_index":1361,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/components/dialog/dialog.module.ts",{"_index":633,"title":{},"body":{"modules/DialogModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":675,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:14",{"_index":680,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:9",{"_index":681,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.module",{"_index":918,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/components/footer/footer.module.ts",{"_index":707,"title":{},"body":{"modules/FooterModule.html":{}}}],["src/app/components/modal/modal.component.ts",{"_index":883,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/components/modal/modal.component.ts:10",{"_index":887,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:14",{"_index":889,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:16",{"_index":890,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:9",{"_index":888,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.module",{"_index":1360,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/components/modal/modal.module.ts",{"_index":909,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/core/core.module.ts",{"_index":428,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":733,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":749,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":740,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":743,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:29",{"_index":744,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:36",{"_index":741,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.module.ts",{"_index":915,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts",{"_index":1127,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:14",{"_index":1148,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:15",{"_index":1149,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:16",{"_index":1150,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:17",{"_index":1139,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:25",{"_index":1140,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:37",{"_index":1144,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:44",{"_index":1143,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts",{"_index":1363,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:13",{"_index":1378,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:14",{"_index":1379,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:15",{"_index":1371,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:16",{"_index":1370,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:23",{"_index":1372,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:35",{"_index":1374,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:42",{"_index":1377,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:49",{"_index":1373,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/page",{"_index":919,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module",{"_index":636,"title":{},"body":{"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/TasksModule.html":{}}}],["src/app/material.module.ts",{"_index":845,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/pipes/pipes.module",{"_index":1362,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":943,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/pipes/uppercase",{"_index":1412,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/projects/create",{"_index":431,"title":{},"body":{"components/CreateProjectComponent.html":{},"coverage.html":{}}}],["src/app/projects/project",{"_index":947,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/projects/project.model.ts",{"_index":794,"title":{},"body":{"interfaces/IProject.html":{},"coverage.html":{}}}],["src/app/projects/projects",{"_index":1089,"title":{},"body":{"modules/ProjectsRoutingModule.html":{}}}],["src/app/projects/projects.component.ts",{"_index":1010,"title":{},"body":{"components/ProjectsComponent.html":{},"coverage.html":{}}}],["src/app/projects/projects.component.ts:17",{"_index":1041,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:18",{"_index":1043,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:19",{"_index":1040,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:20",{"_index":1039,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:22",{"_index":1042,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:23",{"_index":1020,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:32",{"_index":1025,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:43",{"_index":1035,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:50",{"_index":1031,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:60",{"_index":1027,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:82",{"_index":1022,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:89",{"_index":1021,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.component.ts:97",{"_index":1024,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/projects/projects.module.ts",{"_index":1083,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["src/app/projects/tasks/create",{"_index":531,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/projects/tasks/task",{"_index":1184,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/projects/tasks/task.model.ts",{"_index":798,"title":{},"body":{"interfaces/ITask.html":{},"coverage.html":{}}}],["src/app/projects/tasks/tasks",{"_index":1246,"title":{},"body":{"components/TasksCardListComponent.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["src/app/projects/tasks/tasks.component.ts",{"_index":1285,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/projects/tasks/tasks.component.ts:109",{"_index":1302,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:128",{"_index":1295,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:137",{"_index":1304,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:144",{"_index":1296,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:22",{"_index":1311,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:23",{"_index":1310,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:24",{"_index":1312,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:25",{"_index":1313,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:26",{"_index":1314,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:27",{"_index":1307,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:28",{"_index":1308,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:29",{"_index":1309,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:30",{"_index":1306,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:31",{"_index":1293,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:40",{"_index":1297,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:67",{"_index":1303,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:77",{"_index":1298,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.component.ts:87",{"_index":1301,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/projects/tasks/tasks.module.ts",{"_index":1356,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/shared/enums",{"_index":489,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["src/app/shared/enums.ts",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":649,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:11",{"_index":652,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:17",{"_index":653,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/form",{"_index":490,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/ui.service",{"_index":720,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":1394,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:12",{"_index":1400,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:19",{"_index":1404,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment",{"_index":1425,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1544,"title":{"index.html":{}},"body":{}}],["state.service",{"_index":488,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["state.service.ts",{"_index":973,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{},"coverage.html":{}}}],["state.service.ts:11",{"_index":992,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["state.service.ts:12",{"_index":996,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["state.service.ts:13",{"_index":993,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["state.service.ts:14",{"_index":981,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["state.service.ts:15",{"_index":1229,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:16",{"_index":1219,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:23",{"_index":983,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["state.service.ts:25",{"_index":1221,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:38",{"_index":985,"title":{},"body":{"injectables/ProjectStateService.html":{},"injectables/TaskStateService.html":{}}}],["state.service.ts:55",{"_index":987,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["state.service.ts:57",{"_index":1226,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:63",{"_index":989,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["state.service.ts:65",{"_index":1224,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["statements",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.doing",{"_index":1329,"title":{},"body":{"components/TasksComponent.html":{}}}],["status.done",{"_index":1331,"title":{},"body":{"components/TasksComponent.html":{}}}],["status.todo",{"_index":1327,"title":{},"body":{"components/TasksComponent.html":{}}}],["sticky",{"_index":1384,"title":{},"body":{"components/TopnavComponent.html":{}}}],["storage",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1566,"title":{},"body":{"index.html":{}}}],["string",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subject",{"_index":470,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["submit",{"_index":729,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subscribe",{"_index":839,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subscribe(isauth",{"_index":753,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe(project",{"_index":507,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["subscribe(res",{"_index":519,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe(result",{"_index":1059,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe(task",{"_index":575,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["subscription",{"_index":748,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscriptions",{"_index":742,"title":{},"body":{"components/HomeComponent.html":{}}}],["successfully",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1584,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1055,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["svg",{"_index":1585,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap",{"_index":1044,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{}}}],["switchmap(projecturl",{"_index":1321,"title":{},"body":{"components/TasksComponent.html":{}}}],["switchmap(task",{"_index":1336,"title":{},"body":{"components/TasksComponent.html":{}}}],["switchmap(token",{"_index":1119,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["t",{"_index":689,"title":{},"body":{"components/FooterComponent.html":{}}}],["table",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":487,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["tap",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["tap(res",{"_index":1238,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["tap(response",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":537,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/enumerations.html":{}}}],["task'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["task._id",{"_index":1241,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["task.component",{"_index":1358,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":539,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.scss",{"_index":538,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts",{"_index":533,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:111",{"_index":553,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:119",{"_index":549,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:20",{"_index":560,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:21",{"_index":557,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:22",{"_index":556,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:23",{"_index":547,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:24",{"_index":561,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:25",{"_index":559,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:26",{"_index":546,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:33",{"_index":552,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:63",{"_index":563,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:70",{"_index":564,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:77",{"_index":548,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:89",{"_index":554,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.creator",{"_index":1243,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["task.description",{"_index":578,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{}}}],["task.model",{"_index":1202,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status",{"_index":1242,"title":{},"body":{"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["task.status.includes(status.done",{"_index":1338,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes(status.todo",{"_index":1337,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.title",{"_index":577,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{}}}],["task/create",{"_index":532,"title":{},"body":{"components/CreateTaskComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["taskarrayresponsetype",{"_index":1204,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["taskchange",{"_index":1218,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskchange(task",{"_index":1225,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskchanged",{"_index":1212,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskform",{"_index":540,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskhttpservice",{"_index":544,"title":{"injectables/TaskHttpService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":541,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskidlistener",{"_index":1213,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskonchange",{"_index":1214,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskresponsetype",{"_index":1203,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks.component",{"_index":1357,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["tasks.component.html",{"_index":1287,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.scss",{"_index":1286,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":1326,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/tasks.component",{"_index":1090,"title":{},"body":{"modules/ProjectsRoutingModule.html":{}}}],["taskscardlistcomponent",{"_index":95,"title":{"components/TasksCardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscomponent",{"_index":99,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"modules/ProjectsRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tasksmodule",{"_index":1351,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":1355,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["taskstateservice",{"_index":545,"title":{"injectables/TaskStateService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["test",{"_index":1575,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1574,"title":{},"body":{"index.html":{}}}],["text",{"_index":699,"title":{},"body":{"components/FooterComponent.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["theme",{"_index":1145,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authlistenersubscription",{"_index":751,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":756,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":752,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.forgotpassword(this.email.value).subscribe",{"_index":723,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.getauthstatuslistener().pipe(map(isloggedin",{"_index":1158,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.getemailverificationtoken(token",{"_index":1441,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authservice.getisauth",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.gettoken",{"_index":230,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.initauthentication",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1160,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.resendverificationtoken(this.email.value).subscribe",{"_index":1449,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authservice.resetpassword(token",{"_index":1120,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(val",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backward",{"_index":1332,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.backward.emit(id",{"_index":1277,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":1154,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.clearauthdata",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":524,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{}}}],["this.delete.emit(id",{"_index":1278,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.deleteproject(id",{"_index":1060,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.deletetask(id",{"_index":1340,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.description.value",{"_index":518,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.destroy$.next",{"_index":589,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":590,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":1053,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["this.doingtasks",{"_index":1328,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.donetasks",{"_index":1330,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.drawer.close",{"_index":1161,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.edit.emit",{"_index":1275,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.email",{"_index":721,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.errormessage",{"_index":1448,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.fb.group",{"_index":1111,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.value",{"_index":1121,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.value",{"_index":1181,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.value",{"_index":1180,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.password.value",{"_index":837,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.forward",{"_index":1333,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.forward.emit(id",{"_index":1276,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.getauthdata",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.url}/${id",{"_index":972,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["this.http.delete(`${this.url}/${projecturl}/tasks/${id",{"_index":1210,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${id",{"_index":970,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["this.http.get(`${this.url}/${projecturl}/tasks",{"_index":1208,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${projecturl}/tasks/${id",{"_index":1211,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/verify",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(this.url",{"_index":968,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["this.http.patch(`${this.url}/reset",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/${projecturl}/tasks",{"_index":1205,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.post(`${this.url}/reset",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/verify",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.url",{"_index":967,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["this.http.put(`${this.url}/${id",{"_index":971,"title":{},"body":{"injectables/ProjectHttpService.html":{},"injectables/UserService.html":{}}}],["this.http.put(`${this.url}/${projecturl}/tasks/${id",{"_index":1209,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.interval",{"_index":686,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.isauth",{"_index":754,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isauth(false",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth(true",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarktheme",{"_index":1159,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.isforgotpassword",{"_index":840,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ishandset",{"_index":1153,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isloading",{"_index":835,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["this.isloggedin",{"_index":1157,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isopen",{"_index":1050,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["this.isvisible",{"_index":1447,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.loginform",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":834,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modaltitle",{"_index":503,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.mode",{"_index":501,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.name.value",{"_index":517,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.onchangestatus(id",{"_index":1334,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.onclose",{"_index":523,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.project",{"_index":570,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{}}}],["this.projectchanged.asobservable",{"_index":995,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projectchanged.next(project",{"_index":1009,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projectform",{"_index":492,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectform.get('description",{"_index":514,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectform.get('name",{"_index":513,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectform.setvalue",{"_index":508,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projecthttpservice",{"_index":515,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projecthttpservice.deleteproject(id).subscribe",{"_index":1061,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projecthttpservice.getproject(id).pipe",{"_index":998,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projecthttpservice.getprojects().pipe",{"_index":1003,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projectid",{"_index":499,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectidlistener.asobservable",{"_index":994,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projectidlistener.next(id",{"_index":1008,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["this.projects",{"_index":1046,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectstateservice",{"_index":505,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectstateservice.getmappedprojects().pipe(finalize",{"_index":1048,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectstateservice.getprojectid(id",{"_index":1051,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectstateservice.getprojectid(null",{"_index":1063,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectstateservice.projectchange(null",{"_index":1062,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectstateservice.projectchange(res.body.project",{"_index":520,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectstateservice.projectidlistener$.pipe(takeuntil(this.destroy$)).subscribe(id",{"_index":498,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["this.projectstateservice.projectonchange$.pipe",{"_index":1047,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.resetform",{"_index":1110,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetform.controls",{"_index":1115,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.parammap",{"_index":1116,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.route.parammap.pipe",{"_index":1318,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.router.navigatebyurl",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/authentication/login",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/authentication/signup",{"_index":755,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigatebyurl('/projects",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('authentication/login",{"_index":1123,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigatebyurl(`projects/${url",{"_index":1049,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.saveauthdata(token",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":1177,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":1179,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":1409,"title":{},"body":{"injectables/UIService.html":{}}}],["this.taskchanged.asobservable",{"_index":1230,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskchanged.next(task",{"_index":1244,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskform",{"_index":566,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('description",{"_index":581,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('title",{"_index":580,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.reset",{"_index":588,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.setvalue",{"_index":576,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskhttpservice",{"_index":582,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskhttpservice.gettask(projecturl",{"_index":1231,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskhttpservice.gettasks(projecturl).pipe",{"_index":1237,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskhttpservice.updatetask(this.taskstateservice.project.url",{"_index":1339,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskid",{"_index":569,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskidlistener.asobservable",{"_index":1228,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskidlistener.next(id",{"_index":1245,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasks",{"_index":1317,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.pipe(map(tasks",{"_index":1325,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice",{"_index":573,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.getmappedtasks(projecturl).pipe",{"_index":1323,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.gettaskid(id",{"_index":1274,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(null",{"_index":591,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.project",{"_index":571,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.taskchange(null",{"_index":1342,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.taskchange(res.body.task",{"_index":586,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.taskidlistener$.pipe(takeuntil(this.destroy$)).subscribe(id",{"_index":568,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.taskonchange$.pipe",{"_index":1322,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.title.value",{"_index":585,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.todotasks",{"_index":1324,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.togglesidenav.emit",{"_index":1380,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.toggletheme.emit",{"_index":1381,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.token",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":1207,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.uiservice.showsnackbar",{"_index":1182,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.uiservice.showsnackbar('a",{"_index":724,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.uiservice.showsnackbar('logged",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":671,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.uiservice.showsnackbar(res.message",{"_index":1122,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.url}/signup",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(res.token.userid",{"_index":1443,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["throwerror",{"_index":657,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":674,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":479,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"components/ModalComponent.html":{},"components/ProjectsComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["titlecase",{"_index":1065,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["todo",{"_index":800,"title":{},"body":{"interfaces/ITask.html":{},"miscellaneous/enumerations.html":{}}}],["todotasks",{"_index":1290,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggle",{"_index":877,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["togglemodal",{"_index":1292,"title":{},"body":{"components/TasksComponent.html":{}}}],["togglesidenav",{"_index":1368,"title":{},"body":{"components/TopnavComponent.html":{}}}],["toggletheme",{"_index":1369,"title":{},"body":{"components/TopnavComponent.html":{}}}],["token",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["tokentimer",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":693,"title":{},"body":{"components/FooterComponent.html":{}}}],["toolbar.mat",{"_index":1382,"title":{},"body":{"components/TopnavComponent.html":{}}}],["top",{"_index":673,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["topnav",{"_index":1364,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["topnav.component.html",{"_index":1366,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.scss",{"_index":1365,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav/topnav.component",{"_index":916,"title":{},"body":{"modules/NavigationModule.html":{}}}],["topnavcomponent",{"_index":101,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":760,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":898,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":1415,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["transition",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('isleft",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('isright",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":899,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["trigger('routeranimation",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":665,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tslib",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1595,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui.service",{"_index":658,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":287,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["undo",{"_index":1279,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["unit",{"_index":1573,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":550,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["up",{"_index":747,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["update",{"_index":469,"title":{},"body":{"components/CreateProjectComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1423,"title":{},"body":{"injectables/UserService.html":{}}}],["updateproject",{"_index":952,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["updateproject(id",{"_index":962,"title":{},"body":{"injectables/ProjectHttpService.html":{}}}],["updateproject(this.projectid",{"_index":522,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["updatetask",{"_index":1189,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["updatetask(projecturl",{"_index":1199,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["updatetask(this.project.url",{"_index":587,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["upon",{"_index":1028,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["uppercase",{"_index":944,"title":{},"body":{"modules/PipesModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":1068,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksCardListComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":942,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IProject.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["url(/assets/img/home",{"_index":766,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1562,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["user.model",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":1438,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["userresponsetype",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1420,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["val",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":817,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validation",{"_index":1540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":1113,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":485,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.email",{"_index":722,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.maxlength(100",{"_index":497,"title":{},"body":{"components/CreateProjectComponent.html":{}}}],["validators.maxlength(1000",{"_index":567,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.maxlength(20",{"_index":496,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["validators.minlength(2",{"_index":1178,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":495,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{}}}],["validators.minlength(6",{"_index":1112,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":494,"title":{},"body":{"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["value",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectHttpService.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1418,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":1419,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1600,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verfied",{"_index":1450,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verification",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["verify",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["verify/:token",{"_index":647,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["verifyemailcomponent",{"_index":103,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":1548,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1410,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1577,"title":{},"body":{"index.html":{}}}],["view",{"_index":990,"title":{},"body":{"injectables/ProjectStateService.html":{}}}],["view_list",{"_index":1066,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["viewchild",{"_index":1151,"title":{},"body":{"components/SidenavComponent.html":{}}}],["viewchild('drawer",{"_index":1147,"title":{},"body":{"components/SidenavComponent.html":{}}}],["visibility",{"_index":843,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":842,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateProjectComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/ProjectStateService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["want",{"_index":1056,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["way",{"_index":726,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["weight",{"_index":1390,"title":{},"body":{"components/TopnavComponent.html":{}}}],["width",{"_index":731,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProjectsComponent.html":{},"components/SidenavComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["wrap",{"_index":1072,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TasksComponent.html":{}}}],["yes",{"_index":1170,"title":{},"body":{"components/SignupComponent.html":{}}}],["z",{"_index":895,"title":{},"body":{"components/ModalComponent.html":{},"components/TopnavComponent.html":{}}}],["zone.js",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/FooterModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules/PipesModule.html":{},"modules/ProjectsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { RouterOutlet } from '@angular/router';\nimport { routerAnimation } from './animations/router.animation';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routerAnimation]\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Initialize authentication.\n   */\n  ngOnInit() {\n    this.authService.initAuthentication();\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, CoreModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, data: { animation: 'isLeft' } },\n  {\n    path: 'projects',\n    loadChildren: () => \"import('./projects/projects.module').then(m => m.ProjectsModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigateByUrl('/authentication/login');\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:15\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nAuthModule -->\n\nModalModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            ModalModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { ModalModule } from '../components/modal/modal.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, MaterialModule, ModalModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent, data: { animation: 'isRight' } },\n  { path: 'email', loadChildren: () => \"import('./email/email.module').then(m => m.EmailModule)\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getEmailVerificationToken\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                initAuthentication\n                            \n                            \n                                    Private\n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resendVerificationToken\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:129\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:173\n                \n            \n\n\n            \n                \n                    Send reset password link.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:137\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailVerificationToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n                    Get email verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:83\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuth(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:100\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \nresendVerificationToken(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:165\n                \n            \n\n\n            \n                \n                    Resend verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(token: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:180\n                \n            \n\n\n            \n                \n                    Reset account's password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:121\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:112\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(firstName: string, email: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.isAuthenticated)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { IUser } from './user.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\nimport { tap } from 'rxjs/operators';\n\ntype UserResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly URL = environment.apiUrl + '/auth';\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(this.isAuthenticated);\n\n  constructor(private http: HttpClient, private router: Router, private uiService: UIService) {}\n\n  /**\n   * Get token.\n   */\n  getToken(): string {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth(): boolean {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener(): Observable {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  signup(firstName: string, email: string, password: string, confirmPassword: string): Observable {\n    return this.http.post(\n      `${this.URL}/signup`,\n      { firstName, email, password, confirmPassword },\n      { observe: 'response' }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string): Observable> {\n    return this.http\n      .post(`${this.URL}/login`, { email, password }, { observe: 'response' })\n      .pipe(\n        tap(response => {\n          const token = response.body.token;\n          if (token) {\n            const expiresInDuration = response.body.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuth(true);\n            const now = new Date();\n            const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar('Logged in successfully!', null, 3000, 'bottom');\n            this.router.navigateByUrl('/projects');\n          }\n        })\n      );\n  }\n\n  /**\n   * Initialize authentication.\n   */\n  initAuthentication() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuth(true);\n      this.setAuthTimer(expiresIn / 1000);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuth(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar('Logged out successfully!', null, 3000, 'bottom');\n    this.router.navigateByUrl('/');\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData(): { token: string; expirationDate: Date } {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n\n  private isAuth(val: boolean) {\n    this.isAuthenticated = val;\n    this.authStatusListener.next(val);\n  }\n\n  /**\n   * Get email verification token.\n   * @params token -> expires in 30 min from creation.\n   */\n  getEmailVerificationToken(token: string): Observable {\n    return this.http.get(`${this.URL}/verify-email/${token}`);\n  }\n\n  /**\n   * Resend verification token.\n   */\n  resendVerificationToken(email: string): Observable {\n    return this.http.post(`${this.URL}/verify-email/token`, { email });\n  }\n\n  /**\n   * Send reset password link.\n   * @params email -> user's email.\n   */\n  forgotPassword(email: string): Observable {\n    return this.http.post(`${this.URL}/reset-password`, { email });\n  }\n\n  /**\n   * Reset account's password.\n   */\n  resetPassword(token: string, password: string, confirmPassword: string): Observable {\n    return this.http.patch(`${this.URL}/reset-password/${token}`, { password, confirmPassword });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NavigationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { NavigationModule } from './navigation/navigation.module';\n\n@NgModule({\n  declarations: [HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule, NavigationModule],\n  exports: [NavigationModule]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectComponent.html":{"url":"components/CreateProjectComponent.html","title":"component - CreateProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/create-project/create-project.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                modalTitle\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                projectForm\n                            \n                            \n                                    Private\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectHttpService: ProjectHttpService, projectStateService: ProjectStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/create-project/create-project.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectHttpService\n                                                  \n                                                        \n                                                                        ProjectHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStateService\n                                                  \n                                                        \n                                                                        ProjectStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: AbstractControl, placeholder: string, minLength: number, maxlength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:66\n                \n            \n\n\n            \n                \n                    Displays form errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxlength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:98\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/create-project/create-project.component.ts:78\n                \n            \n\n\n            \n                \n                    Create or update project.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalProjectTitle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            projectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/create-project/create-project.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/projects/create-project/create-project.component.ts:52\n                                \n                            \n                    \n                        \n                                Get title form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/projects/create-project/create-project.component.ts:59\n                                \n                            \n                    \n                        \n                                Get descriptipon form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { ProjectHttpService } from '../project-http.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ProjectStateService } from '../project-state.service';\nimport { Mode, ModalProjectTitle } from 'src/app/shared/enums';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.scss']\n})\nexport class CreateProjectComponent implements OnInit {\n  public projectForm: FormGroup;\n  public mode: Mode;\n  public modalTitle: ModalProjectTitle;\n  @Output() close = new EventEmitter();\n  private projectId: string;\n  private destroy$ = new Subject();\n\n  constructor(private projectHttpService: ProjectHttpService, private projectStateService: ProjectStateService) {}\n\n  ngOnInit(): void {\n    this.projectForm = new FormGroup({\n      name: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(20)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.minLength(3), Validators.maxLength(100)]\n      })\n    });\n\n    this.projectStateService.projectIdListener$.pipe(takeUntil(this.destroy$)).subscribe(id => (this.projectId = id));\n\n    if (this.projectId) {\n      this.mode = Mode.Edit;\n      this.modalTitle = ModalProjectTitle.Edit;\n      this.projectStateService\n        .getMappedProject(this.projectId)\n        .subscribe(project => this.projectForm.setValue({ name: project.name, description: project.description }));\n    } else {\n      this.mode = Mode.Create;\n      this.modalTitle = ModalProjectTitle.Create;\n    }\n  }\n\n  /**\n   * Get title form control.\n   */\n  public get name(): AbstractControl {\n    return this.projectForm.get('name');\n  }\n\n  /**\n   * Get descriptipon form control.\n   */\n  public get description(): AbstractControl {\n    return this.projectForm.get('description');\n  }\n\n  /**\n   * Displays form errors.\n   */\n  public displayFormErrors(\n    control: AbstractControl,\n    placeholder: string,\n    minLength: number,\n    maxlength: number\n  ): string {\n    return displayFormErrors(control, placeholder, minLength, maxlength);\n  }\n\n  /**\n   * Create or update project.\n   */\n  public onSave(): void {\n    if (this.mode === 'create') {\n      this.projectHttpService\n        .createProject({ id: null, name: this.name.value, description: this.description.value })\n        .subscribe(res => this.projectStateService.projectChange(res.body.project));\n    } else if (this.mode === 'edit') {\n      this.projectHttpService\n        .updateProject(this.projectId, {\n          name: this.name.value,\n          description: this.description.value\n        })\n        .subscribe(res => this.projectStateService.projectChange(res.body.project));\n    }\n\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  public onClose(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n       {{ displayFormErrors(name, 'Name', 3, 20) }} \n    \n    \n      \n       {{ displayFormErrors(description, 'Description', 3, 100) }} \n    \n    \n      SAVE\n      CANCEL\n    \n  \n\n\n    \n\n    \n                \n                    ./create-project.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{ displayFormErrors(name, \\'Name\\', 3, 20) }}                      {{ displayFormErrors(description, \\'Description\\', 3, 100) }}               SAVE      CANCEL      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/tasks/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                modalTitle\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Private\n                                project\n                            \n                            \n                                    Public\n                                taskForm\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/tasks/create-task/create-task.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: AbstractControl, placeholder: string, minLength: number, maxlength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:77\n                \n            \n\n\n            \n                \n                    Displays form errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxlength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:119\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\nSet task id null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:33\n                \n            \n\n\n            \n                \n                    Initialize task form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:111\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:89\n                \n            \n\n\n            \n                \n                    Create or edit task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalTaskTitle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            taskForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:63\n                                \n                            \n                    \n                        \n                                Get title form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/projects/tasks/create-task/create-task.component.ts:70\n                                \n                            \n                    \n                        \n                                Get descriptipon form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\nimport { IProject } from '../../project.model';\nimport { Mode, ModalTaskTitle } from 'src/app/shared/enums';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n  public taskForm: FormGroup;\n  public mode: Mode;\n  public modalTitle: ModalTaskTitle;\n  @Output() close = new EventEmitter();\n  private taskId: string;\n  private project: IProject;\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  /**\n   * Initialize task form.\n   */\n  ngOnInit(): void {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(20)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(1000)]\n      })\n    });\n\n    this.taskStateService.taskIdListener$.pipe(takeUntil(this.destroy$)).subscribe(id => (this.taskId = id));\n\n    this.project = this.taskStateService.project;\n\n    if (this.taskId) {\n      this.mode = Mode.Edit;\n      this.modalTitle = ModalTaskTitle.Edit;\n\n      this.taskStateService\n        .getMappedTask(this.project.url, this.taskId)\n        .subscribe(task => this.taskForm.setValue({ title: task.title, description: task.description }));\n    } else {\n      this.mode = Mode.Create;\n      this.modalTitle = ModalTaskTitle.Create;\n    }\n  }\n\n  /**\n   * Get title form control.\n   */\n  public get title(): AbstractControl {\n    return this.taskForm.get('title');\n  }\n\n  /**\n   * Get descriptipon form control.\n   */\n  public get description(): AbstractControl {\n    return this.taskForm.get('description');\n  }\n\n  /**\n   * Displays form errors.\n   */\n  public displayFormErrors(\n    control: AbstractControl,\n    placeholder: string,\n    minLength: number,\n    maxlength: number\n  ): string {\n    return displayFormErrors(control, placeholder, minLength, maxlength);\n  }\n\n  /**\n   * Create or edit task.\n   */\n  public onSave(): void {\n    if (this.mode === 'create') {\n      this.taskHttpService\n        .createTask(this.project.url, (this.project as any)._id, {\n          id: null,\n          title: this.title.value,\n          description: this.description.value\n        })\n        .subscribe(res => this.taskStateService.taskChange(res.body.task));\n    } else if (this.mode === 'edit') {\n      this.taskHttpService\n        .updateTask(this.project.url, this.taskId, { title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.taskChange(res.body.task));\n    }\n\n    this.taskForm.reset();\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  public onClose(): void {\n    this.close.emit();\n  }\n\n  /**\n   * Unsubscribe from observables.\n   * Set task id null.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.taskStateService.getTaskId(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n       {{ displayFormErrors(title, 'Name', 3, 20) }} \n    \n    \n      \n       {{ displayFormErrors(description, 'Name', 3, 1000) }} \n    \n    \n      SAVE\n      CANCEL\n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{ displayFormErrors(title, \\'Name\\', 3, 20) }}                      {{ displayFormErrors(description, \\'Name\\', 3, 1000) }}               SAVE      CANCEL      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialog/dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dialog/dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.content }}\n\n  \n    Confirm\n  \n  \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .mat-raised-button:not(:last-child) {\n    margin-right: 30px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.content }}      Confirm        Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dialog/dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogModule.html":{"url":"modules/DialogModule.html","title":"module - DialogModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_imports\n\n\n\ncluster_DialogModule_exports\n\n\n\n\nDialogComponent\n\nDialogComponent\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dialog/dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog.component';\nimport { MaterialModule } from 'src/app/material.module';\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [DialogComponent],\n  entryComponents: [DialogComponent]\n})\nexport class DialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nResetPasswordComponent->EmailModule\n\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            VerifyEmailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { EmailRoutingModule } from './email-routing.module';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  declarations: [VerifyEmailComponent, ResetPasswordComponent],\n  imports: [CommonModule, EmailRoutingModule, ReactiveFormsModule, MaterialModule]\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailRoutingModule.html":{"url":"modules/EmailRoutingModule.html","title":"module - EmailRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: 'verify/:token', component: VerifyEmailComponent },\n  { path: 'reset-password/:token', component: ResetPasswordComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:17\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                interval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/footer/footer.component.ts:14\n                \n            \n\n\n            \n                \n                    Display interval.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  interval: string;\n\n  /**\n   * Display interval.\n   */\n  ngOnInit() {\n    const birthYear = 2019;\n    const currentYear = new Date().getFullYear();\n\n    this.interval = `${birthYear} - ${currentYear}`;\n  }\n}\n\n    \n\n    \n        \n  \n    Created by @ionut-t, &copy;\n    {{ interval }}\n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                :host {\n  position: relative;\n}\n\n.mat-toolbar {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.footer__link {\n  color: currentColor;\n  text-decoration: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Created by @ionut-t, ©    {{ interval }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FooterModule.html":{"url":"modules/FooterModule.html","title":"module - FooterModule","body":"\n                   \n\n\n\n\n    Modules\n    FooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_imports\n\n\n\ncluster_FooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nFooterModule -->\n\nMaterialModule->FooterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/footer/footer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './footer.component';\nimport { MaterialModule } from 'src/app/material.module';\n\n@NgModule({\n  declarations: [FooterComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [FooterComponent]\n})\nexport class FooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClose\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password/forgot-password.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: FormControl, placeholder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:25\n                \n            \n\n\n            \n                \n                    Displays control errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:42\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:32\n                \n            \n\n\n            \n                \n                    Send reset password email.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public email: FormControl;\n  @Output() close = new EventEmitter();\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  ngOnInit(): void {\n    this.email = new FormControl(null, [Validators.required, Validators.email]);\n  }\n\n  /**\n   * Displays control errors.\n   */\n  public displayFormErrors(control: FormControl, placeholder: string): string {\n    return displayFormErrors(control, placeholder);\n  }\n\n  /**\n   * Send reset password email.\n   */\n  public onSubmit(): void {\n    this.authService.forgotPassword(this.email.value).subscribe(() => {\n      this.uiService.showSnackBar('A link for resetting your password is in its way to your inbox.', null, 5000, 'top');\n      this.onClose();\n    });\n  }\n\n  /**\n   * Close modal.\n   */\n  public onClose(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ displayFormErrors(email, 'Email') }}\n    \n  \n  \n    Submit\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .mat-form-field {\n  width: 90%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ displayFormErrors(email, \\'Email\\') }}            Submit    Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:36\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:29\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => (this.isAuth = isAuth));\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigateByUrl('/authentication/signup');\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        devDo helps you to keep track of your project progress and never miss a deadline.\n      \n      \n        Sign Up!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home {\n  background: url(/assets/img/home-image.jpg) no-repeat center center/cover;\n  height: calc(100% - 64px);\n  position: fixed;\n  width: 100%;\n\n  @media only screen and (max-width: 599px) {\n    height: calc(100% - 56px);\n  }\n\n  .overlay {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n\n    .home__cta {\n      color: #fff;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin: auto;\n      width: 30%;\n      min-width: 250px;\n      height: 100%;\n\n      p {\n        line-height: 1.6;\n        font-size: 1.2rem;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    devDo helps you to keep track of your project progress and never miss a deadline.                    Sign Up!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProject.html":{"url":"interfaces/IProject.html","title":"interface - IProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/project.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProject {\n  id: string;\n  name: string;\n  description: string;\n  creator?: string;\n  createdAt?: Date;\n  url?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/tasks/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"todo\" | \"doing\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"todo\" | \"doing\" | \"done\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITask {\n  id: string;\n  title: string;\n  description: string;\n  status?: 'todo' | 'doing' | 'done';\n  creator?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        isVerified\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVerified\n                                    \n                                \n                                \n                                    \n                                        isVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  id: string;\n  firstName: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  isVerified: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hidePassword\n                            \n                            \n                                    Public\n                                isForgotPassword\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onForgotPassword\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: AbstractControl, placeholder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:43\n                \n            \n\n\n            \n                \n                    Displays form errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:24\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onForgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:62\n                \n            \n\n\n            \n                \n                    Opens forgot-password modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:50\n                \n            \n\n\n            \n                \n                    Logs in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isForgotPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:36\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public hidePassword = true;\n  public isForgotPassword = false;\n  public isLoading = false;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  public get formCtrls(): { [key: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * Displays form errors.\n   */\n  public displayFormErrors(control: AbstractControl, placeholder: string): string {\n    return displayFormErrors(control, placeholder);\n  }\n\n  /**\n   * Logs in user.\n   */\n  public onSubmit(): void {\n    this.isLoading = true;\n\n    this.authService\n      .login(this.formCtrls.email.value, this.formCtrls.password.value)\n      .pipe(finalize(() => (this.isLoading = false)))\n      .subscribe();\n  }\n\n  /**\n   * Opens forgot-password modal.\n   */\n  public onForgotPassword(): void {\n    this.isForgotPassword = true;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n      {{ displayFormErrors(formCtrls.email, 'Email') }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ displayFormErrors(formCtrls.password, 'Password') }}\n    \n  \n  Log In\n  Forgot Password?\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ displayFormErrors(formCtrls.email, \\'Email\\') }}                      {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}              {{ displayFormErrors(formCtrls.password, \\'Password\\') }}        Log In  Forgot Password?'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatDialogModule,\n    MatMenuModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal/modal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modal/modal.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modal/modal.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modal/modal.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modal/modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modal/modal.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n  @Input() title: string;\n  @Output() close = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n\n  {{ title }}\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./modal.component.scss\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n/* Modal styles. */\n.modal.mat-card {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  text-align: center;\n  z-index: 200;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_imports\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nModalModule -->\n\nMaterialModule->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/modal/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { ModalComponent } from './modal.component';\n\n@NgModule({\n  declarations: [ModalComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [ModalComponent]\n})\nexport class ModalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_imports\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nNavigationModule -->\n\nFooterModule->NavigationModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                        \n                            TopnavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            FooterModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { TopnavComponent } from './topnav/topnav.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { FooterModule } from 'src/app/components/footer/footer.module';\n\n@NgModule({\n  declarations: [TopnavComponent, SidenavComponent],\n  imports: [CommonModule, MaterialModule, AppRoutingModule, FooterModule],\n  exports: [SidenavComponent]\n})\nexport class NavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or has been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100vh - 64px - 64px);\n\n  @media only screen and (max-width: 599px) {\n    height: calc(100vh - 56px - 56px);\n  }\n\n  .container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    .heading {\n      font-size: 450%;\n    }\n\n    .mat-button {\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or has been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nUppercaseFirstLetterPipe->PipesModule\n\n\n\n\n\nUppercaseFirstLetterPipe \n\nUppercaseFirstLetterPipe \n\nUppercaseFirstLetterPipe  -->\n\nPipesModule->UppercaseFirstLetterPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\n\n@NgModule({\n  declarations: [UppercaseFirstLetterPipe],\n  exports: [UppercaseFirstLetterPipe]\n})\nexport class PipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectHttpService.html":{"url":"injectables/ProjectHttpService.html","title":"injectable - ProjectHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/project-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createProject\n                            \n                            \n                                    Public\n                                deleteProject\n                            \n                            \n                                    Public\n                                getProject\n                            \n                            \n                                    Public\n                                getProjects\n                            \n                            \n                                    Public\n                                updateProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-http.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProject(project: IProject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-http.service.ts:21\n                \n            \n\n\n            \n                \n                    Create project.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                IProject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-http.service.ts:56\n                \n            \n\n\n            \n                \n                    Delete project.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-http.service.ts:37\n                \n            \n\n\n            \n                \n                    Get project by id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-http.service.ts:28\n                \n            \n\n\n            \n                \n                    Get all projects.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProject(id: string, project: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-http.service.ts:47\n                \n            \n\n\n            \n                \n                    Update project.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                                \n                                    project\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial project.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/projects'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-http.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { IProject } from './project.model';\nimport { Observable } from 'rxjs';\n\ntype ProjectResponseType = HttpResponse;\ntype ProjectArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectHttpService {\n  private readonly URL = environment.apiUrl + '/projects';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Create project.\n   */\n  public createProject(project: IProject): Observable {\n    return this.http.post(this.URL, project, { observe: 'response' });\n  }\n\n  /**\n   * Get all projects.\n   */\n  public getProjects(): Observable {\n    return this.http.get(this.URL, { observe: 'response' });\n  }\n\n  /**\n   * Get project by id.\n   * @param id -> project id.\n   * @returns observable.\n   */\n  public getProject(id: string): Observable {\n    return this.http.get(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Update project.\n   * @param id -> project id.\n   * @param project -> Partial project.\n   * @returns observable.\n   */\n  public updateProject(id: string, project: Partial): Observable {\n    return this.http.put(`${this.URL}/${id}`, project, { observe: 'response' });\n  }\n\n  /**\n   * Delete project.\n   * @param id -> project id.\n   * @returns observable.\n   */\n  public deleteProject(id: string): Observable> {\n    return this.http.delete(`${this.URL}/${id}`, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStateService.html":{"url":"injectables/ProjectStateService.html","title":"injectable - ProjectStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/project-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                projectChanged\n                            \n                            \n                                    Private\n                                projectIdListener\n                            \n                            \n                                    Public\n                                projectIdListener$\n                            \n                            \n                                    Public\n                                projectOnChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMappedProject\n                            \n                            \n                                    Public\n                                getMappedProjects\n                            \n                            \n                                    Public\n                                getProjectId\n                            \n                            \n                                    Public\n                                projectChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectHttpService: ProjectHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/project-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectHttpService\n                                                  \n                                                        \n                                                                        ProjectHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMappedProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappedProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-state.service.ts:23\n                \n            \n\n\n            \n                \n                    Get mapped project by id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMappedProjects\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappedProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-state.service.ts:38\n                \n            \n\n\n            \n                \n                    Get mapped project by id.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjectId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-state.service.ts:55\n                \n            \n\n\n            \n                \n                    Get project id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            projectChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    projectChange(project: IProject | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/project-state.service.ts:63\n                \n            \n\n\n            \n                \n                    Update projects view.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                IProject | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> IProject or null.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            projectChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-state.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            projectIdListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-state.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectIdListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.projectIdListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-state.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projectOnChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.projectChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/project-state.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ProjectHttpService } from './project-http.service';\nimport { map } from 'rxjs/operators';\nimport { IProject } from './project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStateService {\n  private projectChanged = new BehaviorSubject(null);\n  public projectOnChange$ = this.projectChanged.asObservable();\n  private projectIdListener = new BehaviorSubject(null);\n  public projectIdListener$ = this.projectIdListener.asObservable();\n\n  constructor(private projectHttpService: ProjectHttpService) {}\n\n  /**\n   * Get mapped project by id.\n   * @param id -> project id.\n   * @returns observable.\n   */\n  public getMappedProject(id: string): Observable {\n    return this.projectHttpService.getProject(id).pipe(\n      map((res: any) => ({\n        id: res.body.project._id,\n        name: res.body.project.name,\n        description: res.body.project.description\n      }))\n    );\n  }\n\n  /**\n   * Get mapped project by id.\n   * @param id -> project id.\n   * @returns observable.\n   */\n  public getMappedProjects(): Observable {\n    return this.projectHttpService.getProjects().pipe(\n      map(res =>\n        res.body.projects.map((project: any) => ({\n          id: project._id,\n          name: project.name,\n          description: project.description,\n          url: project.url\n        }))\n      )\n    );\n  }\n\n  /**\n   * Get project id.\n   * @param id -> project id.\n   */\n  public getProjectId(id: string) {\n    this.projectIdListener.next(id);\n  }\n\n  /**\n   * Update projects view.\n   * @param project -> IProject or null.\n   */\n  public projectChange(project: IProject | null) {\n    this.projectChanged.next(project);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/projects.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                styleUrls\n                ./projects.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deletedId\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                projects\n                            \n                            \n                                    Public\n                                projects$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                deleteProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onEdit\n                            \n                            \n                                    Public\n                                onViewProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectHttpService: ProjectHttpService, projectStateService: ProjectStateService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/projects.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectHttpService\n                                                  \n                                                        \n                                                                        ProjectHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStateService\n                                                  \n                                                        \n                                                                        ProjectStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:89\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:82\n                \n            \n\n\n            \n                \n                    Delete project method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:97\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(name: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:60\n                \n            \n\n\n            \n                \n                    Delete project upon confirmation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project name.\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> project id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onEdit(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:50\n                \n            \n\n\n            \n                \n                    Retrieve project id and open modal.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onViewProject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewProject(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/projects.component.ts:43\n                \n            \n\n\n            \n                \n                    Navigate to project page.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> slugified name from API.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            projects$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/projects.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ProjectHttpService } from './project-http.service';\nimport { Observable, Subject } from 'rxjs';\nimport { IProject } from './project.model';\nimport { takeUntil, switchMap, finalize } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { ProjectStateService } from './project-state.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../components/dialog/dialog.component';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  public projects$: Observable;\n  public isLoading: boolean;\n  private destroy$ = new Subject();\n\n  projects: IProject[] = [];\n  deletedId: string;\n\n  constructor(\n    private projectHttpService: ProjectHttpService,\n    private projectStateService: ProjectStateService,\n    private router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.projects$ = this.projectStateService.projectOnChange$.pipe(\n      switchMap(() => this.projectStateService.getMappedProjects().pipe(finalize(() => (this.isLoading = false))))\n    );\n  }\n\n  /**\n   * Navigate to project page.\n   * @param url -> slugified name from API.\n   */\n  public onViewProject(url: string): void {\n    this.router.navigateByUrl(`projects/${url}`);\n  }\n\n  /**\n   * Retrieve project id and open modal.\n   */\n  public onEdit(id: string): void {\n    this.isOpen = true;\n    this.projectStateService.getProjectId(id);\n  }\n\n  /**\n   * Delete project upon confirmation.\n   * @param id -> project id.\n   * @param name -> project name.\n   */\n  public onDelete(name: string, id: string): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      data: {\n        title: `Delete Project \"${name.toUpperCase()}\"`,\n        content: 'Are you sure you want to delete this project?'\n      }\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        if (result) {\n          this.deleteProject(id);\n        }\n      });\n  }\n\n  /**\n   * Delete project method.\n   * @param id -> project id.\n   */\n  public deleteProject(id: string): void {\n    this.projectHttpService.deleteProject(id).subscribe(() => this.projectStateService.projectChange(null));\n  }\n\n  /**\n   * Close modal.\n   */\n  public closeModal(): void {\n    this.isOpen = false;\n    this.projectStateService.getProjectId(null);\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    add\n  \n\n\n\n   0; else info\">\n    \n      \n        {{ project.name | titlecase }}\n        \n          view_list\n        \n        \n          more_vert\n        \n        \n          \n            edit\n            Edit\n          \n          \n            delete\n            Delete\n          \n        \n      \n      {{ project.description | uppercaseFirstLetter }}\n    \n  \n\n\n\n\n\n  \n    You don't have any projects yet.\n  \n\n\n    \n\n    \n                \n                    ./projects.component.scss\n                \n                :host {\n  min-height: calc(100% - 64px - 64px);\n\n  .action {\n    margin: 20px;\n    text-align: end;\n  }\n\n  .container {\n    width: 90%;\n    margin: auto;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  .mat-card {\n    min-width: 200px;\n    margin: 20px;\n\n    .mat-card-content {\n      margin-top: 10px;\n    }\n\n    .mat-card-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n  }\n\n  .info {\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add     0; else info\">                  {{ project.name | titlecase }}                  view_list                          more_vert                                      edit            Edit                                delete            Delete                              {{ project.description | uppercaseFirstLetter }}            You don\\'t have any projects yet.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_declarations\n\n\n\ncluster_ProjectsModule_imports\n\n\n\n\nCreateProjectComponent\n\nCreateProjectComponent\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nCreateProjectComponent->ProjectsModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nProjectsModule -->\n\nProjectsComponent->ProjectsModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nProjectsModule -->\n\nDialogModule->ProjectsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nProjectsModule -->\n\nMaterialModule->ProjectsModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nProjectsModule -->\n\nModalModule->ProjectsModule\n\n\n\n\n\nProjectsRoutingModule\n\nProjectsRoutingModule\n\nProjectsModule -->\n\nProjectsRoutingModule->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/projects/projects.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateProjectComponent\n                        \n                        \n                            ProjectsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DialogModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            ModalModule\n                        \n                        \n                            ProjectsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { DialogModule } from '../components/dialog/dialog.module';\nimport { ModalModule } from '../components/modal/modal.module';\n\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { ProjectsComponent } from './projects.component';\nimport { CreateProjectComponent } from './create-project/create-project.component';\nimport { PipesModule } from '../pipes/pipes.module';\n\n@NgModule({\n  declarations: [ProjectsComponent, CreateProjectComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProjectsRoutingModule,\n    MaterialModule,\n    DialogModule,\n    ModalModule,\n    PipesModule\n  ]\n})\nexport class ProjectsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsRoutingModule.html":{"url":"modules/ProjectsRoutingModule.html","title":"module - ProjectsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/projects/projects-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n  { path: '', component: ProjectsComponent },\n  { path: ':projectUrl', loadChildren: () => \"import('./tasks/tasks.module').then(m => m.TasksModule)\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/email/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, authService: AuthService, uiService: UIService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/email/reset-password/reset-password.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: FormControl, placeholder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:50\n                \n            \n\n\n            \n                \n                    Displays control errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:57\n                \n            \n\n\n            \n                \n                    Reset password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:43\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MustMatch } from '../../signup/must-match.validator';\nimport { AuthService } from '../../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private uiService: UIService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.resetForm = this.fb.group(\n      {\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.resetForm.controls;\n  }\n\n  /**\n   * Displays control errors.\n   */\n  public displayFormErrors(control: FormControl, placeholder: string): string {\n    return displayFormErrors(control, placeholder);\n  }\n\n  /**\n   * Reset password.\n   */\n  onSubmit() {\n    this.route.paramMap\n      .pipe(\n        map(param => param.get('token')),\n        switchMap(token =>\n          this.authService.resetPassword(token, this.formCtrls.password.value, this.formCtrls.confirmPassword.value)\n        )\n      )\n      .subscribe(res => {\n        this.uiService.showSnackBar(res.message, null, 5000, 'top');\n        this.router.navigateByUrl('authentication/login');\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ formCtrls.password.value?.length || 0 }}/6\n    {{ displayFormErrors(formCtrls.password, 'Password') }}\n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ displayFormErrors(formCtrls.confirmPassword, 'Confirm password') }}\n    \n  \n  Submit\n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ formCtrls.password.value?.length || 0 }}/6    {{ displayFormErrors(formCtrls.password, \\'Password\\') }}                  {{ hideConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}              {{ displayFormErrors(formCtrls.confirmPassword, \\'Confirm password\\') }}        Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drawer\n                            \n                            \n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:25\n                \n            \n\n\n            \n                \n                    Observe breakpoints.\nCheck if user is logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:44\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:37\n                \n            \n\n\n            \n                \n                    Toggle theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  isDarkTheme = false;\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @ViewChild('drawer') drawer: MatSidenav;\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Observe breakpoints.\n   * Check if user is logged in.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle theme.\n   */\n  onToggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Projects\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      Log Out\n    \n  \n  \n    \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n\n  .sidenav {\n    width: 200px;\n  }\n\n  .mat-sidenav-content {\n    display: flex;\n    flex-direction: column;\n\n    .content {\n      flex: 1 1 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Projects                    Sign Up                    Log In            Log Out                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hideConfirmPassword\n                            \n                            \n                                    Public\n                                hidePassword\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, uiService: UIService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: AbstractControl, placeholder: string, minLength?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:55\n                \n            \n\n\n            \n                \n                    Displays form errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    minLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:31\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:62\n                \n            \n\n\n            \n                \n                    Signup user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:48\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { Router } from '@angular/router';\nimport { finalize, min } from 'rxjs/operators';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  public signupForm: FormGroup;\n  public hidePassword = true;\n  public hideConfirmPassword = true;\n  public isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private uiService: UIService,\n    private router: Router\n  ) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit(): void {\n    this.signupForm = this.fb.group(\n      {\n        firstName: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  public get formCtrls(): { [key: string]: AbstractControl } {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Displays form errors.\n   */\n  public displayFormErrors(control: AbstractControl, placeholder: string, minLength?: number): string {\n    return displayFormErrors(control, placeholder, minLength);\n  }\n\n  /**\n   * Signup user.\n   */\n  public onSubmit(): void {\n    this.isLoading = true;\n    this.authService\n      .signup(\n        this.formCtrls.firstName.value,\n        this.formCtrls.email.value,\n        this.formCtrls.password.value,\n        this.formCtrls.confirmPassword.value\n      )\n      .pipe(finalize(() => (this.isLoading = false)))\n      .subscribe(() => {\n        this.uiService.showSnackBar(\n          'A confirmation email is on its way to your inbox. Please confirm your email before login',\n          null,\n          5000,\n          'top'\n        );\n        this.router.navigateByUrl('authentication/login');\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      {{ displayFormErrors(formCtrls.firstName, 'First name') }}\n    \n  \n\n  \n    \n    {{ displayFormErrors(formCtrls.email, 'Email') }}\n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ formCtrls.password.value?.length || 0 }}/6\n    {{ displayFormErrors(formCtrls.password, 'Password', 6) }}\n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ displayFormErrors(formCtrls.confirmPassword, 'Confirm password') }}\n    \n  \n  Sign Up\n\n\n    \n\n    \n                \n                    ./signup.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ displayFormErrors(formCtrls.firstName, \\'First name\\') }}                {{ displayFormErrors(formCtrls.email, \\'Email\\') }}                  {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ formCtrls.password.value?.length || 0 }}/6    {{ displayFormErrors(formCtrls.password, \\'Password\\', 6) }}                  {{ hideConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}              {{ displayFormErrors(formCtrls.confirmPassword, \\'Confirm password\\') }}        Sign Up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskHttpService.html":{"url":"injectables/TaskHttpService.html","title":"injectable - TaskHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/tasks/task-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createTask\n                            \n                            \n                                    Public\n                                deleteTask\n                            \n                            \n                                    Public\n                                getTask\n                            \n                            \n                                    Public\n                                getTasks\n                            \n                            \n                                    Public\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/tasks/task-http.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(projectUrl: string, projectId: string, task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-http.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(projectUrl: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-http.service.ts:60\n                \n            \n\n\n            \n                \n                    Delete task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTask(projectUrl: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-http.service.ts:69\n                \n            \n\n\n            \n                \n                    Get a single task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTasks(projectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-http.service.ts:37\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTask(projectUrl: string, id: string, task: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-http.service.ts:51\n                \n            \n\n\n            \n                \n                    Update task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/projects'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-http.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\nimport { ITask } from './task.model';\nimport { Observable } from 'rxjs';\nimport { UIService } from '../../shared/ui.service';\nimport { environment } from '../../../environments/environment';\nimport { IProject } from '../project.model';\n\ntype TaskResponseType = HttpResponse;\ntype TaskArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskHttpService {\n  private readonly URL = environment.apiUrl + '/projects';\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Create a new task.\n   * @param task -> created task\n   * @returns observable.\n   */\n  public createTask(projectUrl: string, projectId: string, task: ITask): Observable {\n    return this.http.post(`${this.URL}/${projectUrl}/tasks`, task, {\n      observe: 'response',\n      params: new HttpParams().set('projectId', projectId)\n    });\n  }\n\n  /**\n   * Create a new task.\n   * @param task -> created task.\n   * @returns observable.\n   */\n  public getTasks(projectUrl: string): Observable {\n    this.uiService.loadingStateChanged.next(true);\n\n    return this.http.get(`${this.URL}/${projectUrl}/tasks`, {\n      observe: 'response'\n    });\n  }\n\n  /**\n   * Update task.\n   * @param id -> task id.\n   * @param task -> Partial task.\n   * @returns observable.\n   */\n  public updateTask(projectUrl: string, id: string, task: Partial): Observable {\n    return this.http.put(`${this.URL}/${projectUrl}/tasks/${id}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Delete task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  public deleteTask(projectUrl: string, id: string): Observable> {\n    return this.http.delete(`${this.URL}/${projectUrl}/tasks/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Get a single task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  public getTask(projectUrl: string, id: string): Observable {\n    return this.http.get(`${this.URL}/${projectUrl}/tasks/${id}`, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskStateService.html":{"url":"injectables/TaskStateService.html","title":"injectable - TaskStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/projects/tasks/task-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Private\n                                taskChanged\n                            \n                            \n                                    Private\n                                taskIdListener\n                            \n                            \n                                    Public\n                                taskIdListener$\n                            \n                            \n                                    Public\n                                taskOnChange$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMappedTask\n                            \n                            \n                                    Public\n                                getMappedTasks\n                            \n                            \n                                    Public\n                                getTaskId\n                            \n                            \n                                    Public\n                                taskChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/tasks/task-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMappedTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappedTask(projectUrl: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-state.service.ts:25\n                \n            \n\n\n            \n                \n                    Map task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMappedTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappedTasks(projectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-state.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTaskId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-state.service.ts:65\n                \n            \n\n\n            \n                \n                    Get task id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            taskChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    taskChange(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/task-state.service.ts:57\n                \n            \n\n\n            \n                \n                    Update tasks list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-state.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-state.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskIdListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-state.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            taskIdListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskIdListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-state.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            taskOnChange$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskChanged.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/task-state.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { ITask } from './task.model';\nimport { IProject } from '../project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStateService {\n  private taskChanged = new BehaviorSubject(null);\n  public taskOnChange$ = this.taskChanged.asObservable();\n  private taskIdListener = new BehaviorSubject(null);\n  public taskIdListener$ = this.taskIdListener.asObservable();\n  public project: IProject;\n\n  constructor(private taskHttpService: TaskHttpService) {}\n\n  /**\n   * Map task.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  public getMappedTask(projectUrl: string, id: string): Observable {\n    return this.taskHttpService.getTask(projectUrl, id).pipe(\n      map((res: any) => {\n        return {\n          id: res.body._id,\n          title: res.body.title,\n          description: res.body.description,\n          status: res.body.status\n        };\n      })\n    );\n  }\n\n  public getMappedTasks(projectUrl: string): Observable {\n    return this.taskHttpService.getTasks(projectUrl).pipe(\n      tap(res => (this.project = res.body.project)),\n      map(res =>\n        res.body.tasks.map((task: any) => ({\n          id: task._id,\n          title: task.title,\n          description: task.description,\n          status: task.status,\n          creator: task.creator\n        }))\n      )\n    );\n  }\n\n  /**\n   * Update tasks list.\n   * @param task -> created task.\n   */\n  public taskChange(task: ITask): void {\n    this.taskChanged.next(task);\n  }\n\n  /**\n   * Get task id.\n   * @param id -> task id.\n   */\n  public getTaskId(id: string): void {\n    this.taskIdListener.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksCardListComponent.html":{"url":"components/TasksCardListComponent.html","title":"component - TasksCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-card-list\n            \n\n            \n                styleUrls\n                ./tasks-card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onBackward\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onEdit\n                            \n                            \n                                    Public\n                                onForward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backTooltip\n                            \n                            \n                                forwardTooltip\n                            \n                            \n                                isLoading\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                backward\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                forward\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forwardTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         ITask[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        backward\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forward\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onEdit(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ITask } from '../task.model';\nimport { TaskStateService } from '../task-state.service';\n\n@Component({\n  selector: 'app-tasks-card-list',\n  templateUrl: './tasks-card-list.component.html',\n  styleUrls: ['./tasks-card-list.component.scss']\n})\nexport class TasksCardListComponent {\n  @Input() tasks: ITask[];\n  @Input() title: string;\n  @Input() forwardTooltip: string;\n  @Input() backTooltip: string;\n  @Input() isLoading: boolean;\n  @Output() edit = new EventEmitter();\n  @Output() forward = new EventEmitter();\n  @Output() backward = new EventEmitter();\n  @Output() delete = new EventEmitter();\n\n  constructor(private taskStateService: TaskStateService) {}\n\n  public onEdit(id: string): void {\n    this.taskStateService.getTaskId(id);\n    this.edit.emit();\n  }\n\n  public onForward(id: string): void {\n    this.forward.emit(id);\n  }\n\n  public onBackward(id: string): void {\n    this.backward.emit(id);\n  }\n\n  public onDelete(id: string): void {\n    this.delete.emit(id);\n  }\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    \n      {{ task.title | uppercaseFirstLetter }}\n    \n\n    \n      {{ task.description | uppercaseFirstLetter }}\n    \n\n    \n      \n        undo\n      \n      \n        done\n        done_all\n      \n\n      \n        edit\n      \n\n      \n        delete\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tasks-card-list.component.scss\n                \n                .mat-expansion-panel:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.mat-h1 {\n  @media only screen and (max-width: 1003px) {\n    margin-top: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}            {{ task.title | uppercaseFirstLetter }}              {{ task.description | uppercaseFirstLetter }}                      undo                    done        done_all                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks List Component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backward\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                doingTasks$\n                            \n                            \n                                    Public\n                                doneTasks$\n                            \n                            \n                                    Private\n                                forward\n                            \n                            \n                                    Public\n                                isLoading\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                tasks$\n                            \n                            \n                                    Public\n                                todoTasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deleteTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onBackward\n                            \n                            \n                                    Private\n                                onChangeStatus\n                            \n                            \n                                    Public\n                                onDelete\n                            \n                            \n                                    Public\n                                onForward\n                            \n                            \n                                    Public\n                                toggleModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService, route: ActivatedRoute, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects/tasks/tasks.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:128\n                \n            \n\n\n            \n                \n                    Delete task method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:144\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:77\n                \n            \n\n\n            \n                \n                    Change status on backward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onChangeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeStatus(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:87\n                \n            \n\n\n            \n                \n                    Change status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:109\n                \n            \n\n\n            \n                \n                    Delete task upon confirmation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:67\n                \n            \n\n\n            \n                \n                    Change status on forward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/projects/tasks/tasks.component.ts:137\n                \n            \n\n\n            \n                \n                    Open/close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            backward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doingTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doneTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IProject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            todoTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects/tasks/tasks.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil, map, switchMap, finalize, share, tap } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { TaskStateService } from './task-state.service';\nimport { ITask } from './task.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { IProject } from '../project.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\nimport { Status } from 'src/app/shared/enums';\n\n/**\n * Tasks List Component.\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n  public isOpen = false;\n  public isLoading = false;\n  public project: IProject;\n  public tasks$: Observable;\n  public todoTasks$: Observable;\n  public doingTasks$: Observable;\n  public doneTasks$: Observable;\n  private forward = false;\n  private backward = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    private taskHttpService: TaskHttpService,\n    private taskStateService: TaskStateService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.isLoading = true;\n\n    this.tasks$ = this.route.paramMap.pipe(\n      map(paramMap => paramMap.get('projectUrl')),\n      switchMap(projectUrl =>\n        this.taskStateService.taskOnChange$.pipe(\n          switchMap(() =>\n            this.taskStateService.getMappedTasks(projectUrl).pipe(\n              finalize(() => (this.isLoading = false)),\n              tap(() => (this.project = this.taskStateService.project))\n            )\n          )\n        )\n      ),\n      share()\n    );\n\n    this.todoTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status === Status.Todo)));\n    this.doingTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status === Status.Doing)));\n    this.doneTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status === Status.Done)));\n  }\n\n  /**\n   * Change status on forward.\n   * @param id -> task id.\n   */\n  public onForward(id: string): void {\n    this.backward = false;\n    this.forward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status on backward.\n   * @param id -> task id.\n   */\n  public onBackward(id: string): void {\n    this.forward = false;\n    this.backward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status.\n   * @param id -> task id.\n   */\n  private onChangeStatus(id: string): void {\n    this.taskStateService\n      .getMappedTask(this.taskStateService.project.url, id)\n      .pipe(\n        switchMap(task => {\n          let status: Status;\n          if (this.forward) {\n            status = task.status.includes(Status.Todo) ? Status.Doing : Status.Done;\n          }\n          if (this.backward) {\n            status = task.status.includes(Status.Done) ? Status.Doing : Status.Todo;\n          }\n          return this.taskHttpService.updateTask(this.taskStateService.project.url, id, { ...task, status });\n        })\n      )\n      .subscribe(res => this.taskStateService.taskChange(res.body.task));\n  }\n\n  /**\n   * Delete task upon confirmation.\n   * @param id -> task id.\n   */\n  public onDelete(id: string): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      data: { title: 'Delete Task', content: 'Are you sure you want to delete this task?' }\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        if (result) {\n          this.deleteTask(id);\n        }\n      });\n  }\n\n  /**\n   * Delete task method.\n   * @param id -> task id.\n   */\n  private deleteTask(id: string): void {\n    this.taskHttpService\n      .deleteTask(this.taskStateService.project.url, id)\n      .subscribe(() => this.taskStateService.taskChange(null));\n  }\n\n  /**\n   * Open/close modal.\n   */\n  public toggleModal(): void {\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n  Project: {{ project?.name | titlecase }}\n  \n    add\n  \n\n\n  \n    \n      \n      \n    \n  \n\n  \n\n  \n    \n      \n      \n    \n  \n\n  \n\n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.scss\n                \n                .tasks-container {\n  display: flex;\n  width: 90%;\n  min-height: calc(100vh - 250px);\n  margin: 0 auto 20px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n\n  .list {\n    width: 300px;\n  }\n}\n\n.header {\n  display: flex;\n  margin: 20px;\n  align-items: center;\n  justify-content: space-between;\n\n  .mat-mini-fab {\n    margin-left: auto;\n  }\n\n  .project-name {\n    margin: 0 50px;\n  }\n\n  .spacer {\n    flex: 1 1 0;\n  }\n}\n\n@media only screen and (max-width: 1003px) {\n  .tasks-container {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .mat-divider {\n    display: none;\n  }\n\n  app-tasks-card-list:not(:last-child) {\n    margin-bottom: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Project: {{ project?.name | titlecase }}      add                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nCreateTaskComponent->TasksModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nTasksModule -->\n\nTasksCardListComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nTasksModule -->\n\nDialogModule->TasksModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nTasksModule -->\n\nMaterialModule->TasksModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nTasksModule -->\n\nModalModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/projects/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateTaskComponent\n                        \n                        \n                            TasksCardListComponent\n                        \n                        \n                            TasksComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DialogModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            ModalModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TasksRoutingModule } from './tasks-routing.module';\n\nimport { TasksComponent } from './tasks.component';\nimport { CreateTaskComponent } from './create-task/create-task.component';\nimport { TasksCardListComponent } from './tasks-card-list/tasks-card-list.component';\n\nimport { MaterialModule } from 'src/app/material.module';\nimport { ModalModule } from 'src/app/components/modal/modal.module';\nimport { DialogModule } from 'src/app/components/dialog/dialog.module';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\n@NgModule({\n  declarations: [TasksComponent, CreateTaskComponent, TasksCardListComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TasksRoutingModule,\n    MaterialModule,\n    ModalModule,\n    DialogModule,\n    PipesModule\n  ]\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/projects/tasks/tasks-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [{ path: '', component: TasksComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                ./topnav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleSidenav\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidenav\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidenav\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTheme\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:23\n                \n            \n\n\n            \n                \n                    Get authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:49\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:35\n                \n            \n\n\n            \n                \n                    Toggle side navigation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:42\n                \n            \n\n\n            \n                \n                    Change theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.scss']\n})\nexport class TopnavComponent implements OnInit {\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @Output() toggleSidenav = new EventEmitter();\n  @Output() toggleTheme = new EventEmitter();\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Get authentication status.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle side navigation.\n   */\n  onToggleSidenav() {\n    this.toggleSidenav.emit();\n  }\n\n  /**\n   * Change theme.\n   */\n  onToggleTheme() {\n    this.toggleTheme.emit();\n  }\n\n  /**\n   * Log out user.\n   */\n  onLogout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  devDo\n  \n  \n    \n      My Projects\n    \n    \n      Sign Up\n    \n    \n      Log In\n    \n    \n      Log Out\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./topnav.component.scss\n                \n                .mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 99;\n\n  .main-navigation {\n    display: flex;\n    align-self: baseline;\n  }\n\n  .spacer {\n    flex: 1 1 0;\n  }\n\n  .app-title {\n    font-size: 24px;\n    font-weight: 400;\n  }\n\n  .mat-nav-list .mat-list-item {\n    color: #fff;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu    devDo              My Projects              Sign Up              Log In              Log Out        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:19\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return;\n    }\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from './user.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly URL = environment.apiUrl + '/user';\n\n  constructor(private http: HttpClient) {}\n\n  update(id: string, user: Partial): Observable>> {\n    return this.http.put(`${this.URL}/${id}`, user, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/email/verify-email/verify-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n            \n                styleUrls\n                ./verify-email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFormErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, userService: UserService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/email/verify-email/verify-email.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            displayFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    displayFormErrors(control: FormControl, placeholder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:53\n                \n            \n\n\n            \n                \n                    Displays control errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placeholder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:30\n                \n            \n\n\n            \n                \n                    Validate user's email address.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:60\n                \n            \n\n\n            \n                \n                    Resend verification email with a new token.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { UserService } from '../../user.service';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { displayFormErrors } from 'src/app/shared/form-errors.utils';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.scss']\n})\nexport class VerifyEmailComponent implements OnInit {\n  email: FormControl;\n  errorMessage: string;\n  isVisible: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Validate user's email address.\n   */\n  ngOnInit() {\n    this.route.paramMap\n      .pipe(\n        map(param => param.get('token')),\n        concatMap(token => this.authService.getEmailVerificationToken(token)),\n        concatMap(res => this.userService.update(res.token.userId, { isVerified: true })),\n        catchError(error => {\n          if (error.error.message === 'Your request to verify your email has expired.') {\n            this.isVisible = true;\n          } else {\n            this.isVisible = false;\n          }\n          return (this.errorMessage = error.error.message);\n        })\n      )\n      .subscribe();\n\n    this.email = new FormControl(null, [Validators.required, Validators.email]);\n  }\n\n  /**\n   * Displays control errors.\n   */\n  public displayFormErrors(control: FormControl, placeholder: string): string {\n    return displayFormErrors(control, placeholder);\n  }\n\n  /**\n   * Resend verification email with a new token.\n   */\n  onSubmit() {\n    this.authService.resendVerificationToken(this.email.value).subscribe(() => {\n      this.isVisible = false;\n      this.uiService.showSnackBar(\n        'A confirmation email is on its way to your inbox. Please confirm your email before login',\n        null,\n        5000,\n        'top'\n      );\n    });\n  }\n}\n\n    \n\n    \n        \n  Your email has been verfied. You can now log in.\n  {{ errorMessage }}\n\n  \n    Enter your email address to receive a new verification email.\n    \n      \n    \n    \n      {{ displayFormErrors(email, 'Email') }}\n    \n    Submit\n  \n\n\n    \n\n    \n                \n                    ./verify-email.component.scss\n                \n                .mat-card {\n  min-width: 300px;\n  width: 50%;\n  margin: 50px auto;\n  text-align: center;\n}\n\n.email {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  width: 50%;\n  margin: auto;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your email has been verfied. You can now log in.  {{ errorMessage }}      Enter your email address to receive a new verification email.                        {{ displayFormErrors(email, \\'Email\\') }}        Submit  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateProjectComponent', 'selector': 'app-create-project'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                credential.ts\n            \n            variable\n            HEROKU_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/animations/router.animation.ts\n            \n            variable\n            routerAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/animations/router.animation.ts\n            \n            variable\n            slideToTheLeft\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/animations/router.animation.ts\n            \n            variable\n            slideToTheRight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/auth/email/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/auth/email/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/core/navigation/topnav/topnav.component.ts\n            \n            component\n            TopnavComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/pipes/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/projects/create-project/create-project.component.ts\n            \n            component\n            CreateProjectComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/projects/project-http.service.ts\n            \n            injectable\n            ProjectHttpService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/projects/project-state.service.ts\n            \n            injectable\n            ProjectStateService\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/projects/project.model.ts\n            \n            interface\n            IProject\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/projects/projects.component.ts\n            \n            component\n            ProjectsComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/task-http.service.ts\n            \n            injectable\n            TaskHttpService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/task-state.service.ts\n            \n            injectable\n            TaskStateService\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/task.model.ts\n            \n            interface\n            ITask\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/tasks-card-list/tasks-card-list.component.ts\n            \n            component\n            TasksCardListComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/projects/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                40 %\n                (8/20)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/form-errors.utils.ts\n            \n            variable\n            displayFormErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.0\n        \n            @angular/cdk : ^8.0.2\n        \n            @angular/common : ^9.1.0\n        \n            @angular/compiler : ^9.1.0\n        \n            @angular/core : ^9.1.0\n        \n            @angular/forms : ^9.1.0\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^9.1.0\n        \n            @angular/platform-browser-dynamic : ^9.1.0\n        \n            @angular/router : ^9.1.0\n        \n            core-js : ^2.6.10\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ModalProjectTitle   (src/.../enums.ts)\n                        \n                        \n                            ModalTaskTitle   (src/.../enums.ts)\n                        \n                        \n                            Mode   (src/.../enums.ts)\n                        \n                        \n                            Status   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ModalProjectTitle\n                    \n                \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : Create Project\n                            \n                        \n                        \n                            \n                                 Edit\n                            \n                        \n                        \n                            \n                                Value : Edit Project\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ModalTaskTitle\n                    \n                \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : Create Task\n                            \n                        \n                        \n                            \n                                 Edit\n                            \n                        \n                        \n                            \n                                Value : Edit Task\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Mode\n                    \n                \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Edit\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 Todo\n                            \n                        \n                        \n                            \n                                Value : todo\n                            \n                        \n                        \n                            \n                                 Doing\n                            \n                        \n                        \n                            \n                                Value : doing\n                            \n                        \n                        \n                            \n                                 Done\n                            \n                        \n                        \n                            \n                                Value : done\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 8.0.2.\nDocumentation\nThe documentation for this project can be found here.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_exports\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_declarations\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nMaterialModule->ModalModule\n\n\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nMaterialModule->FooterModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nMaterialModule->ProjectsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMaterialModule->TasksModule\n\n\n\nAuthModule -->\n\nModalModule->AuthModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\nProjectsModule -->\n\nModalModule->ProjectsModule\n\n\n\nTasksModule -->\n\nModalModule->TasksModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\nProjectsModule -->\n\nDialogModule->ProjectsModule\n\n\n\nTasksModule -->\n\nDialogModule->TasksModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nEmailModule -->\n\nResetPasswordComponent->EmailModule\n\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\nNavigationModule -->\n\nFooterModule->NavigationModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\nModalComponent\n\nModalComponent\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nUppercaseFirstLetterPipe->PipesModule\n\n\n\n\n\nUppercaseFirstLetterPipe \n\nUppercaseFirstLetterPipe \n\nUppercaseFirstLetterPipe  -->\n\nPipesModule->UppercaseFirstLetterPipe \n\n\n\n\n\nCreateProjectComponent\n\nCreateProjectComponent\n\nProjectsModule -->\n\nCreateProjectComponent->ProjectsModule\n\n\n\n\n\nProjectsComponent\n\nProjectsComponent\n\nProjectsModule -->\n\nProjectsComponent->ProjectsModule\n\n\n\n\n\nProjectsRoutingModule\n\nProjectsRoutingModule\n\nProjectsModule -->\n\nProjectsRoutingModule->ProjectsModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nTasksModule -->\n\nCreateTaskComponent->TasksModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nTasksModule -->\n\nTasksCardListComponent->TasksModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nTasksModule -->\n\nTasksComponent->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProjectArrayResponseType   (src/.../project-http.service.ts)\n                        \n                        \n                            ProjectResponseType   (src/.../project-http.service.ts)\n                        \n                        \n                            TaskArrayResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            TaskResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            UserResponseType   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/projects/project-http.service.ts\n    \n    \n        \n            \n                \n                    \n                    ProjectArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProjectResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    src/app/projects/tasks/task-http.service.ts\n    \n    \n        \n            \n                \n                    \n                    TaskArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    src/app/auth/auth.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            displayFormErrors   (src/.../form-errors.utils.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            HEROKU_URL   (credential.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routerAnimation   (src/.../router.animation.ts)\n                        \n                        \n                            slideToTheLeft   (src/.../router.animation.ts)\n                        \n                        \n                            slideToTheRight   (src/.../router.animation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/form-errors.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            displayFormErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  control: AbstractControl,\n  placeholder: string,\n  minLength?: number,\n  maxLength?: number\n): string => {\n  let errorMessage = '';\n\n  switch (control.invalid) {\n    case control.hasError('required'):\n      errorMessage = `${placeholder} is required`;\n      break;\n\n    case control.hasError('email'):\n      errorMessage = `${placeholder} needs to be a valid email`;\n      break;\n\n    case control.hasError('minlength'):\n      errorMessage = `${placeholder} needs to have at least ${minLength} characters`;\n      break;\n\n    case control.hasError('maxlength'):\n      errorMessage = `${placeholder} needs to have maximum ${maxLength} characters`;\n      break;\n\n    case control.hasError('mustMatch'):\n      errorMessage = `Passwords must match`;\n      break;\n\n    default:\n      break;\n  }\n\n  return errorMessage;\n}\n                        \n                    \n\n                \n                    \n                        Helper function for displaying the form controls errors.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v2'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: HEROKU_URL\n}\n                        \n                    \n\n\n            \n        \n\n    credential.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HEROKU_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://devdo.herokuapp.com/api/v2'\n                        \n                    \n\n\n            \n        \n\n    src/app/animations/router.animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routerAnimation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnimationTriggerMetadata\n\n                        \n                    \n                    \n                        \n                            Default value : trigger('routerAnimation', [\n  transition('* => isLeft', slideToTheLeft),\n  transition('* => isRight', slideToTheRight),\n  transition('isRight => *', slideToTheLeft),\n  transition('isLeft => *', slideToTheRight)\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideToTheLeft\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    [\n      style({\n        position: 'absolute',\n        top: document.body.clientWidth \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideToTheRight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  query(\n    ':enter, :leave',\n    [\n      style({\n        position: 'absolute',\n        top: document.body.clientWidth \n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
