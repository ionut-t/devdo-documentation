var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.261,1,0.93]],["body/components/AppComponent.html",[0,0.464,1,1.585,2,1.538,3,0.22,4,0.195,5,1.205,6,1.205,7,1.205,8,1.205,9,0.195,10,3.221,11,1.272,12,3.334,13,1.458,14,2.161,15,1.143,16,2.222,17,1.894,18,1.538,19,5.733,20,1.538,21,5.071,22,0.549,23,1.114,24,2.312,25,0.783,26,2.2,27,2.352,28,0.997,29,3.767,30,0.828,31,0.021,32,1.004,33,0.585,34,0.74,35,3.767,36,3.853,37,3.203,38,0.828,39,1.143,40,0.367,41,0.246,42,3.767,43,0.22,44,0.273,45,1.205,46,3.767,47,0.74,48,1.623,49,1.623,50,1.205,51,1.963,52,1.205,53,1.205,54,0.923,55,1.205,56,0.974,57,1.083,58,1.205,59,0.923,60,1.205,61,0.974,62,1.143,63,1.623,64,0.923,65,1.205,66,0.923,67,1.205,68,0.974,69,1.205,70,0.923,71,1.083,72,1.205,73,0.923,74,0.66,75,0.974,76,1.205,77,0.923,78,1.205,79,0.974,80,1.083,81,1.083,82,1.205,83,0.974,84,1.205,85,0.974,86,1.205,87,0.923,88,1.083,89,0.974,90,1.205,91,1.205,92,0.011,93,0.014,94,0.011]],["title/modules/AppModule.html",[95,0.835,96,2.476]],["body/modules/AppModule.html",[1,1.862,3,0.236,4,0.209,9,0.209,17,1.044,31,0.021,40,0.51,41,0.264,43,0.236,44,0.293,47,0.794,74,0.708,92,0.011,93,0.015,94,0.011,95,0.938,96,5.032,97,1.293,98,1.707,99,2.829,100,2.829,101,2.829,102,1.441,103,3.455,104,3.455,105,3.455,106,3.455,107,3.455,108,3.657,109,4.248,110,4.248,111,4.248,112,2.532,113,1.523,114,4.04,115,2.119,116,5.314,117,4.544,118,3.07,119,2.003,120,5.314,121,4.04,122,5.314,123,5.937,124,2.36,125,2.36,126,4.04,127,4.04,128,4.04,129,4.04,130,5.314,131,5.314,132,5.314,133,2.7]],["title/modules/AppRoutingModule.html",[95,0.835,108,1.955]],["body/modules/AppRoutingModule.html",[0,0.419,3,0.269,4,0.238,9,0.238,31,0.021,37,2.91,40,0.495,41,0.301,43,0.269,44,0.334,64,1.416,70,1.416,71,1.663,92,0.013,93,0.016,94,0.013,97,1.475,102,1.643,108,3.143,115,1.837,119,2.179,134,3.94,135,3.172,136,3.435,137,3.98,138,1.946,139,4.608,140,3.98,141,4.608,142,4.608,143,3.172,144,3.94,145,2.341,146,4.699,147,2.91,148,4.944,149,4.608,150,4.608,151,3.94,152,4.608,153,4.608,154,3.98,155,4.608,156,4.608]],["title/guards/AuthGuard.html",[140,2.476,157,2.476]],["body/guards/AuthGuard.html",[3,0.245,4,0.216,9,0.216,11,1.413,12,2.274,13,1.203,22,0.61,23,1.194,25,0.87,26,2.444,27,2.422,28,1.069,30,1.194,31,0.021,32,0.952,33,0.844,34,1.069,38,0.919,40,0.463,41,0.274,43,0.245,44,0.303,45,1.339,92,0.012,93,0.015,94,0.012,138,1.767,140,3.743,145,2.126,151,5.467,157,3.743,158,4.184,159,3.578,160,5.383,161,5.436,162,4.367,163,4.184,164,5.436,165,4.184,166,3.743,167,2.591,168,5.436,169,3.743,170,5.436,171,4.13,172,5.436,173,5.436,174,3.068,175,4.649,176,3.433,177,1.939,178,1.492,179,2.274,180,2.444,181,1.339,182,4.588,183,4.184,184,1.74,185,4.184]],["title/interceptors/AuthInterceptor.html",[110,2.271,186,2.271]],["body/interceptors/AuthInterceptor.html",[3,0.26,4,0.23,9,0.23,11,1.501,13,1.278,22,0.648,23,1.242,25,0.924,26,2.596,27,2.461,28,1.111,30,1.242,31,0.021,32,0.99,33,0.877,34,1.111,37,3.569,38,0.976,40,0.45,41,0.291,43,0.26,44,0.322,45,1.422,92,0.012,93,0.016,94,0.012,110,3.569,124,2.596,145,2.871,177,2.015,179,2.416,184,1.422,186,3.569,187,3.8,188,3.8,189,4.832,190,4.444,191,4.832,192,5.592,193,5.313,194,5.592,195,4.444,196,3.89,197,5.651,198,5.651,199,3.8,200,4.832,201,5.651,202,4.444,203,4.444,204,4.444,205,4.444,206,4.444,207,4.444,208,4.444]],["title/modules/AuthModule.html",[95,0.835,209,2.476]],["body/modules/AuthModule.html",[3,0.248,4,0.22,9,0.22,31,0.021,40,0.515,41,0.278,43,0.248,44,0.308,47,0.835,61,1.762,62,1.288,66,1.67,74,0.744,77,1.67,92,0.012,93,0.015,94,0.012,95,0.985,97,1.359,98,1.793,99,2.898,100,2.024,101,2.024,102,1.514,112,2.616,113,1.6,115,2.188,119,2.069,125,2.48,209,5.079,210,3.631,211,3.631,212,3.631,213,4.306,214,2.88,215,3.983,216,4.246,217,2.983,218,2.157,219,4.17,220,1.903,221,3.226,222,3.631,223,3.631,224,3.631,225,3.631,226,3.226,227,3.226]],["title/modules/AuthRoutingModule.html",[95,0.835,213,2.271]],["body/modules/AuthRoutingModule.html",[0,0.436,3,0.287,4,0.254,9,0.254,31,0.021,40,0.491,41,0.321,43,0.287,44,0.356,66,1.474,77,1.474,89,1.27,92,0.014,93,0.017,94,0.014,97,1.572,102,1.752,115,1.959,119,2.268,135,3.382,136,3.535,137,4.142,138,2.075,145,2.496,146,4.477,148,4.201,213,3.8,224,4.201,225,4.201,228,4.913,229,3.733,230,3.103,231,4.913,232,4.913,233,3.733]],["title/injectables/AuthService.html",[27,1.283,177,1.283]],["body/injectables/AuthService.html",[3,0.1,4,0.089,9,0.089,12,0.931,22,0.25,23,0.617,25,0.356,27,1.001,28,1.314,30,1.26,31,0.021,32,1.004,33,0.962,34,1.127,36,2.132,37,3.786,38,1.397,39,1.482,40,0.39,41,0.112,43,0.1,44,0.124,45,0.548,57,0.807,74,0.722,89,1.601,92,0.005,93,0.008,94,0.005,113,1.344,124,1.001,138,0.724,145,2.832,162,3.258,167,2.328,174,3.191,176,2.873,177,1.001,178,0.611,180,1.001,181,2.236,182,2.132,184,1.919,196,1.932,222,2.4,229,2.132,230,1.773,234,1.001,235,1.302,236,0.725,237,3.565,238,3.565,239,5.68,240,3.565,241,2.708,242,2.708,243,4.122,244,2.807,245,4.122,246,3.525,247,2.807,248,4.122,249,4.122,250,4.122,251,4.122,252,2.807,253,2.807,254,2.807,255,2.807,256,1.302,257,3.132,258,2.057,259,2.807,260,2.132,261,1.713,262,2.807,263,3.363,264,4.122,265,4.122,266,2.807,267,2.178,268,1.713,269,2.4,270,3.753,271,2.4,272,1.713,273,1.179,274,1.713,275,2.807,276,2.807,277,2.408,278,2.807,279,1.713,280,3.525,281,1.713,282,2.807,283,1.713,284,1.713,285,2.807,286,1.713,287,2.807,288,2.807,289,1.713,290,2.603,291,1.713,292,2.807,293,1.713,294,2.4,295,2.807,296,3.706,297,1.713,298,2.807,299,2.807,300,5.573,301,4.885,302,1.713,303,2.4,304,2.807,305,3.049,306,1.713,307,2.807,308,2.4,309,2.807,310,1.713,311,2.132,312,1.271,313,1.204,314,1.742,315,2.807,316,1.338,317,1.713,318,1.713,319,1.713,320,2.132,321,1.713,322,1.932,323,1.082,324,1.465,325,1.179,326,1.302,327,1.082,328,1.465,329,1.713,330,0.683,331,1.465,332,4.122,333,2.807,334,1.713,335,1.713,336,1.713,337,1.932,338,2.132,339,1.713,340,1.713,341,0.931,342,1.713,343,1.713,344,2.807,345,1.713,346,1.713,347,2.807,348,2.4,349,1.713,350,3.049,351,1.713,352,2.807,353,2.807,354,1.699,355,2.807,356,1.932,357,1.713,358,2.807,359,1.713,360,2.807,361,1.713,362,1.713,363,0.816,364,1.713,365,1.713,366,1.713,367,1.713,368,1.713,369,1.713,370,1.713,371,1.713,372,1.713,373,1.713,374,1.713,375,1.713,376,1.713,377,1.713,378,1.713,379,1.713,380,1.713,381,1.713,382,2.807,383,1.713,384,1.465,385,1.179,386,1.713,387,1.713,388,1.713,389,1.713,390,1.713,391,1.465,392,1.713,393,1.713,394,1.713]],["title/components/BoardComponent.html",[0,0.261,54,0.881]],["body/components/BoardComponent.html",[0,0.457,1,0.93,2,1.491,3,0.21,4,0.186,5,1.151,6,1.151,7,1.151,8,1.151,9,0.186,11,1.215,13,1.414,14,2.11,15,1.091,16,2.211,17,1.884,18,1.491,20,1.491,22,0.524,23,1.08,24,2.268,25,1.164,28,0.966,31,0.021,32,0.861,38,0.79,39,1.091,40,0.261,41,0.235,43,0.21,44,0.261,47,0.707,48,1.573,49,1.573,50,1.151,51,1.926,52,1.151,53,1.151,54,1.474,55,1.151,56,0.93,57,1.035,58,1.151,59,0.881,60,1.151,61,0.93,62,1.091,63,1.573,64,0.881,65,1.151,66,0.881,67,1.151,68,0.93,69,1.151,70,0.881,71,1.035,72,1.151,73,0.881,74,0.63,75,0.93,76,1.151,77,0.881,78,1.151,79,0.93,80,1.035,81,1.035,82,1.151,83,0.93,84,1.151,85,0.93,86,1.151,87,0.881,88,1.035,89,0.93,90,1.151,91,1.151,92,0.01,93,0.014,94,0.01,147,3.979,363,2.668,395,3.076,396,5.599,397,4.916,398,3.597,399,3.597,400,2.203,401,2.498,402,2.343,403,2.733,404,2.272,405,3.076,406,3.271,407,3.597,408,2.477,409,4.203,410,2.733,411,2.102,412,3.076,413,3.076,414,2.477,415,1.956,416,2.102,417,4.916,418,3.597,419,2.477,420,2.477,421,2.477,422,3.076,423,3.076,424,1.956,425,3.076,426,3.076]],["title/modules/BoardModule.html",[95,0.835,427,2.476]],["body/modules/BoardModule.html",[3,0.225,4,0.199,9,0.199,31,0.021,40,0.518,41,0.251,43,0.225,44,0.279,47,0.756,54,1.625,56,1.714,74,0.674,79,1.714,81,1.479,83,1.714,92,0.011,93,0.014,94,0.011,95,0.893,97,1.231,98,1.625,99,2.761,100,1.833,101,1.833,102,1.372,112,2.451,113,1.45,115,2.051,119,1.938,125,2.247,147,2.429,214,2.802,215,3.875,217,2.796,218,1.954,219,3.907,220,1.724,221,2.922,223,3.289,427,5.105,428,3.289,429,3.289,430,3.289,431,4.189,432,4.189,433,4.189,434,3.846,435,5.143,436,3.846,437,3.289,438,3.846,439,3.846,440,2.922,441,3.846,442,3.289,443,2.922,444,3.846,445,3.846,446,2.922,447,3.846]],["title/modules/BoardRoutingModule.html",[95,0.835,432,2.271]],["body/modules/BoardRoutingModule.html",[0,0.377,3,0.304,4,0.269,9,0.269,31,0.021,40,0.483,41,0.34,43,0.304,44,0.377,54,1.526,92,0.015,93,0.017,94,0.015,97,1.666,102,1.857,115,2.076,119,2.349,135,3.585,136,3.625,137,4.29,138,2.199,145,2.646,146,3.585,233,3.956,432,3.936,437,4.453,448,5.207]],["title/modules/CoreModule.html",[95,0.835,109,2.271]],["body/modules/CoreModule.html",[3,0.252,4,0.223,9,0.223,17,1.116,31,0.021,40,0.505,41,0.282,43,0.252,44,0.313,47,0.849,64,1.678,70,1.678,71,1.242,74,0.757,92,0.012,93,0.016,94,0.012,95,1.002,97,1.382,98,1.824,99,2.922,100,2.058,101,2.058,102,2.187,108,3.723,109,4.653,112,2.645,113,1.628,115,2.213,119,2.092,125,2.523,143,2.974,144,3.694,214,2.893,217,3.017,218,2.195,221,3.282,449,3.694,450,3.694,451,3.694,452,3.694,453,4.595,454,4.319,455,4.319,456,4.319]],["title/components/CreateTaskComponent.html",[0,0.261,56,0.93]],["body/components/CreateTaskComponent.html",[0,0.355,1,0.513,2,0.959,3,0.116,4,0.103,5,0.635,6,0.635,7,0.635,8,0.635,9,0.103,11,2.072,13,0.909,14,1.485,15,0.602,16,2.026,17,1.726,18,0.959,20,0.959,22,0.289,23,0.695,24,1.693,25,0.413,28,1.277,30,0.436,31,0.021,32,0.69,33,0.811,34,0.39,36,2.402,38,1.25,39,1.363,40,0.379,41,0.13,43,0.116,44,0.144,45,0.635,47,0.39,48,1.012,49,1.012,50,0.635,51,1.437,52,0.635,53,0.635,54,0.486,55,0.635,56,1.161,57,1.905,58,0.635,59,0.486,60,0.635,61,0.513,62,0.602,63,1.012,64,0.486,65,0.635,66,0.486,67,0.635,68,0.513,69,0.635,70,0.486,71,0.571,72,0.635,73,0.486,74,0.348,75,0.513,76,0.635,77,0.486,78,0.635,79,0.513,80,1.133,81,0.571,82,0.635,83,0.513,84,0.635,85,0.513,86,0.635,87,0.486,88,0.571,89,0.513,90,0.635,91,0.635,92,0.006,93,0.009,94,0.006,178,0.708,181,1.754,184,1.821,196,2.176,220,0.89,236,0.817,267,1.585,303,2.703,312,0.708,313,0.67,314,2.029,330,0.791,350,1.697,354,1.877,400,2.013,440,4.987,457,5.614,458,1.697,459,2.703,460,3.161,461,2.712,462,3.835,463,3.939,464,3.161,465,2.993,466,3.939,467,3.939,468,3.939,469,3.939,470,5.225,471,5.225,472,3.093,473,3.413,474,4.492,475,1.996,476,3.726,477,2.176,478,3.129,479,1.367,480,2.84,481,3.202,482,3.161,483,2.488,484,1.985,485,1.985,486,2.442,487,1.985,488,1.985,489,2.176,490,2.402,491,2.282,492,1.985,493,3.3,494,1.985,495,2.176,496,1.985,497,5.014,498,2.993,499,1.985,500,1.985,501,3.093,502,1.985,503,1.985,504,1.985,505,1.985,506,4.492,507,3.377,508,1.985,509,1.985,510,3.161,511,1.996,512,1.367,513,2.301,514,1.508,515,1.367,516,1.508,517,1.985,518,2.176,519,1.847,520,3.161,521,1.985,522,1.985,523,1.985,524,3.161,525,4.492,526,3.161,527,1.985,528,1.985,529,1.985,530,1.985,531,1.508,532,1.508,533,1.985,534,1.985,535,1.985,536,2.703,537,1.985,538,2.402,539,2.703,540,3.413,541,1.985,542,3.161,543,1.985,544,1.985,545,1.985,546,1.985,547,2.703,548,1.697,549,3.161,550,3.161,551,2.402,552,2.703,553,1.985,554,1.985,555,1.697,556,1.508,557,1.508,558,1.508,559,1.985,560,2.402]],["title/components/DialogComponent.html",[0,0.261,59,0.881]],["body/components/DialogComponent.html",[0,0.405,1,0.926,2,1.487,3,0.21,4,0.185,5,1.147,6,1.147,7,1.147,8,1.147,9,0.185,15,1.087,16,2.21,17,1.883,18,1.487,20,1.487,22,0.523,25,0.745,28,0.964,30,0.788,31,0.021,32,0.979,33,0.761,34,0.705,40,0.355,41,0.234,43,0.21,44,0.26,47,0.705,48,1.569,49,1.569,50,1.147,51,1.923,52,1.147,53,1.147,54,0.878,55,1.147,56,0.926,57,1.031,58,1.147,59,1.472,60,1.147,61,0.926,62,1.087,63,1.569,64,0.878,65,1.147,66,0.878,67,1.147,68,0.926,69,1.147,70,0.878,71,1.031,72,1.147,73,0.878,74,0.628,75,0.926,76,1.147,77,0.878,78,1.147,79,0.926,80,1.031,81,1.031,82,1.147,83,0.926,84,1.147,85,0.926,86,1.147,87,0.878,88,1.031,89,0.926,90,1.147,91,1.147,92,0.01,93,0.014,94,0.01,236,1.267,263,4.137,267,1.487,385,2.468,400,1.607,401,2.491,402,1.708,406,2.094,411,2.094,415,1.949,416,2.094,424,1.949,478,1.708,560,3.725,561,2.723,562,3.725,563,4.779,564,4.193,565,4.779,566,3.585,567,4.332,568,3.585,569,3.065,570,3.585,571,3.585,572,3.065,573,3.065,574,2.468,575,1.708,576,3.065,577,4.904,578,4.904,579,3.376,580,2.723,581,2.468,582,2.723,583,2.723,584,3.065,585,3.585,586,3.585,587,2.723,588,3.585,589,3.585]],["title/interfaces/DialogData.html",[567,2.476,575,1.714]],["body/interfaces/DialogData.html",[0,0.439,3,0.291,4,0.257,9,0.257,16,1.509,17,1.286,18,1.509,20,1.509,22,0.725,31,0.021,33,0.941,40,0.439,41,0.325,43,0.291,44,0.36,59,1.218,92,0.014,93,0.017,94,0.014,236,1.567,263,3.424,267,2.152,411,3.976,478,3.243,561,3.779,562,3.779,563,4.254,564,4.254,565,4.254,567,4.501,572,4.254,573,4.254,574,3.424,575,2.37,576,4.254,590,3.424]],["title/modules/DialogModule.html",[95,0.835,433,2.271]],["body/modules/DialogModule.html",[3,0.275,4,0.243,9,0.243,31,0.021,40,0.484,41,0.308,43,0.275,44,0.341,47,0.925,59,1.816,74,0.824,92,0.013,93,0.016,94,0.013,95,1.092,97,1.506,98,1.987,99,3.04,100,2.242,101,2.242,102,2.275,112,2.792,113,1.773,115,2.336,119,2.208,214,2.957,217,3.184,218,2.391,433,4.57,591,4.024,592,4.024,593,4.705,594,4.024,595,4.705,596,5.858,597,4.705,598,3.239]],["title/modules/EmailModule.html",[95,0.835,599,2.476]],["body/modules/EmailModule.html",[3,0.262,4,0.231,9,0.231,31,0.021,40,0.509,41,0.292,43,0.262,44,0.324,47,0.879,73,1.693,74,0.994,87,1.693,88,1.287,89,1.156,92,0.012,93,0.016,94,0.012,95,1.038,97,1.432,98,1.89,99,2.97,100,2.132,101,2.132,102,1.596,112,2.705,113,1.686,115,2.263,119,2.139,125,2.614,214,2.92,217,3.085,218,2.273,219,4.311,220,2.005,227,3.399,598,3.08,599,5.033,600,3.826,601,3.826,602,3.826,603,4.365,604,4.474,605,3.08,606,3.826,607,3.08]],["title/modules/EmailRoutingModule.html",[95,0.835,603,2.271]],["body/modules/EmailRoutingModule.html",[0,0.439,3,0.291,4,0.257,9,0.257,31,0.021,40,0.493,41,0.325,43,0.291,44,0.36,73,1.485,74,1.062,87,1.485,88,1.43,92,0.014,93,0.017,94,0.014,97,1.592,102,1.774,115,1.983,119,2.285,135,3.424,136,3.554,137,4.173,138,2.101,145,2.527,146,4.173,227,3.779,233,3.779,603,3.828,605,3.424,606,4.254,607,3.424,608,4.974,609,4.974,610,4.974]],["title/interceptors/ErrorInterceptor.html",[111,2.271,186,2.271]],["body/interceptors/ErrorInterceptor.html",[3,0.246,4,0.218,9,0.218,11,1.422,13,1.211,22,0.614,23,1.199,25,0.875,28,1.073,30,1.199,31,0.021,32,0.956,33,0.847,34,1.073,38,0.925,40,0.481,41,0.275,43,0.246,44,0.305,45,1.347,92,0.012,93,0.015,94,0.012,111,3.447,124,2.46,177,1.947,178,1.502,184,1.747,186,3.447,187,3.6,189,5.48,191,4.668,192,5.48,193,5.179,194,5.48,199,3.6,200,4.668,258,2.712,330,1.679,354,2.007,486,2.967,611,3.6,612,3.447,613,4.21,614,4.21,615,4.21,616,4.602,617,5.458,618,3.6,619,4.21,620,4.21,621,4.21,622,4.21,623,4.668,624,4.21,625,4.21,626,2.659,627,3.6,628,3.6,629,3.6,630,4.21,631,4.21,632,4.668,633,4.21,634,2.46,635,1.887,636,4.21]],["title/components/ForgotPasswordComponent.html",[0,0.261,61,0.93]],["body/components/ForgotPasswordComponent.html",[0,0.36,1,0.747,2,1.278,3,0.169,4,0.149,5,0.925,6,0.925,7,0.925,8,0.925,9,0.149,13,1.211,14,1.873,15,0.877,16,2.152,17,1.834,18,1.278,20,1.278,22,0.421,23,0.926,24,2.058,25,0.601,26,1.689,27,2.161,28,1.229,30,0.635,31,0.021,32,0.87,33,0.771,34,0.568,38,1.2,39,1.507,40,0.396,41,0.189,43,0.169,44,0.209,45,0.925,47,0.568,48,1.348,49,1.348,50,0.925,51,1.747,52,0.925,53,0.925,54,0.708,55,0.925,56,0.747,57,0.831,58,0.925,59,0.708,60,0.925,61,1.411,62,1.944,63,1.348,64,0.708,65,0.925,66,0.708,67,0.925,68,0.747,69,0.925,70,0.708,71,0.831,72,0.925,73,0.708,74,0.506,75,0.747,76,0.925,77,0.708,78,0.925,79,0.747,80,0.831,81,0.831,82,0.925,83,0.747,84,0.925,85,0.747,86,0.925,87,0.708,88,0.831,89,1.716,90,0.925,91,0.925,92,0.008,93,0.012,94,0.008,179,1.571,181,0.925,184,1.59,220,1.296,226,4.869,236,1.089,258,2.494,267,1.278,269,3.602,270,2.903,271,2.472,314,1.502,354,2.007,402,1.378,403,2.196,424,1.571,473,4.148,475,2.66,476,4.409,483,3.138,486,2.29,493,1.826,495,2.9,511,2.66,512,3.421,513,1.689,518,1.99,519,1.689,555,2.472,556,2.196,560,3.2,634,1.689,635,1.296,637,5.481,638,2.196,639,4.249,640,3.602,641,4.602,642,3.448,643,4.212,644,2.891,645,2.9,646,2.472,647,2.891,648,2.891,649,2.891,650,1.826,651,2.472,652,1.99,653,2.472,654,1.826,655,2.472,656,1.99,657,2.891,658,2.891,659,2.891,660,2.196,661,2.196,662,3.2,663,2.472]],["title/components/HomeComponent.html",[0,0.261,64,0.881]],["body/components/HomeComponent.html",[0,0.412,1,0.709,2,1.23,3,0.16,4,0.142,5,0.878,6,0.878,7,0.878,8,0.878,9,0.142,11,0.927,13,1.166,14,1.817,15,0.832,16,2.136,17,1.82,18,1.23,20,1.23,22,0.4,23,0.891,24,2.007,25,0.571,27,2.194,28,1.169,30,0.603,31,0.021,32,0.845,33,0.629,34,0.539,38,1.059,39,1.463,40,0.386,41,0.179,43,0.16,44,0.199,45,0.878,47,0.539,48,1.297,49,1.297,50,0.878,51,1.704,52,0.878,53,0.878,54,0.672,55,0.878,56,0.709,57,0.789,58,0.878,59,0.672,60,0.878,61,0.709,62,0.832,63,1.297,64,1.304,65,0.878,66,0.672,67,0.878,68,0.709,69,0.878,70,0.672,71,1.634,72,0.878,73,0.672,74,0.481,75,0.709,76,0.878,77,0.672,78,0.878,79,0.709,80,0.789,81,0.789,82,0.878,83,0.709,84,0.878,85,0.709,86,0.878,87,0.672,88,0.789,89,0.709,90,0.878,91,0.878,92,0.008,93,0.011,94,0.008,138,1.159,162,3.756,167,1.932,178,0.979,181,1.704,182,4.046,236,1.048,246,2.347,312,0.979,313,0.927,316,1.932,363,2.538,384,2.347,385,1.889,400,1.23,401,2.06,402,2.538,404,3.588,406,1.603,408,1.889,410,2.085,411,1.603,415,1.492,416,2.817,419,1.889,420,1.889,421,1.889,461,3.319,472,3.666,489,2.791,582,2.085,583,2.085,584,2.347,635,1.23,664,2.347,665,5.086,666,4.822,667,4.054,668,4.822,669,5.326,670,2.744,671,4.054,672,2.744,673,4.054,674,2.744,675,2.744,676,4.054,677,3.666,678,3.666,679,4.123,680,2.744,681,2.085,682,4.054,683,2.347,684,2.744,685,2.744,686,2.744,687,2.744,688,3.08,689,4.054,690,4.054,691,4.054,692,3.467,693,4.054,694,4.054,695,4.054,696,4.054,697,3.467,698,2.744,699,2.744,700,2.744,701,2.744,702,3.467,703,2.347,704,2.561,705,2.347,706,2.744,707,3.319,708,2.347,709,1.733,710,3.08,711,2.347,712,2.744,713,4.054,714,2.347,715,2.744,716,2.744,717,2.744,718,2.744,719,2.085,720,2.085,721,2.744,722,2.347,723,2.347]],["title/interfaces/ITask.html",[575,1.714,724,1.955]],["body/interfaces/ITask.html",[3,0.279,4,0.247,9,0.247,11,2.329,22,0.696,31,0.021,33,1.07,34,1.319,43,0.279,92,0.013,93,0.017,94,0.013,236,1.527,267,2.237,277,3.919,462,2.788,478,3.197,491,3.409,575,2.274,590,3.286,724,3.212,725,4.081,726,4.773,727,5.737,728,5.49,729,5.49,730,5.49]],["title/interfaces/IUser.html",[323,2.271,575,1.714]],["body/interfaces/IUser.html",[3,0.284,4,0.252,9,0.252,22,0.709,31,0.02,33,1.096,34,1.175,43,0.284,89,1.746,92,0.014,93,0.017,94,0.014,176,4.089,236,1.546,267,2.263,270,3.946,296,4.65,311,5.131,323,3.777,491,3.432,575,2.319,590,3.35,731,4.161,732,5.776]],["title/components/LoginComponent.html",[0,0.261,66,0.881]],["body/components/LoginComponent.html",[0,0.333,1,0.653,2,1.156,3,0.148,4,0.131,5,0.808,6,0.808,7,0.808,8,0.808,9,0.131,13,1.096,14,1.73,15,0.766,16,2.11,17,1.798,18,1.156,20,1.156,22,0.368,23,0.837,24,1.927,25,0.525,26,1.476,27,2.057,28,1.263,30,0.555,31,0.021,32,0.804,33,0.712,34,0.497,38,1.267,39,1.392,40,0.37,41,0.165,43,0.148,44,0.183,45,0.808,47,0.497,48,1.22,49,1.22,50,0.808,51,1.636,52,0.808,53,0.808,54,0.619,55,0.808,56,0.653,57,1.32,58,0.808,59,0.619,60,0.808,61,0.653,62,1.392,63,1.22,64,0.619,65,0.808,66,1.252,67,0.808,68,0.653,69,0.808,70,0.619,71,0.726,72,0.808,73,0.619,74,0.442,75,0.653,76,0.808,77,0.619,78,0.808,79,0.653,80,0.726,81,0.726,82,0.808,83,0.653,84,0.808,85,0.653,86,0.808,87,0.619,88,0.726,89,1.593,90,0.808,91,0.808,92,0.007,93,0.011,94,0.007,133,2.332,167,1.816,169,2.624,179,1.373,181,0.808,184,1.846,220,1.132,230,3.228,236,0.985,258,2.387,267,1.156,270,3.369,273,1.739,290,3.892,312,1.359,313,1.287,314,1.637,316,1.816,354,1.816,400,1.132,401,1.284,477,2.624,486,2.779,493,3.892,501,3.519,507,2.624,512,1.739,513,2.681,518,2.624,519,2.226,580,1.919,626,3.464,642,3.228,645,3.519,650,1.595,652,1.739,654,3.464,656,2.624,733,2.16,734,4.589,735,3.811,736,4.168,737,4.589,738,4.589,739,5.767,740,5.111,741,5.767,742,3.487,743,3.811,744,2.526,745,2.526,746,2.895,747,3.259,748,2.526,749,2.526,750,3.811,751,2.526,752,2.526,753,2.526,754,1.919,755,2.526,756,2.895,757,2.895,758,2.624,759,2.526,760,1.919,761,2.526,762,2.16,763,2.16,764,1.919,765,2.526,766,2.526,767,2.526,768,2.895,769,2.895]],["title/modules/MaterialModule.html",[95,0.835,214,1.519]],["body/modules/MaterialModule.html",[3,0.254,4,0.224,9,0.224,31,0.021,40,0.537,41,0.284,43,0.254,44,0.314,92,0.012,93,0.016,94,0.012,97,1.388,102,1.547,119,2.097,214,2.35,574,2.987,770,4.338,771,5.565,772,3.296,773,5.565,774,4.338,775,4.338,776,5.565,777,4.338,778,5.565,779,4.338,780,5.565,781,4.338,782,5.565,783,4.338,784,5.565,785,4.338,786,5.565,787,4.338,788,5.565,789,3.71,790,5.565,791,4.338,792,5.565,793,4.338,794,4.338,795,5.565,796,3.71,797,3.71,798,5.565,799,4.338,800,5.565,801,4.338,802,3.296,803,5.565,804,4.338,805,5.565]],["title/components/ModalComponent.html",[0,0.261,68,0.93]],["body/components/ModalComponent.html",[0,0.391,1,0.866,2,1.42,3,0.196,4,0.173,5,1.072,6,1.498,7,1.072,8,1.072,9,0.173,13,1.346,14,2.033,15,1.016,16,2.193,17,1.869,18,1.42,20,1.42,22,0.786,23,1.028,24,2.2,25,1.121,28,1.207,31,0.021,32,0.82,33,0.727,38,1.028,39,1.42,40,0.243,41,0.219,43,0.196,44,0.243,47,0.659,48,1.498,49,1.498,50,1.072,51,1.868,52,1.072,53,1.072,54,0.821,55,1.072,56,0.866,57,0.964,58,1.072,59,0.821,60,1.072,61,0.866,62,1.016,63,1.498,64,0.821,65,1.072,66,0.821,67,1.072,68,1.509,69,1.072,70,0.821,71,0.964,72,1.072,73,0.821,74,0.587,75,0.866,76,1.072,77,0.821,78,1.072,79,0.866,80,0.964,81,1.346,82,1.072,83,0.866,84,1.072,85,0.866,86,1.072,87,0.821,88,0.964,89,0.866,90,1.072,91,1.072,92,0.009,93,0.013,94,0.009,267,1.42,314,1.195,356,2.307,363,2.927,402,2.23,414,2.307,415,1.821,416,1.957,473,4.435,475,2.956,476,4.097,478,2.927,483,3.406,495,3.713,511,2.956,556,2.546,581,2.307,635,2.097,697,2.865,704,2.956,707,2.307,709,2.956,710,2.546,711,2.865,806,2.865,807,5.393,808,4.68,809,4.002,810,4.68,811,3.351,812,3.351,813,3.351,814,4.002,815,3.351,816,4.68,817,3.351,818,3.351,819,4.002,820,3.351,821,4.019,822,2.546,823,2.865,824,3.351,825,3.351,826,3.351,827,3.351]],["title/modules/ModalModule.html",[95,0.835,215,2.101]],["body/modules/ModalModule.html",[3,0.278,4,0.246,9,0.246,31,0.021,40,0.485,41,0.311,43,0.278,44,0.344,47,0.934,68,1.905,74,0.832,92,0.013,93,0.016,94,0.013,95,1.102,97,1.52,98,2.006,99,3.053,100,2.264,101,2.264,102,2.285,112,2.808,113,1.79,115,2.349,119,2.221,214,2.964,215,4.234,217,3.203,218,2.413,598,3.27,828,4.062,829,4.062,830,4.75,831,4.062,832,4.75,833,4.75]],["title/modules/NavigationModule.html",[95,0.835,453,2.271]],["body/modules/NavigationModule.html",[3,0.261,4,0.231,9,0.231,31,0.021,40,0.501,41,0.292,43,0.261,44,0.323,47,0.877,74,0.782,75,1.889,85,1.785,92,0.012,93,0.016,94,0.012,95,1.036,97,1.428,98,1.885,99,2.967,100,2.127,101,2.127,102,2.221,108,3.755,112,2.701,113,1.683,115,2.26,119,2.136,125,2.608,134,3.817,214,2.918,217,3.081,218,2.268,453,4.636,598,3.073,834,3.817,835,3.817,836,4.464,837,3.817,838,4.464,839,4.464,840,4.464]],["title/components/PageNotFoundComponent.html",[0,0.261,70,0.881]],["body/components/PageNotFoundComponent.html",[0,0.453,1,0.909,2,1.468,3,0.205,4,0.182,5,1.125,6,1.125,7,1.125,8,1.125,9,0.182,11,1.187,15,1.066,16,2.205,17,1.879,18,1.468,20,1.468,25,1.15,28,0.691,31,0.021,32,0.847,40,0.255,41,0.23,43,0.205,44,0.255,47,0.691,48,1.548,49,1.548,50,1.125,51,1.907,52,1.125,53,1.125,54,0.861,55,1.125,56,0.909,57,1.011,58,1.125,59,0.861,60,1.125,61,0.909,62,1.066,63,1.548,64,0.861,65,1.125,66,0.861,67,1.125,68,0.909,69,1.125,70,1.46,71,2.054,72,1.125,73,0.861,74,0.616,75,0.909,76,1.125,77,0.861,78,1.125,79,0.909,80,1.011,81,1.011,82,1.125,83,0.909,84,1.125,85,0.909,86,1.125,87,0.861,88,1.011,89,0.909,90,1.125,91,1.125,92,0.01,93,0.014,94,0.01,143,3.331,154,4.103,402,1.675,404,3.056,419,2.42,420,2.42,421,2.42,612,3.764,635,1.576,665,4.137,702,4.137,703,3.006,704,3.056,705,3.006,708,3.006,709,2.22,719,2.671,720,2.671,722,3.006,723,3.006,821,4.103,822,2.671,823,3.006,841,4.137,842,3.006,843,5.96,844,5.532,845,4.838,846,3.515,847,4.838,848,4.838,849,4.838,850,4.838,851,4.838,852,4.838,853,4.137,854,3.515,855,3.515,856,2.671]],["title/components/ResetPasswordComponent.html",[0,0.261,73,0.881]],["body/components/ResetPasswordComponent.html",[0,0.316,1,0.6,2,1.084,3,0.136,4,0.12,5,0.743,6,0.743,7,0.743,8,0.743,9,0.12,13,1.027,14,1.642,15,0.704,16,2.082,17,1.774,18,1.084,20,1.084,22,0.338,23,0.785,24,1.844,25,0.743,27,2.073,28,1.21,30,0.51,31,0.021,32,0.763,33,0.676,34,0.456,38,1.161,39,1.084,40,0.421,41,0.152,43,0.136,44,0.168,47,0.456,48,1.143,49,1.143,50,0.743,51,1.566,52,0.743,53,0.743,54,0.569,55,0.743,56,0.6,57,0.667,58,0.743,59,0.569,60,0.743,61,0.6,62,0.704,63,1.143,64,0.569,65,0.743,66,0.569,67,0.743,68,0.6,69,0.743,70,0.569,71,0.667,72,0.743,73,1.198,74,1.101,75,0.6,76,0.743,77,0.569,78,0.743,79,0.6,80,0.667,81,0.667,82,0.743,83,0.6,84,0.743,85,0.6,86,0.743,87,0.569,88,0.667,89,0.6,90,0.743,91,0.743,92,0.006,93,0.01,94,0.006,133,2.486,138,0.98,160,3.31,162,3.671,169,2.46,179,1.262,181,1.691,184,1.86,220,1.04,236,0.923,258,2.318,267,0.704,270,3.92,273,1.598,296,2.46,312,1.274,313,1.207,330,0.925,341,1.262,354,2.076,363,1.703,477,2.46,486,2.66,493,2.257,501,2.999,507,2.46,513,1.356,519,2.087,538,2.715,540,2.715,551,1.763,579,3.368,607,4.327,626,2.257,634,1.356,635,1.04,638,1.763,639,3.725,640,3.055,642,3.09,646,3.055,650,1.466,654,3.09,662,2.715,736,4.014,742,3.31,754,1.763,756,2.715,757,2.715,758,2.46,760,1.763,764,1.763,768,3.717,769,3.717,857,5.375,858,4.518,859,4.356,860,4.771,861,4.771,862,1.985,863,4.184,864,4.184,865,3.055,866,2.321,867,3.055,868,2.715,869,2.321,870,3.055,871,4.184,872,2.321,873,2.321,874,2.321,875,2.321,876,2.321,877,1.598,878,2.321,879,1.985,880,1.262,881,1.985,882,2.321,883,1.985,884,1.985,885,1.763,886,1.985,887,2.321,888,1.985,889,1.985,890,1.985,891,1.985,892,1.985,893,1.985,894,2.321,895,2.321,896,1.985,897,1.985,898,2.321,899,1.985,900,3.055]],["title/components/SidenavComponent.html",[0,0.261,75,0.93]],["body/components/SidenavComponent.html",[0,0.361,1,0.749,2,1.28,3,0.169,4,0.15,5,0.928,6,0.928,7,0.928,8,0.928,9,0.15,13,1.214,14,1.876,15,0.879,16,2.153,17,1.834,18,1.28,20,1.28,22,0.423,23,0.927,24,2.061,25,0.603,27,2.232,28,1.261,30,0.637,31,0.021,32,0.872,33,0.849,34,0.57,38,1.094,39,1.51,40,0.439,41,0.19,43,0.169,44,0.21,45,0.928,47,0.57,48,1.351,49,1.351,50,0.928,51,1.75,52,0.928,53,0.928,54,0.71,55,0.928,56,0.749,57,0.834,58,0.928,59,0.71,60,0.928,61,0.749,62,0.879,63,1.351,64,0.71,65,0.928,66,0.71,67,0.928,68,0.749,69,0.928,70,0.71,71,0.834,72,0.928,73,0.71,74,0.508,75,1.413,76,0.928,77,0.71,78,0.928,79,0.749,80,0.834,81,0.834,82,0.928,83,0.749,84,0.928,85,0.749,86,0.928,87,0.71,88,0.834,89,0.749,90,0.928,91,0.928,92,0.008,93,0.012,94,0.008,113,2.061,147,2.666,166,2.906,167,2.606,174,2.952,178,1.034,181,0.928,236,1.091,290,3.83,312,1.034,313,0.979,316,2.606,330,1.156,337,2.906,402,1.382,404,1.831,569,2.479,677,2.906,678,2.906,681,2.203,707,1.996,772,2.203,789,2.479,802,3.207,856,2.203,880,1.576,901,2.479,902,5.467,903,4.977,904,4.221,905,4.977,906,4.977,907,4.256,908,4.675,909,4.675,910,4.675,911,2.479,912,5.186,913,4.221,914,2.899,915,4.256,916,4.221,917,2.899,918,2.899,919,3.61,920,4.977,921,4.221,922,4.221,923,2.899,924,2.899,925,2.899,926,2.899,927,3.61,928,2.479,929,2.479,930,2.479,931,2.479,932,2.479,933,2.479,934,4.221,935,2.479,936,2.899,937,3.61,938,2.899]],["title/components/SignupComponent.html",[0,0.261,77,0.881]],["body/components/SignupComponent.html",[0,0.283,1,0.507,2,0.951,3,0.115,4,0.102,5,0.628,6,0.628,7,0.628,8,0.628,9,0.102,13,0.901,14,1.474,15,0.596,16,2.022,17,1.723,18,0.951,20,0.951,22,0.286,23,0.689,24,1.683,25,0.652,27,1.946,28,1.224,30,0.431,31,0.021,32,0.685,33,0.607,34,0.386,38,1.199,39,0.951,40,0.395,41,0.128,43,0.115,44,0.142,47,0.386,48,1.003,49,1.003,50,0.628,51,1.429,52,0.628,53,0.628,54,0.481,55,0.628,56,0.507,57,1.125,58,0.628,59,0.481,60,0.628,61,0.507,62,0.596,63,1.003,64,0.481,65,0.628,66,0.481,67,0.628,68,0.507,69,0.628,70,0.481,71,0.565,72,0.628,73,0.481,74,0.344,75,0.507,76,0.628,77,1.094,78,0.628,79,0.507,80,0.565,81,0.565,82,0.628,83,0.507,84,0.628,85,0.507,86,0.628,87,0.481,88,0.565,89,1.609,90,0.628,91,0.628,92,0.005,93,0.009,94,0.005,133,2.479,138,0.829,162,3.447,167,1.494,169,2.158,171,1.492,179,1.067,181,1.429,184,2.023,220,0.88,229,3.706,230,1.24,236,0.81,258,2.176,267,0.596,270,3.573,273,1.352,296,2.158,311,1.492,312,1.395,313,1.321,316,1.864,330,0.783,354,2.325,363,1.494,400,0.88,401,0.998,477,2.158,486,3.081,493,3.933,501,2.693,507,2.158,513,1.147,519,2.608,538,3.392,540,3.392,579,3.359,580,1.492,626,2.47,634,1.147,635,0.88,641,3.951,642,2.82,645,3.902,650,1.24,652,1.352,654,3.284,656,3.074,660,1.492,661,1.492,663,5.123,677,4.287,678,4.287,683,1.679,736,3.706,742,2.971,746,2.381,747,2.68,754,1.492,756,2.381,757,2.381,758,2.158,760,1.492,762,1.679,763,1.679,764,1.492,768,3.392,769,3.392,858,4.172,860,4.447,861,4.447,862,1.679,863,3.818,865,2.68,867,2.68,868,2.381,870,2.68,871,3.818,877,1.352,879,1.679,883,1.679,884,1.679,885,1.492,886,1.679,888,1.679,889,1.679,890,1.679,896,1.679,897,1.679,899,1.679,900,2.68,939,1.679,940,3.911,941,3.134,942,2.971,943,3.911,944,5.2,945,3.134,946,1.964,947,1.964,948,3.134,949,1.964,950,3.134,951,3.134,952,3.134,953,1.964,954,1.964,955,1.964,956,1.964,957,1.964,958,1.964,959,1.964,960,1.679,961,1.964,962,1.964,963,1.964,964,1.964,965,1.964,966,2.68,967,1.964,968,1.964,969,1.964,970,1.492,971,1.679,972,1.679]],["title/injectables/TaskHttpService.html",[177,1.283,480,1.955]],["body/injectables/TaskHttpService.html",[3,0.164,4,0.145,9,0.145,11,1.82,12,1.53,22,0.41,23,0.907,25,0.585,28,1.219,30,1.261,31,0.021,32,1.005,33,0.963,34,1.128,38,1.45,40,0.449,41,0.184,43,0.164,44,0.204,45,0.9,57,1.55,80,1.188,92,0.008,93,0.012,94,0.008,124,1.644,174,3.637,177,1.473,178,1.004,180,1.644,181,1.725,184,1.837,234,1.644,236,1.067,241,3.717,242,3.717,256,2.138,257,4.095,258,2.473,260,3.137,267,1.969,312,1.004,313,0.95,314,1.922,320,3.137,322,3.368,325,1.937,326,2.138,327,1.777,328,2.406,330,1.122,337,3.952,338,4.361,462,4.281,480,2.245,491,3.438,548,3.531,616,4.095,724,2.93,880,1.53,973,4.379,974,2.138,975,3.531,976,4.13,977,5.39,978,4.13,979,4.13,980,4.13,981,2.814,982,4.184,983,3.531,984,2.814,985,3.531,986,4.13,987,2.814,988,4.13,989,2.814,990,3.531,991,4.909,992,2.814,993,3.137,994,1.937,995,2.406,996,2.406,997,4.559,998,2.814,999,2.814,1000,2.814,1001,2.406,1002,2.814,1003,2.814]],["title/injectables/TaskStateService.html",[177,1.283,481,2.101]],["body/injectables/TaskStateService.html",[3,0.174,4,0.154,9,0.154,11,1.982,12,1.616,22,0.433,23,0.944,25,0.618,28,1.33,30,1.289,31,0.021,32,1.028,33,0.911,34,1.154,38,1.289,39,1.531,40,0.425,41,0.194,43,0.174,44,0.215,45,0.951,80,1.857,92,0.008,93,0.012,94,0.008,174,2.982,177,1.533,178,1.06,180,1.736,181,2.106,184,1.375,234,1.736,236,1.111,267,1.855,277,1.736,312,2.182,313,2.066,314,2.182,325,2.046,330,1.185,462,4.033,478,1.417,479,2.046,480,3.325,481,2.511,491,3.439,515,2.046,724,3.429,880,2.744,973,4.709,982,3.675,993,3.265,994,2.046,997,4.202,1004,2.542,1005,6.117,1006,6.117,1007,6.117,1008,4.298,1009,4.298,1010,4.298,1011,4.298,1012,4.298,1013,4.298,1014,2.972,1015,4.298,1016,2.972,1017,4.298,1018,2.972,1019,3.675,1020,3.808,1021,4.298,1022,2.972,1023,6.117,1024,2.972,1025,4.298,1026,2.972,1027,4.298,1028,2.972,1029,2.972,1030,4.298,1031,2.972,1032,2.972,1033,2.972,1034,2.972,1035,2.972,1036,2.972,1037,2.972,1038,2.972,1039,2.972,1040,2.972]],["title/components/TasksCardListComponent.html",[0,0.261,79,0.93]],["body/components/TasksCardListComponent.html",[0,0.263,1,0.455,2,0.87,3,0.103,4,0.091,5,0.563,6,0.563,7,0.563,8,0.563,9,0.091,11,1.415,13,0.825,15,0.534,16,1.979,17,1.686,18,0.87,20,0.87,22,0.257,23,0.63,25,0.596,28,1.27,30,1.146,31,0.021,32,0.986,33,0.954,34,1.026,38,1.195,39,1.501,40,0.408,41,0.115,43,0.103,44,0.128,47,0.346,48,0.918,49,0.918,50,0.563,51,1.34,52,0.563,53,0.563,54,0.431,55,0.563,56,0.455,57,0.506,58,0.563,59,0.703,60,0.563,61,0.455,62,0.534,63,0.918,64,0.431,65,0.563,66,0.431,67,0.563,68,0.455,69,0.563,70,0.431,71,0.506,72,0.563,73,0.431,74,0.308,75,0.455,76,0.563,77,0.431,78,0.563,79,1.083,80,1.703,81,2.071,82,0.563,83,0.455,84,0.563,85,0.455,86,0.563,87,0.431,88,0.506,89,0.455,90,0.563,91,0.563,92,0.008,93,0.008,94,0.005,133,1.458,145,1.458,175,3.582,176,1.812,178,0.628,181,2.105,236,0.741,258,2.08,263,1.212,267,2.061,277,3.38,312,1.295,313,1.227,314,1.295,316,2.358,326,1.337,330,0.702,354,0.839,356,1.212,406,1.028,411,1.028,424,0.957,446,4.956,461,2.5,462,3.693,465,2.759,472,2.884,475,1.812,478,2.358,479,1.212,480,2.689,481,3.048,483,2.294,489,1.975,490,2.18,491,3.314,497,3.945,498,2.759,511,1.812,514,1.337,515,1.212,516,1.337,531,2.18,532,2.18,547,1.505,551,1.337,552,1.505,557,1.337,558,1.337,562,2.759,574,1.212,587,1.337,612,1.111,627,2.453,628,1.505,629,1.505,634,1.028,635,0.789,724,1.974,728,2.453,729,3.106,730,3.582,809,2.453,814,4.231,942,2.759,975,2.453,983,2.453,985,4.231,990,1.505,994,1.212,997,3.182,1020,1.975,1041,5.578,1042,1.505,1043,3.632,1044,2.869,1045,4.613,1046,4.613,1047,2.869,1048,3.632,1049,2.869,1050,2.869,1051,2.869,1052,2.869,1053,3.632,1054,3.632,1055,4.189,1056,2.869,1057,1.76,1058,1.76,1059,1.76,1060,1.76,1061,1.76,1062,1.76,1063,1.76,1064,1.76,1065,2.869,1066,1.76,1067,3.406,1068,2.869,1069,1.76,1070,2.869,1071,1.76,1072,2.869,1073,1.76,1074,2.869,1075,1.76,1076,1.76,1077,1.76,1078,1.76,1079,1.76,1080,1.76,1081,2.869,1082,1.76,1083,1.76,1084,1.76,1085,1.76,1086,1.505,1087,1.76,1088,1.76,1089,1.76,1090,1.505,1091,3.632,1092,3.632,1093,2.869,1094,1.76,1095,1.76,1096,1.505,1097,1.505,1098,1.76,1099,1.76,1100,1.76,1101,1.76,1102,3.582,1103,2.869,1104,2.869,1105,1.76,1106,1.76,1107,1.505]],["title/components/TasksComponent.html",[0,0.261,83,0.93]],["body/components/TasksComponent.html",[0,0.38,1,0.589,2,1.069,3,0.133,4,0.118,5,0.729,6,0.729,7,0.729,8,0.729,9,0.118,11,1.19,13,1.013,14,1.623,15,0.691,16,2.076,17,1.78,18,1.069,20,1.069,22,0.332,23,0.774,24,1.826,25,0.474,28,1.301,30,0.501,31,0.021,32,0.754,33,0.86,34,0.448,38,1.151,39,1.306,40,0.401,41,0.149,43,0.133,44,0.165,45,0.729,47,0.448,48,1.127,49,1.127,50,0.729,51,1.551,52,0.729,53,0.729,54,0.558,55,0.729,56,0.589,57,0.655,58,0.729,59,0.558,60,0.729,61,0.589,62,0.691,63,1.127,64,0.558,65,0.729,66,0.558,67,0.729,68,0.589,69,0.729,70,0.558,71,0.655,72,0.729,73,0.558,74,0.399,75,0.589,76,0.729,77,0.558,78,0.729,79,0.589,80,1.923,81,1.013,82,0.729,83,1.252,84,0.729,85,0.589,86,0.729,87,0.558,88,0.655,89,0.589,90,0.729,91,0.729,92,0.006,93,0.01,94,0.006,133,1.158,174,3.235,178,0.813,181,2.095,184,1.551,236,0.91,277,1.331,312,1.728,313,1.636,314,1.728,316,2.497,330,0.909,356,1.569,363,1.086,400,1.93,401,2.188,402,2.052,403,1.731,404,1.439,405,1.949,406,2.831,408,2.425,409,3.012,410,1.731,411,1.331,412,1.949,413,1.949,414,1.569,415,1.239,416,1.331,419,1.569,420,1.569,421,1.569,422,1.949,423,1.949,424,1.915,425,1.949,426,1.949,461,2.965,462,2.831,465,3.272,472,3.336,478,1.086,479,1.569,480,3.011,481,3.373,489,2.425,490,2.676,491,1.158,495,2.425,498,3.272,514,1.731,515,1.569,516,1.731,531,1.731,532,1.731,536,3.012,557,1.731,558,1.731,581,1.569,587,1.731,679,3.683,709,1.439,724,2.341,727,1.949,856,1.731,880,1.239,881,3.012,942,3.272,960,3.012,966,3.012,970,1.731,994,1.569,1020,2.965,1086,1.949,1090,1.949,1096,1.949,1097,1.949,1107,1.949,1108,1.949,1109,4.306,1110,3.523,1111,4.306,1112,4.306,1113,4.306,1114,4.306,1115,4.845,1116,4.845,1117,4.845,1118,3.523,1119,2.279,1120,2.279,1121,2.279,1122,2.279,1123,2.279,1124,3.523,1125,2.279,1126,2.279,1127,2.279,1128,2.279,1129,2.279,1130,2.279,1131,2.279,1132,3.523,1133,2.279,1134,2.279,1135,2.279,1136,2.279,1137,4.306,1138,4.306,1139,2.279,1140,2.279,1141,2.279,1142,2.279,1143,2.279,1144,2.279,1145,2.279,1146,2.279,1147,2.279,1148,2.279,1149,2.279,1150,3.523,1151,3.012,1152,2.279,1153,2.279,1154,2.279]],["title/components/TopnavComponent.html",[0,0.261,85,0.93]],["body/components/TopnavComponent.html",[0,0.349,1,0.706,2,1.226,3,0.16,4,0.141,5,0.875,6,0.875,7,0.875,8,0.875,9,0.141,13,1.162,14,1.813,15,0.829,16,2.135,17,1.828,18,1.226,20,1.226,22,0.589,23,0.888,24,2.003,25,0.568,27,2.191,28,1.266,30,0.601,31,0.021,32,0.842,33,0.881,34,0.537,37,2.553,38,1.168,39,1.612,40,0.411,41,0.179,43,0.16,44,0.198,45,0.875,47,0.537,48,1.293,49,1.293,50,0.875,51,1.701,52,0.875,53,0.875,54,0.669,55,0.875,56,0.706,57,0.786,58,0.875,59,0.669,60,0.875,61,0.706,62,0.829,63,1.293,64,0.669,65,0.875,66,0.669,67,0.875,68,0.706,69,0.875,70,0.669,71,0.786,72,0.875,73,0.669,74,0.479,75,0.706,76,0.875,77,0.669,78,0.875,79,0.706,80,0.786,81,0.786,82,0.875,83,0.706,84,0.875,85,1.374,86,0.875,87,0.669,88,0.786,89,0.706,90,0.875,91,0.875,92,0.008,93,0.011,94,0.008,113,2.003,147,2.553,167,1.926,174,2.882,178,0.975,181,0.875,236,1.045,277,2.361,290,3.75,314,1.442,330,1.09,363,1.926,400,1.225,401,2.054,415,1.486,424,2.615,475,2.553,478,1.302,483,3.582,511,3.038,635,1.225,677,2.783,678,2.783,681,2.076,688,3.071,704,1.726,710,2.076,714,2.337,719,3.071,720,2.076,772,2.076,802,3.071,819,2.337,880,1.486,907,4.113,908,4.545,909,4.545,910,4.545,911,2.337,912,5.078,915,2.337,919,3.457,927,3.457,928,2.337,929,2.337,930,2.337,931,2.337,932,2.337,933,2.337,935,2.337,937,3.457,1020,2.783,1067,2.783,1155,2.337,1156,4.042,1157,4.81,1158,4.042,1159,5.315,1160,4.81,1161,4.81,1162,4.042,1163,2.733,1164,2.733,1165,2.733,1166,2.733,1167,4.042,1168,4.81,1169,2.733,1170,2.733,1171,2.733,1172,2.733,1173,2.733,1174,2.733,1175,2.733,1176,2.733,1177,2.733,1178,2.733,1179,2.733,1180,2.733,1181,2.733,1182,3.457,1183,2.733,1184,2.733,1185,2.733,1186,2.733,1187,2.733]],["title/injectables/UIService.html",[177,1.283,258,1.434]],["body/injectables/UIService.html",[3,0.245,4,0.216,9,0.216,11,1.413,12,2.274,22,0.61,23,1.194,25,0.87,28,1.187,30,1.194,31,0.021,32,0.952,33,0.844,34,1.069,38,0.919,39,1.269,40,0.438,41,0.274,43,0.245,44,0.303,45,1.339,92,0.012,93,0.015,94,0.012,167,3.047,177,1.939,178,1.492,180,2.444,234,2.444,236,1.405,258,2.168,267,1.832,305,5.164,308,5.467,312,1.492,313,1.413,314,1.939,325,2.88,400,2.436,575,2.591,612,3.433,704,4.037,796,3.578,797,5.164,1067,3.743,1151,5.467,1188,3.578,1189,5.436,1190,6.039,1191,6.039,1192,4.184,1193,6.393,1194,5.436,1195,5.436,1196,4.184,1197,6.393,1198,4.184,1199,5.436,1200,5.436,1201,5.436,1202,5.436,1203,4.184,1204,4.184]],["title/pipes/UppercaseFirstLetterPipe.html",[341,1.955,431,2.271]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.287,4,0.254,9,0.254,11,1.659,13,1.413,15,1.49,23,1.08,28,0.966,30,1.08,31,0.021,32,1.139,33,0.763,34,0.966,38,1.08,40,0.356,41,0.321,43,0.287,44,0.356,92,0.014,93,0.017,94,0.014,184,1.925,313,2.032,341,3.27,431,3.8,442,5.145,443,5.149,822,4.94,1102,5.145,1205,4.913,1206,5.145,1207,4.201,1208,6.016,1209,6.016,1210,4.913,1211,6.016,1212,4.913,1213,4.913]],["title/injectables/UserService.html",[177,1.283,1214,2.476]],["body/injectables/UserService.html",[3,0.255,4,0.226,9,0.226,12,2.374,22,0.637,23,1.228,25,0.908,28,1.211,30,1.228,31,0.021,32,0.979,33,0.867,34,1.098,38,0.959,40,0.487,41,0.285,43,0.255,44,0.316,45,1.397,92,0.012,93,0.016,94,0.012,124,2.551,167,3.273,174,3.131,177,1.993,178,1.557,180,2.551,181,1.972,184,1.397,234,2.551,236,1.444,241,4.682,242,4.682,256,3.317,257,4.936,260,4.245,267,1.869,312,1.557,313,1.475,320,4.245,322,3.006,323,2.758,324,3.734,327,2.758,337,3.006,338,3.317,491,2.219,991,5.27,993,4.245,1001,3.734,1214,3.847,1215,3.734,1216,5.588,1217,5.588,1218,4.367,1219,4.367]],["title/components/VerifyEmailComponent.html",[0,0.261,87,0.881]],["body/components/VerifyEmailComponent.html",[0,0.324,1,0.627,2,1.121,3,0.142,4,0.125,5,0.776,6,0.776,7,0.776,8,0.776,9,0.125,13,1.063,14,1.687,15,0.736,16,2.097,17,1.787,18,1.121,20,1.121,22,0.354,23,0.812,24,1.887,25,0.768,26,1.417,27,2.025,28,1.16,30,0.533,31,0.021,32,0.784,33,0.777,34,0.477,38,0.984,39,1.121,40,0.428,41,0.159,43,0.142,44,0.176,47,0.477,48,1.182,49,1.182,50,0.776,51,1.602,52,0.776,53,0.776,54,0.594,55,0.776,56,0.627,57,0.697,58,0.776,59,0.594,60,0.776,61,0.627,62,0.736,63,1.182,64,0.594,65,0.776,66,0.594,67,0.776,68,0.627,69,0.776,70,0.594,71,0.697,72,0.776,73,0.594,74,0.425,75,0.627,76,0.776,77,0.594,78,0.776,79,0.627,80,0.697,81,1.063,82,0.776,83,0.627,84,0.776,85,0.627,86,0.776,87,1.226,88,1.793,89,1.837,90,0.776,91,0.776,92,0.007,93,0.01,94,0.007,133,1.878,138,1.024,160,3.401,171,1.842,176,2.334,179,1.318,181,1.602,184,1.602,220,1.087,230,1.532,236,0.955,239,3.16,258,2.354,267,1.518,280,4.281,290,2.334,294,3.16,314,1.922,316,1.761,330,0.967,341,1.318,348,3.16,354,1.761,385,2.544,391,3.16,400,1.087,401,1.878,402,2.386,406,2.159,408,2.544,414,2.544,415,2.009,416,1.417,424,1.318,486,2.009,512,3.082,513,1.417,518,1.67,519,1.417,579,1.67,581,2.544,582,1.842,583,1.842,605,4.189,618,2.074,623,4.608,626,1.532,632,3.16,634,1.417,635,1.087,641,4.313,642,3.161,645,2.544,650,1.532,651,2.074,652,1.67,653,2.074,654,2.827,655,2.074,656,1.67,660,1.842,661,1.842,662,2.807,709,1.532,732,2.074,746,2.807,821,2.544,864,4.281,880,1.318,891,2.074,892,2.074,893,2.074,970,1.842,971,2.074,972,2.074,1214,4.064,1220,5.204,1221,2.074,1222,4.477,1223,3.695,1224,4.477,1225,3.695,1226,2.425,1227,2.425,1228,5.006,1229,2.425,1230,2.425,1231,2.425,1232,2.425,1233,2.425,1234,2.425,1235,2.425,1236,2.425,1237,2.425,1238,2.425,1239,2.425,1240,2.425,1241,4.477,1242,2.425,1243,2.425,1244,3.695,1245,3.695,1246,2.425]],["title/coverage.html",[1247,4.203]],["body/coverage.html",[0,0.524,1,0.931,9,0.186,10,3.082,27,1.285,31,0.021,33,0.559,54,0.883,56,0.931,59,0.883,61,0.931,64,0.883,66,0.883,68,0.931,70,0.883,73,0.883,75,0.931,77,0.883,79,0.931,81,1.415,83,0.931,85,0.931,87,0.883,92,0.01,93,0.014,94,0.01,110,2.276,111,2.276,140,2.481,143,2.481,157,2.481,159,3.082,177,2.249,186,3.108,188,3.082,226,2.738,235,2.738,258,1.437,314,1.285,323,2.276,327,3.108,341,1.959,363,3.174,395,3.082,431,2.276,440,2.738,443,2.738,446,2.738,457,3.082,458,3.082,480,1.959,481,2.105,561,3.739,567,2.481,575,2.671,605,2.481,607,2.481,611,3.082,637,3.082,638,3.739,664,3.082,707,3.388,724,1.959,725,3.082,731,3.082,733,3.082,806,3.082,821,4.146,841,3.082,842,3.082,857,3.082,877,2.481,901,3.082,939,3.082,973,3.388,974,2.738,1004,3.082,1041,3.082,1042,3.082,1108,3.082,1155,3.082,1188,3.082,1206,3.082,1207,3.082,1214,2.481,1215,3.082,1220,3.082,1221,3.082,1247,3.082,1248,3.082,1249,3.604,1250,3.604,1251,6.023,1252,6.023,1253,3.604,1254,3.604,1255,6.305,1256,4.922,1257,4.922,1258,4.922,1259,4.922,1260,4.922,1261,3.082,1262,3.082,1263,3.604,1264,4.922,1265,3.604,1266,3.604,1267,3.604,1268,3.604,1269,3.604,1270,3.604,1271,3.604,1272,3.604,1273,3.082,1274,3.604,1275,3.604,1276,3.604,1277,3.604,1278,4.922,1279,3.604,1280,3.604,1281,3.604,1282,3.604,1283,3.604,1284,3.082,1285,4.922,1286,4.922,1287,3.082,1288,3.604,1289,3.604]],["title/dependencies.html",[98,1.828,1290,3]],["body/dependencies.html",[31,0.021,41,0.334,92,0.014,93,0.017,94,0.014,98,2.16,117,5.271,118,4.683,138,2.16,178,1.824,218,2.598,220,2.292,459,4.373,1291,5.114,1292,7.287,1293,5.114,1294,4.373,1295,5.114,1296,5.114,1297,5.114,1298,5.114,1299,5.114,1300,5.114,1301,5.114,1302,5.114,1303,5.114,1304,5.114,1305,5.114,1306,5.114,1307,5.114]],["title/miscellaneous/functions.html",[1308,1.753,1309,3.7]],["body/miscellaneous/functions.html",[22,0.775,30,1.168,31,0.019,32,0.931,34,1.045,92,0.015,93,0.018,94,0.015,154,3.661,166,3.661,184,1.702,196,3.661,612,3.985,758,3.661,868,4.04,877,4.344,885,4.794,1261,4.547,1262,5.396,1308,3.106,1309,4.547,1310,5.318,1311,5.318,1312,6.31,1313,5.318,1314,5.318,1315,5.318,1316,5.318,1317,6.31,1318,5.318,1319,5.318,1320,5.318]],["title/index.html",[22,0.437,1321,3,1322,3]],["body/index.html",[0,0.456,4,0.236,17,1.18,31,0.016,32,0.8,92,0.013,93,0.016,94,0.013,113,1.721,154,3.143,166,3.143,314,1.628,616,4.367,688,3.469,692,5.38,853,3.904,1019,3.904,1067,3.143,1248,4.916,1294,3.904,1323,4.566,1324,6.292,1325,6.292,1326,4.566,1327,4.566,1328,4.566,1329,6.806,1330,7.053,1331,4.566,1332,4.566,1333,4.566,1334,4.566,1335,4.566,1336,4.566,1337,4.566,1338,4.566,1339,6.292,1340,6.292,1341,4.566,1342,6.806,1343,4.566,1344,4.566,1345,4.566,1346,4.566,1347,4.566,1348,4.566,1349,3.904,1350,5.748,1351,5.748,1352,6.604,1353,4.566,1354,5.748,1355,5.748,1356,4.566,1357,6.604,1358,4.566,1359,4.566,1360,4.566,1361,6.292,1362,4.566,1363,4.566]],["title/modules.html",[97,1.573]],["body/modules.html",[31,0.017,92,0.014,93,0.017,94,0.014,96,3.424,97,1.592,108,2.704,109,3.141,118,5.509,209,3.424,213,3.141,214,2.101,215,2.906,427,3.424,432,3.141,433,3.141,453,3.141,599,3.424,603,3.141,1364,7.251,1365,7.251,1366,7.438,1367,6.977,1368,6.977]],["title/overview.html",[1369,4.203]],["body/overview.html",[1,1.658,2,0.954,31,0.021,47,0.618,54,1.276,56,1.347,59,1.571,61,1.347,64,1.276,66,1.276,68,1.658,70,1.276,73,1.276,74,0.551,75,1.658,77,1.276,79,1.347,83,1.347,85,1.347,87,1.276,92,0.009,93,0.013,94,0.009,95,0.73,96,4.8,97,1.007,98,1.329,99,1.499,100,1.499,101,1.499,102,1.122,103,2.69,104,2.69,105,2.69,106,2.69,107,2.69,108,3.261,109,4.435,110,3.291,111,3.291,112,2.133,113,1.185,136,1.71,157,2.165,209,4.835,210,2.69,211,2.69,212,2.69,213,3.291,214,2.818,215,3.897,234,1.837,341,1.71,427,4.976,428,2.69,429,2.69,430,2.69,431,3.291,432,3.291,433,4.141,449,2.69,450,2.69,451,2.69,452,2.69,453,4.488,539,2.69,590,2.165,591,2.69,592,2.69,594,2.69,599,4.658,600,2.69,601,2.69,602,2.69,603,3.291,828,2.69,829,2.69,831,2.69,834,2.69,835,2.69,837,2.69,1182,3.828,1273,2.69,1369,2.69,1370,3.145,1371,3.145,1372,3.145]],["title/routes.html",[136,2.672]],["body/routes.html",[31,0.019,92,0.016,93,0.019,94,0.016,136,3.178]],["title/miscellaneous/typealiases.html",[1308,1.753,1373,4.327]],["body/miscellaneous/typealiases.html",[22,0.805,31,0.018,33,0.857,92,0.015,93,0.018,94,0.015,235,4.196,322,4.706,331,5.518,973,3.802,974,5.193,995,5.518,996,5.518,1308,3.226,1374,5.523,1375,6.453,1376,5.523]],["title/miscellaneous/variables.html",[1308,1.753,1377,3.7]],["body/miscellaneous/variables.html",[22,0.775,31,0.021,33,0.98,92,0.015,93,0.018,94,0.015,133,2.702,312,2.251,313,2.131,316,2.534,327,4.395,1284,4.547,1287,4.547,1308,3.106,1349,5.396,1377,4.547,1378,5.318,1379,5.318,1380,6.31,1381,6.31,1382,5.318,1383,5.318]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["0.6",{"_index":818,"title":{},"body":{"components/ModalComponent.html":{}}}],["0.7",{"_index":712,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1182,"title":{},"body":{"components/TopnavComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":721,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.6",{"_index":718,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":707,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["100vw",{"_index":817,"title":{},"body":{"components/ModalComponent.html":{}}}],["1035px",{"_index":422,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":1107,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["13",{"_index":1370,"title":{},"body":{"overview.html":{}}}],["15/23",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1273,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["19",{"_index":1372,"title":{},"body":{"overview.html":{}}}],["2",{"_index":952,"title":{},"body":{"components/SignupComponent.html":{}}}],["2.0.8",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["2.6.10",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":543,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["200",{"_index":824,"title":{},"body":{"components/ModalComponent.html":{}}}],["200px",{"_index":938,"title":{},"body":{"components/SidenavComponent.html":{}}}],["20px",{"_index":423,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["24px",{"_index":1183,"title":{},"body":{"components/TopnavComponent.html":{}}}],["25rem",{"_index":715,"title":{},"body":{"components/HomeComponent.html":{}}}],["27",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":539,"title":{},"body":{"components/CreateTaskComponent.html":{},"overview.html":{}}}],["3/7",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["3000",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":581,"title":{},"body":{"components/DialogComponent.html":{},"components/ModalComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["30px",{"_index":589,"title":{},"body":{"components/DialogComponent.html":{}}}],["33",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1185,"title":{},"body":{"components/TopnavComponent.html":{}}}],["404",{"_index":843,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40px",{"_index":407,"title":{},"body":{"components/BoardComponent.html":{}}}],["42",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":855,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["4px",{"_index":827,"title":{},"body":{"components/ModalComponent.html":{}}}],["5",{"_index":1371,"title":{},"body":{"overview.html":{}}}],["5/15",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["5/18",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":821,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["5000",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["50px",{"_index":1246,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["56px",{"_index":723,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":722,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5px",{"_index":418,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":871,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["6.5.3",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":703,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["65",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["8.0.2",{"_index":1294,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.14",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":405,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["90",{"_index":403,"title":{},"body":{"components/BoardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/TasksComponent.html":{}}}],["99",{"_index":1177,"title":{},"body":{"components/TopnavComponent.html":{}}}],["absolute",{"_index":708,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["abstractcontrol",{"_index":507,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["access",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":477,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["account's",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":1151,"title":{},"body":{"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["activatedroute",{"_index":864,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["actual_component",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["add",{"_index":536,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["address",{"_index":1228,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["afterclosed",{"_index":1085,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["again",{"_index":628,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["aliases",{"_index":1374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":415,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["already",{"_index":1316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1324,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":774,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":772,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["angular/common",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"modules/EmailModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":777,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":804,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":574,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/MaterialModule.html":{},"components/TasksCardListComponent.html":{}}}],["angular/material/divider",{"_index":779,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":781,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":783,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":785,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":787,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":793,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":789,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/slide",{"_index":801,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":796,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":791,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":799,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiurl",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["app.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":108,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":413,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["artifacts",{"_index":1343,"title":{},"body":{"index.html":{}}}],["async",{"_index":1048,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["auth",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["auth/auth.guard",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/TopnavComponent.html":{}}}],["authguard",{"_index":140,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":110,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["authmodule",{"_index":209,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":203,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":213,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["authtoken",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":408,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["automatically",{"_index":1335,"title":{},"body":{"index.html":{}}}],["available",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["await",{"_index":1094,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backdrop",{"_index":815,"title":{},"body":{"components/ModalComponent.html":{}}}],["background",{"_index":697,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["backtooltip",{"_index":1053,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backward",{"_index":1045,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["bar",{"_index":797,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":1180,"title":{},"body":{"components/TopnavComponent.html":{}}}],["bearer",{"_index":207,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["behaviorsubject",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(null",{"_index":1023,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["behaviorsubject(this.isauthenticated",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(true",{"_index":1202,"title":{},"body":{"injectables/UIService.html":{}}}],["board",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["board'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["board.component",{"_index":437,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["board.component.css",{"_index":396,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":397,"title":{},"body":{"components/BoardComponent.html":{}}}],["board__item",{"_index":417,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":54,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardmodule",{"_index":427,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["boardroutingmodule",{"_index":432,"title":{"modules/BoardRoutingModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["border",{"_index":825,"title":{},"body":{"components/ModalComponent.html":{}}}],["bottom",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["breakpointobserver",{"_index":912,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["breakpoints",{"_index":915,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["browse",{"_index":1366,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1342,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["button:not(:last",{"_index":586,"title":{},"body":{"components/DialogComponent.html":{}}}],["calc(100",{"_index":702,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["call",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{}}}],["cancel",{"_index":560,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["canload",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1098,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["catcherror",{"_index":618,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["catcherror((error",{"_index":622,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":1238,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["center",{"_index":416,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["center/cover",{"_index":701,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1067,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":540,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":587,"title":{},"body":{"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["clear",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1325,"title":{},"body":{"index.html":{}}}],["close",{"_index":476,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{}}}],["cluster_appmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":428,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":429,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":430,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":449,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":450,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":452,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":451,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_dialogmodule",{"_index":591,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_declarations",{"_index":592,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_exports",{"_index":594,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_imports",{"_index":593,"title":{},"body":{"modules/DialogModule.html":{}}}],["cluster_emailmodule",{"_index":600,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_declarations",{"_index":601,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_imports",{"_index":602,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":828,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":829,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":831,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_imports",{"_index":830,"title":{},"body":{"modules/ModalModule.html":{}}}],["cluster_navigationmodule",{"_index":834,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_declarations",{"_index":835,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_exports",{"_index":837,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_imports",{"_index":836,"title":{},"body":{"modules/NavigationModule.html":{}}}],["code",{"_index":1337,"title":{},"body":{"index.html":{}}}],["color",{"_index":710,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/TopnavComponent.html":{}}}],["column",{"_index":583,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["commonmodule",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/EmailRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["components/dialog/dialog.module",{"_index":436,"title":{},"body":{"modules/BoardModule.html":{}}}],["components/modal/modal.module",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{}}}],["concatmap",{"_index":1233,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(res",{"_index":1236,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["concatmap(token",{"_index":1234,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["confirm",{"_index":579,"title":{},"body":{"components/DialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmation",{"_index":972,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["confirmpassword",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["const",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"components/TasksCardListComponent.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":576,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["constructor(breakpointobserver",{"_index":911,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["constructor(data",{"_index":566,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(fb",{"_index":862,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(http",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["constructor(router",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":1192,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(taskhttpservice",{"_index":479,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(uiservice",{"_index":613,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":856,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["content",{"_index":411,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["control",{"_index":506,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["controlname",{"_index":1320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":109,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1247,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["created",{"_index":982,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["createtask",{"_index":548,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{}}}],["createtask(task",{"_index":980,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["createtaskcomponent",{"_index":56,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":460,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creation",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":727,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksComponent.html":{}}}],["custom",{"_index":1313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{}}}],["data.content",{"_index":578,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.title",{"_index":577,"title":{},"body":{"components/DialogComponent.html":{}}}],["date",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationdate",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(now.gettime",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["decorators",{"_index":569,"title":{},"body":{"components/DialogComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["delete",{"_index":985,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deleted",{"_index":849,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletetask",{"_index":975,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deletetask(id",{"_index":983,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/PageNotFoundComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["descriptipon",{"_index":510,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["destroy",{"_index":465,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["dev",{"_index":1332,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["development",{"_index":1328,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":562,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{}}}],["dialog'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["dialog.component",{"_index":597,"title":{},"body":{"modules/DialogModule.html":{}}}],["dialog.component.css",{"_index":563,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialog.component.html",{"_index":564,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialogcomponent",{"_index":59,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogdata",{"_index":567,"title":{"interfaces/DialogData.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":433,"title":{"modules/DialogModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DialogModule.html":{},"modules.html":{},"overview.html":{}}}],["dialogref",{"_index":1081,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["direction",{"_index":582,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directives",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1341,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1346,"title":{},"body":{"index.html":{}}}],["display",{"_index":400,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["dist",{"_index":1345,"title":{},"body":{"index.html":{}}}],["divider",{"_index":425,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["documentation",{"_index":1248,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doing",{"_index":729,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["doingtasks",{"_index":1111,"title":{},"body":{"components/TasksComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["done",{"_index":730,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["done_all",{"_index":1104,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["donetasks",{"_index":1112,"title":{},"body":{"components/TasksComponent.html":{}}}],["dragdropmodule",{"_index":773,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":905,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drop",{"_index":775,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":459,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1358,"title":{},"body":{"index.html":{}}}],["easy",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["edit",{"_index":497,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["element",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["email.component",{"_index":606,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{}}}],["email.component.css",{"_index":1222,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.html",{"_index":1223,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts",{"_index":1221,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:15",{"_index":1230,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:16",{"_index":1231,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:17",{"_index":1225,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:29",{"_index":1227,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:52",{"_index":1226,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email.component.ts:64",{"_index":1229,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["email/${token",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/token",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/verify",{"_index":605,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["emailerrorhandler",{"_index":739,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailmodule",{"_index":599,"title":{"modules/EmailModule.html":{}},"body":{"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailroutingmodule",{"_index":603,"title":{"modules/EmailRoutingModule.html":{}},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["end",{"_index":1357,"title":{},"body":{"index.html":{}}}],["enter",{"_index":654,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["entrycomponents",{"_index":596,"title":{},"body":{"modules/DialogModule.html":{}}}],["environment",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["environments/environment",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["error",{"_index":612,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":632,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["errorinterceptor",{"_index":111,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":623,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/VerifyEmailComponent.html":{}}}],["errors",{"_index":486,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["eventemitter",{"_index":483,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["execute",{"_index":1354,"title":{},"body":{"index.html":{}}}],["exist",{"_index":848,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expansion",{"_index":1105,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["expirationdate",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":1240,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["expires",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["exports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["fab",{"_index":1153,"title":{},"body":{"components/TasksComponent.html":{}}}],["fails",{"_index":1319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":865,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["fff",{"_index":714,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["field",{"_index":663,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["fields",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["files",{"_index":1336,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":960,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["first",{"_index":443,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["firstname",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/SignupComponent.html":{}}}],["fixed",{"_index":816,"title":{},"body":{"components/ModalComponent.html":{}}}],["flag",{"_index":1348,"title":{},"body":{"index.html":{}}}],["flex",{"_index":401,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["font",{"_index":719,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["forgot",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["forgotpassword",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":61,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":493,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formbuilder",{"_index":863,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":512,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formcontrol(null",{"_index":518,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["formctrls",{"_index":742,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formctrls.password.value?.length",{"_index":900,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formgroup",{"_index":501,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":435,"title":{},"body":{"modules/BoardModule.html":{}}}],["forward",{"_index":1046,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["forwardtooltip",{"_index":1054,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["found",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["found.component",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.css",{"_index":844,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":845,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":842,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":846,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1309,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1360,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1339,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1323,"title":{},"body":{"index.html":{}}}],["getalltasks",{"_index":1115,"title":{},"body":{"components/TasksComponent.html":{}}}],["getauthdata",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["getconfirmpassworderrors",{"_index":860,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getdescription",{"_index":508,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getdescriptionerrors",{"_index":470,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getemailerrors",{"_index":641,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["getemailverificationtoken",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemailverificationtoken(token",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfirstnameerrors",{"_index":944,"title":{},"body":{"components/SignupComponent.html":{}}}],["getformctrls",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmappedtask",{"_index":1008,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(id",{"_index":1013,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(this.taskid",{"_index":528,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getpassworderrors",{"_index":861,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["gettask",{"_index":976,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettask(id",{"_index":986,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettaskid",{"_index":1009,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettaskid(id",{"_index":1015,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettasks",{"_index":977,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["getter",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getting",{"_index":1321,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":504,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettitleerrors",{"_index":471,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["getupdatedtaskslist",{"_index":1116,"title":{},"body":{"components/TasksComponent.html":{}}}],["go",{"_index":853,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["graph",{"_index":1367,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":157,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hammerjs",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":645,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["header",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":205,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":854,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":404,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1361,"title":{},"body":{"index.html":{}}}],["helps",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1327,"title":{},"body":{"index.html":{}}}],["heroku_url",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hideconfirmpassword",{"_index":858,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["hidepassword",{"_index":736,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["home.component.css",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":455,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":713,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":64,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":580,"title":{},"body":{"components/DialogComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["html",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["http",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["http.service",{"_index":515,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["http.service.ts",{"_index":974,"title":{},"body":{"injectables/TaskHttpService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http.service.ts:16",{"_index":979,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:25",{"_index":981,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:34",{"_index":989,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:45",{"_index":992,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:54",{"_index":984,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:63",{"_index":987,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http://localhost:3000/api/v2",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1334,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":617,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":491,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":699,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["import",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["import('./auth/auth.module').then(m",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./board/board.module').then(m",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./email/email.module').then(m",{"_index":231,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{}}}],["inbox",{"_index":661,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["inconvinience",{"_index":631,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["inform",{"_index":1200,"title":{},"body":{"injectables/UIService.html":{}}}],["initauthentication",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialize",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["inject",{"_index":572,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["inject(mat_dialog_data",{"_index":570,"title":{},"body":{"components/DialogComponent.html":{}}}],["injectable",{"_index":177,"title":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":814,"title":{},"body":{"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{}}}],["inputs",{"_index":809,"title":{},"body":{"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{}}}],["intercept",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":186,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":575,"title":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["interfaces",{"_index":590,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["isauth",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["isauth(val",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarktheme",{"_index":906,"title":{},"body":{"components/SidenavComponent.html":{}}}],["isforgotpassword",{"_index":737,"title":{},"body":{"components/LoginComponent.html":{}}}],["ishandset",{"_index":907,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isloading",{"_index":942,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["isloggedin",{"_index":908,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isopen",{"_index":1113,"title":{},"body":{"components/TasksComponent.html":{}}}],["isverified",{"_index":732,"title":{},"body":{"interfaces/IUser.html":{},"components/VerifyEmailComponent.html":{}}}],["isvisible",{"_index":1224,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["itask",{"_index":724,"title":{"interfaces/ITask.html":{}},"body":{"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["item",{"_index":1187,"title":{},"body":{"components/TopnavComponent.html":{}}}],["items",{"_index":584,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["iuser",{"_index":323,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["js",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":410,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1356,"title":{},"body":{"index.html":{}}}],["keep",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["key",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["later",{"_index":629,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["layoutmodule",{"_index":771,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":709,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["legend",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["letter",{"_index":1208,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":444,"title":{},"body":{"modules/BoardModule.html":{}}}],["letter.pipe.ts",{"_index":1207,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":1210,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":717,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["list",{"_index":1020,"title":{},"body":{"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["list'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["list.component",{"_index":447,"title":{},"body":{"modules/BoardModule.html":{}}}],["list.component.css",{"_index":1043,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.html",{"_index":1044,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts",{"_index":1042,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:112",{"_index":1064,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:17",{"_index":1060,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:18",{"_index":1061,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:19",{"_index":1058,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:20",{"_index":1057,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:21",{"_index":1059,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:22",{"_index":1062,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:23",{"_index":1077,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:24",{"_index":1076,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:25",{"_index":1056,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:34",{"_index":1073,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:43",{"_index":1071,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:58",{"_index":1063,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:66",{"_index":1075,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:76",{"_index":1066,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:87",{"_index":1069,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list/tasks",{"_index":446,"title":{},"body":{"modules/BoardModule.html":{},"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list:not(:last",{"_index":1154,"title":{},"body":{"components/TasksComponent.html":{}}}],["listen",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["literal",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["loadchildren",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["loaded",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":1190,"title":{},"body":{"injectables/UIService.html":{}}}],["local",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["logged",{"_index":916,"title":{},"body":{"components/SidenavComponent.html":{}}}],["login",{"_index":230,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["login(email",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":734,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":735,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":66,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":738,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":847,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":851,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.boardmodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailmodule",{"_index":232,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["main",{"_index":1178,"title":{},"body":{"components/TopnavComponent.html":{}}}],["map",{"_index":880,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["map((res",{"_index":1033,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["map(param",{"_index":892,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["map(res",{"_index":1144,"title":{},"body":{"components/TasksComponent.html":{}}}],["map(result",{"_index":930,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["margin",{"_index":406,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat",{"_index":424,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mat_dialog_data",{"_index":573,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["matbuttonmodule",{"_index":776,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":803,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":868,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["match.validator",{"_index":879,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":1055,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["matdialogmodule",{"_index":805,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":778,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["materialmodule",{"_index":214,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":780,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":782,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":784,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":786,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":792,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":920,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":788,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":800,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":1193,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":795,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":1197,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":790,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":798,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":421,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["maximum",{"_index":542,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["media",{"_index":419,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["menu",{"_index":937,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["message",{"_index":1201,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["min",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["mini",{"_index":1152,"title":{},"body":{"components/TasksComponent.html":{}}}],["minimum",{"_index":538,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":1308,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":495,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksComponent.html":{}}}],["modal'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["modal.component",{"_index":833,"title":{},"body":{"modules/ModalModule.html":{}}}],["modal.component.css",{"_index":807,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.html",{"_index":808,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.mat",{"_index":820,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":68,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmodule",{"_index":215,"title":{"modules/ModalModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/ModalModule.html":{},"modules.html":{},"overview.html":{}}}],["modaltitle",{"_index":466,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["mode",{"_index":467,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["model",{"_index":726,"title":{},"body":{"interfaces/ITask.html":{}}}],["module",{"_index":95,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":625,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1362,"title":{},"body":{"index.html":{}}}],["multi",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":877,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":886,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":1186,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigate",{"_index":1333,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1168,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigation/navigation.module",{"_index":456,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationmodule",{"_index":453,"title":{"modules/NavigationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["need",{"_index":852,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["never",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":208,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":621,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1330,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{}}}],["ngondestroy",{"_index":472,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["none",{"_index":426,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["now",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["now.gettime",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["number",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["object",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{}}}],["observables",{"_index":490,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["observe",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["onbackward",{"_index":1047,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onbackward(id",{"_index":1065,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus",{"_index":1049,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus(id",{"_index":1068,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onclose",{"_index":473,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{}}}],["ondelete",{"_index":1050,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondelete(id",{"_index":1070,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondestroy",{"_index":461,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onedit",{"_index":1051,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onedit(id",{"_index":1072,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforgotpassword",{"_index":740,"title":{},"body":{"components/LoginComponent.html":{}}}],["onforward",{"_index":1052,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward(id",{"_index":1074,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["onlogout",{"_index":909,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["onsave",{"_index":474,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["onsignup",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":642,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["ontogglesidenav",{"_index":1159,"title":{},"body":{"components/TopnavComponent.html":{}}}],["ontoggletheme",{"_index":910,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["open/close",{"_index":1124,"title":{},"body":{"components/TasksComponent.html":{}}}],["optional",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":511,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["outputs",{"_index":475,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["overlay",{"_index":706,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":1369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":716,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1290,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["pagenotfoundcomponent",{"_index":70,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel:not(:last",{"_index":1106,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["param",{"_index":997,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{}}}],["param.get('token",{"_index":893,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["partial",{"_index":991,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["password'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["password.component",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{}}}],["password.component.css",{"_index":639,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":640,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":638,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":649,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:13",{"_index":643,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":875,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":874,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":646,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":644,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":872,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":648,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":876,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":647,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":869,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:61",{"_index":866,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":873,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/${token",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/:token",{"_index":610,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["password/forgot",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":607,"title":{},"body":{"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passworderrorhandler",{"_index":741,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwords",{"_index":867,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["permissions",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":341,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(finalize",{"_index":969,"title":{},"body":{"components/SignupComponent.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":1086,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["pipes",{"_index":1205,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipetransform",{"_index":1211,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["please",{"_index":626,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["position",{"_index":704,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["post(`${this.url}/login",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["primary",{"_index":1175,"title":{},"body":{"components/TopnavComponent.html":{}}}],["private",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["probably",{"_index":850,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1347,"title":{},"body":{"index.html":{}}}],["production",{"_index":1349,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"components/TasksCardListComponent.html":{}}}],["properties",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["protected",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":1359,"title":{},"body":{"index.html":{}}}],["provide",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["public",{"_index":565,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["radius",{"_index":826,"title":{},"body":{"components/ModalComponent.html":{}}}],["raised",{"_index":585,"title":{},"body":{"components/DialogComponent.html":{}}}],["reactive",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/EmailModule.html":{}}}],["readme",{"_index":1363,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["receive",{"_index":1245,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["redirect",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":705,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":1019,"title":{},"body":{"injectables/TaskStateService.html":{},"index.html":{}}}],["reloadtasks",{"_index":1010,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["reloadtasks(tasks",{"_index":1017,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["repeat",{"_index":700,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":204,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":206,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":1239,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["required",{"_index":950,"title":{},"body":{"components/SignupComponent.html":{}}}],["res.body._id",{"_index":1034,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.description",{"_index":1036,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.status",{"_index":1037,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.tasks.map((task",{"_index":1145,"title":{},"body":{"components/TasksComponent.html":{}}}],["res.body.title",{"_index":1035,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["resend",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["resendverificationtoken",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendverificationtoken(email",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"overview.html":{}}}],["resetform",{"_index":859,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(token",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":73,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetting",{"_index":659,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["responding",{"_index":624,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["response.body.expiresin",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.body.token",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":931,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["results",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["rgba(0",{"_index":711,"title":{},"body":{"components/HomeComponent.html":{},"components/ModalComponent.html":{}}}],["right",{"_index":588,"title":{},"body":{"components/DialogComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["route",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["router",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["routermodule",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":233,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":136,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/EmailModule.html":{},"modules/NavigationModule.html":{}}}],["routing.module.ts",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"modules/EmailRoutingModule.html":{}}}],["run",{"_index":1329,"title":{},"body":{"index.html":{}}}],["running",{"_index":1350,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["save",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["saveauthdata",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1338,"title":{},"body":{"index.html":{}}}],["screen",{"_index":420,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["self",{"_index":1179,"title":{},"body":{"components/TopnavComponent.html":{}}}],["send",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["serve",{"_index":1331,"title":{},"body":{"index.html":{}}}],["server",{"_index":616,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"index.html":{}}}],["service",{"_index":1189,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["share",{"_index":1132,"title":{},"body":{"components/TasksComponent.html":{}}}],["shared/error.interceptor",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["sharereplay",{"_index":927,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["short",{"_index":870,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["showsnackbar",{"_index":1191,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":1196,"title":{},"body":{"injectables/UIService.html":{}}}],["side",{"_index":1167,"title":{},"body":{"components/TopnavComponent.html":{}}}],["sidenav",{"_index":902,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["sidenav.component.css",{"_index":903,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.html",{"_index":904,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":840,"title":{},"body":{"modules/NavigationModule.html":{}}}],["sidenavcomponent",{"_index":75,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["signup",{"_index":229,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["signup(firstname",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.css",{"_index":940,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":941,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/must",{"_index":878,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["signup/signup.component",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":77,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":943,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":988,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["size",{"_index":720,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["snack",{"_index":1199,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":1195,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":630,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"index.html":{}}}],["space",{"_index":412,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["spacer",{"_index":1181,"title":{},"body":{"components/TopnavComponent.html":{}}}],["spinner",{"_index":794,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1376,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":1375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":228,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:13",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:19",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/auth.service.ts:100",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:112",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:121",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:129",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:137",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:149",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:158",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:16",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:165",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:17",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:173",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:180",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:27",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:59",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:83",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/email/email",{"_index":608,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["src/app/auth/email/email.module.ts",{"_index":604,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/app/auth/email/reset",{"_index":857,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/email/verify",{"_index":1220,"title":{},"body":{"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["src/app/auth/forgot",{"_index":637,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":733,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":743,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:21",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:33",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:40",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:52",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:66",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":939,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:102",{"_index":955,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":958,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":957,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":956,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":945,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:30",{"_index":954,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:47",{"_index":959,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:54",{"_index":949,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:66",{"_index":947,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:78",{"_index":953,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:90",{"_index":946,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/user.model.ts",{"_index":731,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts",{"_index":1215,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/user.service.ts:11",{"_index":1216,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/user.service.ts:15",{"_index":1218,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/board/board",{"_index":448,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["src/app/board/board.component.ts",{"_index":395,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":398,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":399,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.module.ts",{"_index":434,"title":{},"body":{"modules/BoardModule.html":{}}}],["src/app/board/tasks/create",{"_index":457,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/task",{"_index":973,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/board/tasks/task.model.ts",{"_index":725,"title":{},"body":{"interfaces/ITask.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks",{"_index":1041,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts",{"_index":1108,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts:17",{"_index":1128,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:18",{"_index":1127,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:19",{"_index":1130,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:20",{"_index":1131,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:21",{"_index":1125,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:22",{"_index":1126,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:23",{"_index":1129,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:24",{"_index":1118,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:28",{"_index":1122,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:46",{"_index":1119,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:66",{"_index":1120,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:75",{"_index":1123,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:82",{"_index":1121,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/uppercase",{"_index":1206,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component",{"_index":1078,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts",{"_index":561,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component.ts:14",{"_index":568,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts:15",{"_index":571,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.module.ts",{"_index":595,"title":{},"body":{"modules/DialogModule.html":{}}}],["src/app/components/modal/modal.component.ts",{"_index":806,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["src/app/components/modal/modal.component.ts:10",{"_index":810,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:14",{"_index":812,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:16",{"_index":813,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.component.ts:9",{"_index":811,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/components/modal/modal.module.ts",{"_index":832,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/core/core.module.ts",{"_index":454,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:29",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:36",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.module.ts",{"_index":838,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts",{"_index":901,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:14",{"_index":923,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:15",{"_index":924,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:16",{"_index":925,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:17",{"_index":913,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:25",{"_index":914,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:37",{"_index":918,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:44",{"_index":917,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts",{"_index":1155,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:13",{"_index":1170,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:14",{"_index":1171,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:15",{"_index":1163,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:16",{"_index":1162,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:23",{"_index":1164,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:35",{"_index":1166,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:42",{"_index":1169,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:49",{"_index":1165,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/page",{"_index":841,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module",{"_index":598,"title":{},"body":{"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/material.module.ts",{"_index":770,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":611,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:16",{"_index":614,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:22",{"_index":615,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/ui.service",{"_index":650,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":1188,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:15",{"_index":1194,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:22",{"_index":1198,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment",{"_index":1219,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1322,"title":{"index.html":{}},"body":{}}],["state.service",{"_index":516,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["state.service.ts",{"_index":1004,"title":{},"body":{"injectables/TaskStateService.html":{},"coverage.html":{}}}],["state.service.ts:11",{"_index":1026,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:12",{"_index":1028,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:13",{"_index":1029,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:14",{"_index":1031,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:15",{"_index":1024,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:16",{"_index":1012,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:25",{"_index":1014,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:42",{"_index":1022,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:50",{"_index":1018,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:58",{"_index":1016,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["statements",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":922,"title":{},"body":{"components/SidenavComponent.html":{}}}],["status",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["sticky",{"_index":1176,"title":{},"body":{"components/TopnavComponent.html":{}}}],["storage",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1344,"title":{},"body":{"index.html":{}}}],["string",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subject",{"_index":498,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["submit",{"_index":662,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subscribe",{"_index":970,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["subscribe(isauth",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":551,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TasksCardListComponent.html":{}}}],["subscribe(result",{"_index":1087,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["subscribe(task",{"_index":529,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["subscription",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["subscriptions",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["successfully",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1364,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1083,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["svg",{"_index":1365,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":881,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TasksComponent.html":{}}}],["switchmap(token",{"_index":894,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["table",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":514,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["tap",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap(response",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["task",{"_index":462,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["task._id",{"_index":1146,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.component",{"_index":441,"title":{},"body":{"modules/BoardModule.html":{}}}],["task.component.css",{"_index":463,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.html",{"_index":464,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts",{"_index":458,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:114",{"_index":494,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:122",{"_index":488,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:17",{"_index":502,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:18",{"_index":500,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:19",{"_index":499,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:20",{"_index":484,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:21",{"_index":503,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:22",{"_index":482,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:29",{"_index":492,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:56",{"_index":505,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:63",{"_index":509,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:70",{"_index":487,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:83",{"_index":485,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:96",{"_index":496,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.creator",{"_index":1148,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.description",{"_index":532,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.model",{"_index":994,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status",{"_index":1147,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('doing",{"_index":1140,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('done",{"_index":1097,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status.includes('todo",{"_index":1096,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.title",{"_index":531,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task/create",{"_index":440,"title":{},"body":{"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["taskarrayresponsetype",{"_index":996,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["taskform",{"_index":468,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskhttpservice",{"_index":480,"title":{"injectables/TaskHttpService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":469,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskidlistener",{"_index":1005,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["tasklistener",{"_index":1006,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskresponsetype",{"_index":995,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["tasks.component.css",{"_index":1109,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":1110,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":1138,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/create",{"_index":439,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks",{"_index":445,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks.component",{"_index":438,"title":{},"body":{"modules/BoardModule.html":{}}}],["taskscardlistcomponent",{"_index":79,"title":{"components/TasksCardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscomponent",{"_index":83,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskslistlistener",{"_index":1007,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskstateservice",{"_index":481,"title":{"injectables/TaskStateService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["test",{"_index":1353,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1352,"title":{},"body":{"index.html":{}}}],["text",{"_index":414,"title":{},"body":{"components/BoardComponent.html":{},"components/ModalComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["theme",{"_index":919,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authlistenersubscription",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.forgotpassword(this.email.value).subscribe",{"_index":657,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.getauthstatuslistener().pipe(map(isloggedin",{"_index":933,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.getemailverificationtoken(token",{"_index":1235,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authservice.getisauth",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.gettoken",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.initauthentication",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(this.formctrls.email.value",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":935,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.resendverificationtoken(this.email.value).subscribe",{"_index":1243,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.authservice.resetpassword(token",{"_index":895,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(val",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.backward",{"_index":1091,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":929,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.clearauthdata",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":556,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ModalComponent.html":{}}}],["this.deletetask(id",{"_index":1088,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.description.haserror('maxlength",{"_index":546,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('minlength",{"_index":545,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('required",{"_index":544,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.value",{"_index":550,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.destroy$.next",{"_index":557,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":558,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":1082,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.doingtasks",{"_index":1139,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.donetasks",{"_index":1141,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.drawer.close",{"_index":936,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.edit.emit",{"_index":1080,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.email",{"_index":651,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.email.haserror('email",{"_index":655,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.email.haserror('required",{"_index":653,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.errormessage",{"_index":1242,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.fb.group",{"_index":883,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.form",{"_index":948,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.haserror('mustmatch",{"_index":890,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.haserror('required",{"_index":889,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.confirmpassword.value",{"_index":897,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.haserror('email",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.haserror('required",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.email.value",{"_index":968,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.haserror('minlength",{"_index":965,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.haserror('required",{"_index":964,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.firstname.value",{"_index":967,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formctrls.password.haserror('minlength",{"_index":888,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.password.haserror('required",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.password.value",{"_index":896,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.formctrls.password.value).subscribe",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.forward",{"_index":1092,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.getalltasks",{"_index":1135,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.getauthdata",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getupdatedtaskslist",{"_index":1142,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.url}/${id",{"_index":1002,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${id",{"_index":1003,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/verify",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(this.url",{"_index":1000,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.patch(`${this.url}/reset",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url",{"_index":998,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.post(`${this.url}/reset",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url}/verify",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(`${this.url}/${id",{"_index":1001,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["this.isauth",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isauth(false",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth(true",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarktheme",{"_index":934,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.isforgotpassword",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ishandset",{"_index":928,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isloading",{"_index":966,"title":{},"body":{"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["this.isloggedin",{"_index":932,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isopen",{"_index":1150,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.isvisible",{"_index":1241,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["this.loginform",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modaltitle",{"_index":526,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.mode",{"_index":525,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.onchangestatus(id",{"_index":1093,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.onclose",{"_index":555,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.resetform",{"_index":882,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetform.controls",{"_index":887,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.parammap",{"_index":891,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.router.navigatebyurl",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('/authentication/login",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl('/authentication/signup",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigatebyurl('/board",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigatebyurl('authentication/login",{"_index":899,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.saveauthdata(token",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":961,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":963,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":1203,"title":{},"body":{"injectables/UIService.html":{}}}],["this.taskform",{"_index":517,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('description",{"_index":534,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('title",{"_index":533,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.reset",{"_index":554,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.setvalue",{"_index":530,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskhttpservice",{"_index":547,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.deletetask(id).subscribe",{"_index":1089,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.gettask(id).pipe",{"_index":1032,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskhttpservice.gettasks().pipe",{"_index":1143,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskid",{"_index":524,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskidlistener.asobservable",{"_index":1025,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskidlistener.next(id",{"_index":1040,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.asobservable",{"_index":1027,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.next(task",{"_index":1038,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasks",{"_index":1133,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.pipe(map(tasks",{"_index":1137,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskslistlistener.asobservable",{"_index":1030,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskslistlistener.next(tasks",{"_index":1039,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskstateservice",{"_index":527,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.getmappedtask(id).topromise",{"_index":1095,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(id",{"_index":1079,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(null",{"_index":559,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.reloadtasks([...this.tasks",{"_index":1090,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.taskidlistener$.pipe(takeuntil(this.destroy$)).subscribe(id",{"_index":523,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.tasklistener",{"_index":1149,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.taskslistlistener$.pipe",{"_index":1134,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.updatetaskslist(res.body.task",{"_index":552,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.title.haserror('maxlength",{"_index":541,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('minlength",{"_index":537,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('required",{"_index":535,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.value",{"_index":549,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.todotasks",{"_index":1136,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.togglesidenav.emit",{"_index":1172,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.toggletheme.emit",{"_index":1173,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.token",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":999,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.uiservice.showsnackbar",{"_index":971,"title":{},"body":{"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["this.uiservice.showsnackbar('a",{"_index":658,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.uiservice.showsnackbar('logged",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar('something",{"_index":1099,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":633,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.uiservice.showsnackbar(res.message",{"_index":898,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.url}/signup",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(res.token.userid",{"_index":1237,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["throwerror",{"_index":619,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":478,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"components/ModalComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["todo",{"_index":728,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["todotasks",{"_index":1114,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggle",{"_index":802,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["togglemodal",{"_index":1117,"title":{},"body":{"components/TasksComponent.html":{}}}],["togglesidenav",{"_index":1160,"title":{},"body":{"components/TopnavComponent.html":{}}}],["toggletheme",{"_index":1161,"title":{},"body":{"components/TopnavComponent.html":{}}}],["token",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["tokentimer",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar.mat",{"_index":1174,"title":{},"body":{"components/TopnavComponent.html":{}}}],["top",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["topnav",{"_index":1156,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["topnav.component.css",{"_index":1157,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":1158,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav/topnav.component",{"_index":839,"title":{},"body":{"modules/NavigationModule.html":{}}}],["topnavcomponent",{"_index":85,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":822,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":1209,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["translate",{"_index":823,"title":{},"body":{"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["true",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":627,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["tslib",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1373,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui.service",{"_index":620,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":258,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["undo",{"_index":1103,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["unit",{"_index":1351,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":489,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["up",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["update",{"_index":993,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1217,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetask",{"_index":978,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["updatetask(id",{"_index":990,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["updatetask(this.taskid",{"_index":553,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["updatetaskslist",{"_index":1011,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["updatetaskslist(task",{"_index":1021,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["uppercase",{"_index":442,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":1102,"title":{},"body":{"components/TasksCardListComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":431,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/UserService.html":{}}}],["url(/assets/img/home",{"_index":698,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1340,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"injectables/UserService.html":{}}}],["user's",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["user.model",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":1232,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["username",{"_index":951,"title":{},"body":{"components/SignupComponent.html":{}}}],["userresponsetype",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["userservice",{"_index":1214,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{}}}],["val",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":656,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validate",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validation",{"_index":1318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":885,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":513,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.email",{"_index":652,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["validators.maxlength(1000",{"_index":522,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.maxlength(20",{"_index":521,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(2",{"_index":962,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.minlength(3",{"_index":520,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(6",{"_index":884,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":519,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["value",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1212,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":1213,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["variable",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1377,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verfied",{"_index":1244,"title":{},"body":{"components/VerifyEmailComponent.html":{}}}],["verification",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"components/VerifyEmailComponent.html":{}}}],["verify",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["verify/:token",{"_index":609,"title":{},"body":{"modules/EmailRoutingModule.html":{}}}],["verifyemailcomponent",{"_index":87,"title":{"components/VerifyEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/EmailModule.html":{},"modules/EmailRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"components/VerifyEmailComponent.html":{},"coverage.html":{},"overview.html":{}}}],["version",{"_index":1326,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1204,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1355,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":926,"title":{},"body":{"components/SidenavComponent.html":{}}}],["viewchild('drawer",{"_index":921,"title":{},"body":{"components/SidenavComponent.html":{}}}],["visibility",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"components/VerifyEmailComponent.html":{}}}],["want",{"_index":1084,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["way",{"_index":660,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["weight",{"_index":1184,"title":{},"body":{"components/TopnavComponent.html":{}}}],["went",{"_index":1100,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["width",{"_index":402,"title":{},"body":{"components/BoardComponent.html":{},"components/DialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ModalComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{},"components/VerifyEmailComponent.html":{}}}],["wrap",{"_index":409,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["wrong",{"_index":1101,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["z",{"_index":819,"title":{},"body":{"components/ModalComponent.html":{},"components/TopnavComponent.html":{}}}],["zone.js",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/EmailModule.html":{},"modules/ModalModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Initialize authentication.\n   */\n  ngOnInit() {\n    this.authService.initAuthentication();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, CoreModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'board',\n    loadChildren: () => \"import('./board/board.module').then(m => m.BoardModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigateByUrl('/authentication/login');\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nAuthModule -->\n\nModalModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            ModalModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { ModalModule } from '../components/modal/modal.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, ForgotPasswordComponent],\n  imports: [CommonModule, AuthRoutingModule, ReactiveFormsModule, MaterialModule, ModalModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'email', loadChildren: () => \"import('./email/email.module').then(m => m.EmailModule)\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getEmailVerificationToken\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                initAuthentication\n                            \n                            \n                                    Private\n                                isAuth\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                resendVerificationToken\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:129\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:173\n                \n            \n\n\n            \n                \n                    Send reset password link.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:137\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailVerificationToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n                    Get email verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:83\n                \n            \n\n\n            \n                \n                    Initialize authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuth(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:100\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendVerificationToken\n                        \n                        \n                    \n                \n            \n            \n                \nresendVerificationToken(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:165\n                \n            \n\n\n            \n                \n                    Resend verification token.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(token: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:180\n                \n            \n\n\n            \n                \n                    Reset account's password.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:121\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:112\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(firstName: string, email: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.isAuthenticated)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { IUser } from './user.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\nimport { tap } from 'rxjs/operators';\n\ntype UserResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly URL = environment.apiUrl + '/auth';\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(this.isAuthenticated);\n\n  constructor(private http: HttpClient, private router: Router, private uiService: UIService) {}\n\n  /**\n   * Get token.\n   */\n  getToken(): string {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth(): boolean {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener(): Observable {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  signup(firstName: string, email: string, password: string, confirmPassword: string): Observable {\n    return this.http.post(\n      `${this.URL}/signup`,\n      { firstName, email, password, confirmPassword },\n      { observe: 'response' }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string): Observable> {\n    return this.http\n      .post(`${this.URL}/login`, { email, password }, { observe: 'response' })\n      .pipe(\n        tap(response => {\n          const token = response.body.token;\n          if (token) {\n            const expiresInDuration = response.body.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuth(true);\n            const now = new Date();\n            const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar('Logged in successfully!', null, 3000, 'bottom');\n            this.router.navigateByUrl('/board');\n          }\n        })\n      );\n  }\n\n  /**\n   * Initialize authentication.\n   */\n  initAuthentication() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuth(true);\n      this.setAuthTimer(expiresIn / 1000);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuth(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar('Logged out successfully!', null, 3000, 'bottom');\n    this.router.navigateByUrl('/');\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData(): { token: string; expirationDate: Date } {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n\n  private isAuth(val: boolean) {\n    this.isAuthenticated = val;\n    this.authStatusListener.next(val);\n  }\n\n  /**\n   * Get email verification token.\n   * @params token -> expires in 30 min from creation.\n   */\n  getEmailVerificationToken(token: string): Observable {\n    return this.http.get(`${this.URL}/verify-email/${token}`);\n  }\n\n  /**\n   * Resend verification token.\n   */\n  resendVerificationToken(email: string): Observable {\n    return this.http.post(`${this.URL}/verify-email/token`, { email });\n  }\n\n  /**\n   * Send reset password link.\n   * @params email -> user's email.\n   */\n  forgotPassword(email: string): Observable {\n    return this.http.post(`${this.URL}/reset-password`, { email });\n  }\n\n  /**\n   * Reset account's password.\n   */\n  resetPassword(token: string, password: string, confirmPassword: string): Observable {\n    return this.http.patch(`${this.URL}/reset-password/${token}`, { password, confirmPassword });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Board Component\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n -->\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                .board {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 40px auto 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.board__item {\n  margin: 0 5px;\n}\n\n@media only screen and (max-width: 1035px) {\n  .board__item {\n    margin: 0 20px;\n  }\n\n  mat-divider {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nBoardModule -->\n\nModalModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            TasksCardListComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BoardRoutingModule\n                        \n                        \n                            DialogModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            ModalModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { DialogModule } from '../components/dialog/dialog.module';\nimport { ModalModule } from '../components/modal/modal.module';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { BoardComponent } from './board.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CreateTaskComponent } from './tasks/create-task/create-task.component';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\nimport { TasksCardListComponent } from './tasks/tasks-card-list/tasks-card-list.component';\n\n@NgModule({\n  declarations: [BoardComponent, TasksComponent, CreateTaskComponent, UppercaseFirstLetterPipe, TasksCardListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BoardRoutingModule,\n    MaterialModule,\n    DialogModule,\n    ModalModule\n  ]\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardRoutingModule.html":{"url":"modules/BoardRoutingModule.html","title":"module - BoardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board.component';\n\nconst routes: Routes = [{ path: '', component: BoardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NavigationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { NavigationModule } from './navigation/navigation.module';\n\n@NgModule({\n  declarations: [HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule, NavigationModule],\n  exports: [NavigationModule]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                modalTitle\n                            \n                            \n                                mode\n                            \n                            \n                                taskForm\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptionErrors\n                            \n                            \n                                getTitleErrors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDescriptionErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetDescriptionErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:83\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:70\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:122\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\nSet task id null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:29\n                \n            \n\n\n            \n                \n                    Initialize task form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:114\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:96\n                \n            \n\n\n            \n                \n                    Create or edit task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Create Task\" | \"Edit Task\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"create\" | \"edit\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:56\n                                \n                            \n                    \n                        \n                                Get title form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:63\n                                \n                            \n                    \n                        \n                                Get descriptipon form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n  taskForm: FormGroup;\n  mode: 'create' | 'edit';\n  modalTitle: 'Create Task' | 'Edit Task';\n  @Output() close = new EventEmitter();\n  private taskId: string;\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  /**\n   * Initialize task form.\n   */\n  ngOnInit() {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(20)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(1000)]\n      })\n    });\n\n    this.taskStateService.taskIdListener$.pipe(takeUntil(this.destroy$)).subscribe(id => (this.taskId = id));\n\n    if (this.taskId) {\n      this.mode = 'edit';\n      this.modalTitle = 'Edit Task';\n      this.taskStateService\n        .getMappedTask(this.taskId)\n        .subscribe(task => this.taskForm.setValue({ title: task.title, description: task.description }));\n    } else {\n      this.mode = 'create';\n      this.modalTitle = 'Create Task';\n    }\n  }\n\n  /**\n   * Get title form control.\n   */\n  get title(): AbstractControl {\n    return this.taskForm.get('title');\n  }\n\n  /**\n   * Get descriptipon form control.\n   */\n  get description(): AbstractControl {\n    return this.taskForm.get('description');\n  }\n\n  /**\n   * Display title errors.\n   */\n  getTitleErrors(): string {\n    if (this.title.hasError('required')) {\n      return 'You must add a title!';\n    } else if (this.title.hasError('minlength')) {\n      return 'The title must have minimum 3 characters';\n    } else if (this.title.hasError('maxlength')) {\n      return 'The title must have maximum 20 characters';\n    }\n  }\n\n  /**\n   * Display title errors.\n   */\n  getDescriptionErrors(): string {\n    if (this.description.hasError('required')) {\n      return 'You must add a description!';\n    } else if (this.description.hasError('minlength')) {\n      return 'The description must have minimum 3 characters';\n    } else if (this.description.hasError('maxlength')) {\n      return 'The description must have maximum 1000 characters';\n    }\n  }\n\n  /**\n   * Create or edit task.\n   */\n  onSave() {\n    if (this.mode === 'create') {\n      this.taskHttpService\n        .createTask({ id: null, title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } else if (this.mode === 'edit') {\n      this.taskHttpService\n        .updateTask(this.taskId, { title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    }\n\n    this.taskForm.reset();\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  onClose() {\n    this.close.emit();\n  }\n\n  /**\n   * Unsubscribe from observables.\n   * Set task id null.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.taskStateService.getTaskId(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n       {{ getTitleErrors() }} \n    \n    \n      \n       {{ getDescriptionErrors() }} \n    \n    \n      SAVE\n      CANCEL\n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{ getTitleErrors() }}                      {{ getDescriptionErrors() }}               SAVE      CANCEL      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialog/dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dialog/dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.content }}\n\n  \n    Confirm\n  \n  \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./dialog.component.css\n                \n                :host {\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mat-raised-button:not(:last-child) {\n  margin-right: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.content }}      Confirm        Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dialog/dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogModule.html":{"url":"modules/DialogModule.html","title":"module - DialogModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_imports\n\n\n\ncluster_DialogModule_exports\n\n\n\n\nDialogComponent\n\nDialogComponent\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dialog/dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog.component';\nimport { MaterialModule } from 'src/app/material.module';\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [DialogComponent],\n  entryComponents: [DialogComponent]\n})\nexport class DialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nResetPasswordComponent->EmailModule\n\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            VerifyEmailComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { EmailRoutingModule } from './email-routing.module';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  declarations: [VerifyEmailComponent, ResetPasswordComponent],\n  imports: [CommonModule, EmailRoutingModule, ReactiveFormsModule, MaterialModule]\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailRoutingModule.html":{"url":"modules/EmailRoutingModule.html","title":"module - EmailRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/email/email-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VerifyEmailComponent } from './verify-email/verify-email.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: 'verify/:token', component: VerifyEmailComponent },\n  { path: 'reset-password/:token', component: ResetPasswordComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:22\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password/forgot-password.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:24\n                \n            \n\n\n            \n                \n                    Handle email errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:46\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:36\n                \n            \n\n\n            \n                \n                    Send email.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  email: FormControl;\n  @Output() close = new EventEmitter();\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  ngOnInit() {\n    this.email = new FormControl(null, [Validators.required, Validators.email]);\n  }\n\n  /**\n   * Handle email errors.\n   */\n  getEmailErrors(): string {\n    if (this.email.hasError('required')) {\n      return 'You must enter your email';\n    } else if (this.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Send email.\n   */\n  onSubmit() {\n    this.authService.forgotPassword(this.email.value).subscribe(() => {\n      this.uiService.showSnackBar('A link for resetting your password is in its way to your inbox.', null, 5000, 'top');\n      this.onClose();\n    });\n  }\n\n  /**\n   * Close modal.\n   */\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ getEmailErrors() }}\n  \n  \n    Submit\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.css\n                \n                .mat-form-field {\n  width: 90%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getEmailErrors() }}        Submit    Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:36\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:29\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => (this.isAuth = isAuth));\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigateByUrl('/authentication/signup');\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        devDo helps you to keep track of your project progress and never miss a\n        deadline.\n      \n      \n        Sign Up!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .home {\n  background: url(/assets/img/home-image.jpg) no-repeat center center/cover;\n  height: calc(100% - 64px);\n  position: relative;\n}\n\n.overlay {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.home__cta {\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  width: 30%;\n  min-width: 25rem;\n  height: 100%;\n}\n\n.home__cta p {\n  line-height: 1.6;\n  font-size: 1.2rem;\n}\n\n@media only screen and (max-width: 599px) {\n  .home {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    devDo helps you to keep track of your project progress and never miss a        deadline.                    Sign Up!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"todo\" | \"doing\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"todo\" | \"doing\" | \"done\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITask {\n  id: string;\n  title: string;\n  description: string;\n  status?: 'todo' | 'doing' | 'done';\n  creator?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        isVerified\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVerified\n                                    \n                                \n                                \n                                    \n                                        isVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  id: string;\n  firstName: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n  isVerified: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePassword\n                            \n                            \n                                isForgotPassword\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onForgotPassword\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:40\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> email.\n\n\n                    \n                        Returns :     \"Please enter your email\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:21\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onForgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nonForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:62\n                \n            \n\n\n            \n                \n                    Call log in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:52\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> password.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isForgotPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:33\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hidePassword = true;\n  loginForm: FormGroup;\n  isForgotPassword = false;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n\n  /**\n   *  Handle log in form errors -> email.\n   */\n  emailErrorHandler() {\n    if (this.formCtrls.email.hasError('required')) {\n      return 'Please enter your email';\n    } else if (this.formCtrls.email.hasError('email')) {\n      return 'Please enter a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle log in form errors -> password.\n   */\n  passwordErrorHandler() {\n    if (this.formCtrls.password.hasError('required')) {\n      return 'Please enter your password';\n    }\n    return null;\n  }\n\n  /**\n   * Call log in user.\n   */\n  onSubmit() {\n    this.authService.login(this.formCtrls.email.value, this.formCtrls.password.value).subscribe();\n  }\n\n  onForgotPassword() {\n    this.isForgotPassword = true;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      {{ emailErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ passwordErrorHandler() }}\n    \n  \n  Log In\n  Forgot Password?\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ emailErrorHandler() }}                      {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}              {{ passwordErrorHandler() }}        Log In  Forgot Password?'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatDialogModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modal/modal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                styleUrls\n                ./modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modal/modal.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modal/modal.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modal/modal.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modal/modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modal/modal.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n  @Input() title: string;\n  @Output() close = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  onClose() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n\n  {{ title }}\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./modal.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n/* Modal styles. */\n.modal.mat-card {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  text-align: center;\n  z-index: 200;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_imports\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nModalModule -->\n\nMaterialModule->ModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/modal/modal.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { ModalComponent } from './modal.component';\n\n@NgModule({\n  declarations: [ModalComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [ModalComponent]\n})\nexport class ModalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_imports\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                        \n                            TopnavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { TopnavComponent } from './topnav/topnav.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\n@NgModule({\n  declarations: [TopnavComponent, SidenavComponent],\n  imports: [CommonModule, MaterialModule, AppRoutingModule],\n  exports: [SidenavComponent]\n})\nexport class NavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or have been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100% - 64px);\n}\n\n.heading {\n  font-size: 450%;\n}\n\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@media only screen and (max-width: 599px) {\n  .page-not-found {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or have been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/email/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfirmPasswordErrors\n                            \n                            \n                                getPasswordErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, authService: AuthService, uiService: UIService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/email/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:61\n                \n            \n\n\n            \n                \n                    Get confirm password errors.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:49\n                \n            \n\n\n            \n                \n                    Get password errors.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:73\n                \n            \n\n\n            \n                \n                    Reset password.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/email/reset-password/reset-password.component.ts:42\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MustMatch } from '../../signup/must-match.validator';\nimport { AuthService } from '../../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private uiService: UIService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.resetForm = this.fb.group(\n      {\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.resetForm.controls;\n  }\n\n  /**\n   * Get password errors.\n   */\n  getPasswordErrors() {\n    if (this.formCtrls.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.formCtrls.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Get confirm password errors.\n   */\n  getConfirmPasswordErrors() {\n    if (this.formCtrls.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.formCtrls.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Reset password.\n   */\n  onSubmit() {\n    this.route.paramMap\n      .pipe(\n        map(param => param.get('token')),\n        switchMap(token =>\n          this.authService.resetPassword(token, this.formCtrls.password.value, this.formCtrls.confirmPassword.value)\n        )\n      )\n      .subscribe(res => {\n        this.uiService.showSnackBar(res.message, null, 5000, 'top');\n        this.router.navigateByUrl('authentication/login');\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ formCtrls.password.value?.length || 0 }}/6\n    {{ getPasswordErrors() }}\n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ getConfirmPasswordErrors() }}\n  \n  Submit\n\n\n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ formCtrls.password.value?.length || 0 }}/6    {{ getPasswordErrors() }}                  {{ hideConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ getConfirmPasswordErrors() }}    Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drawer\n                            \n                            \n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:25\n                \n            \n\n\n            \n                \n                    Observe breakpoints.\nCheck if user is logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:44\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:37\n                \n            \n\n\n            \n                \n                    Toggle theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  isDarkTheme = false;\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @ViewChild('drawer', { static: false }) drawer: MatSidenav;\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Observe breakpoints.\n   * Check if user is logged in.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle theme.\n   */\n  onToggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Board\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      Log Out\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Board                    Sign Up                    Log In            Log Out                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfirmPasswordErrors\n                            \n                            \n                                getEmailErrors\n                            \n                            \n                                getFirstNameErrors\n                            \n                            \n                                getPasswordErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formCtrls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, uiService: UIService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:90\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> confirm-password field.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:66\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"You must enter a valid email\" | \"This.form is not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstNameErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstNameErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:54\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"This field is required\" | \"Username must have minimum 2 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPasswordErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetPasswordErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:78\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> password field.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:30\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:102\n                \n            \n\n\n            \n                \n                    Signup user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formCtrls\n                    \n                \n\n                \n                    \n                        getformCtrls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:47\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { UIService } from 'src/app/shared/ui.service';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private uiService: UIService,\n    private router: Router\n  ) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit() {\n    this.signupForm = this.fb.group(\n      {\n        firstName: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get formCtrls(): { [key: string]: AbstractControl } {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  getFirstNameErrors() {\n    if (this.formCtrls.firstName.hasError('required')) {\n      return 'This field is required';\n    } else if (this.formCtrls.firstName.hasError('minlength')) {\n      return 'Username must have minimum 2 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  getEmailErrors() {\n    if (this.formCtrls.email.hasError('required')) {\n      return 'You must enter a valid email';\n    } else if (this.formCtrls.email.hasError('email')) {\n      return 'This.form is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> password field.\n   */\n  getPasswordErrors() {\n    if (this.formCtrls.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.formCtrls.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> confirm-password field.\n   */\n  getConfirmPasswordErrors() {\n    if (this.formCtrls.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.formCtrls.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Signup user.\n   */\n  onSubmit() {\n    this.isLoading = true;\n    this.authService\n      .signup(\n        this.formCtrls.firstName.value,\n        this.formCtrls.email.value,\n        this.formCtrls.password.value,\n        this.formCtrls.confirmPassword.value\n      )\n      .pipe(finalize(() => (this.isLoading = false)))\n      .subscribe(() => {\n        this.uiService.showSnackBar(\n          'A confirmation email is on its way to your inbox. Please confirm your email before login',\n          null,\n          5000,\n          'top'\n        );\n        this.router.navigateByUrl('authentication/login');\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ getFirstNameErrors() }}\n  \n\n  \n    \n    {{ getEmailErrors() }}\n  \n\n  \n    \n    \n      {{ hidePassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ formCtrls.password.value?.length || 0 }}/6\n    {{ getPasswordErrors() }}\n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\n    \n    {{ getConfirmPasswordErrors() }}\n  \n  Sign Up\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getFirstNameErrors() }}            {{ getEmailErrors() }}                  {{ hidePassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ formCtrls.password.value?.length || 0 }}/6    {{ getPasswordErrors() }}                  {{ hideConfirmPassword ? \\'visibility_off\\' : \\'visibility\\' }}        {{ getConfirmPasswordErrors() }}    Sign Up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskHttpService.html":{"url":"injectables/TaskHttpService.html","title":"injectable - TaskHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:54\n                \n            \n\n\n            \n                \n                    Delete task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:63\n                \n            \n\n\n            \n                \n                    Get a single task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:34\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:45\n                \n            \n\n\n            \n                \n                    Update task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ITask } from './task.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UIService } from '../../shared/ui.service';\nimport { environment } from '../../../environments/environment';\nimport { map } from 'rxjs/operators';\n\ntype TaskResponseType = HttpResponse;\ntype TaskArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskHttpService {\n  private readonly URL = environment.apiUrl + '/tasks';\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Create a new task.\n   * @param task -> created task\n   * @returns observable.\n   */\n  createTask(task: ITask): Observable {\n    return this.http.post(`${this.URL}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Create a new task.\n   * @param task -> created task.\n   * @returns observable.\n   */\n  getTasks(): Observable {\n    this.uiService.loadingStateChanged.next(true);\n    return this.http.get(this.URL, { observe: 'response' });\n  }\n\n  /**\n   * Update task.\n   * @param id -> task id.\n   * @param task -> Partial task.\n   * @returns observable.\n   */\n  updateTask(id: string, task: Partial): Observable {\n    return this.http.put(`${this.URL}/${id}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Delete task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  deleteTask(id: string): Observable> {\n    return this.http.delete(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Get a single task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getTask(id: string): Observable {\n    return this.http.get(`${this.URL}/${id}`, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskStateService.html":{"url":"injectables/TaskStateService.html","title":"injectable - TaskStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                taskIdListener\n                            \n                            \n                                taskIdListener$\n                            \n                            \n                                    Private\n                                taskListener\n                            \n                            \n                                taskListener$\n                            \n                            \n                                    Private\n                                tasksListListener\n                            \n                            \n                                tasksListListener$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMappedTask\n                            \n                            \n                                getTaskId\n                            \n                            \n                                reloadTasks\n                            \n                            \n                                updateTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:25\n                \n            \n\n\n            \n                \n                    Map task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskId\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:58\n                \n            \n\n\n            \n                \n                    Get task id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadTasks\n                        \n                        \n                    \n                \n            \n            \n                \nreloadTasks(tasks: ITask[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:50\n                \n            \n\n\n            \n                \n                    Reload tasks.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                ITask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> tasks list.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTasksList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTasksList(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:42\n                \n            \n\n\n            \n                \n                    Update tasks list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskIdListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskIdListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskIdListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasksListListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksListListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tasksListListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { ITask } from './task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStateService {\n  private taskListener = new BehaviorSubject(null);\n  taskListener$ = this.taskListener.asObservable();\n  private tasksListListener = new BehaviorSubject(null);\n  tasksListListener$ = this.tasksListListener.asObservable();\n  private taskIdListener = new BehaviorSubject(null);\n  taskIdListener$ = this.taskIdListener.asObservable();\n\n  constructor(private taskHttpService: TaskHttpService) {}\n\n  /**\n   * Map task.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getMappedTask(id: string): Observable {\n    return this.taskHttpService.getTask(id).pipe(\n      map((res: any) => {\n        return {\n          id: res.body._id,\n          title: res.body.title,\n          description: res.body.description,\n          status: res.body.status\n        };\n      })\n    );\n  }\n\n  /**\n   * Update tasks list.\n   * @param task -> created task.\n   */\n  updateTasksList(task: ITask) {\n    this.taskListener.next(task);\n  }\n\n  /**\n   * Reload tasks.\n   * @param tasks -> tasks list.\n   */\n  reloadTasks(tasks: ITask[]) {\n    this.tasksListListener.next(tasks);\n  }\n\n  /**\n   * Get task id.\n   * @param id -> task id.\n   */\n  getTaskId(id: string) {\n    this.taskIdListener.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksCardListComponent.html":{"url":"components/TasksCardListComponent.html","title":"component - TasksCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-card-list\n            \n\n            \n                styleUrls\n                ./tasks-card-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backward\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                forward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deleteTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBackward\n                            \n                            \n                                    Private\n                                    Async\n                                onChangeStatus\n                            \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onForward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backTooltip\n                            \n                            \n                                forwardTooltip\n                            \n                            \n                                isLoading\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService, uiService: UIService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forwardTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         ITask[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:112\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \nonBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:76\n                \n            \n\n\n            \n                \n                    Change status on backward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            onChangeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeStatus(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:87\n                \n            \n\n\n            \n                \n                    Change status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:43\n                \n            \n\n\n            \n                \n                    Delete task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \nonForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:66\n                \n            \n\n\n            \n                \n                    Change status on forward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            backward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ITask } from '../task.model';\nimport { UIService } from '../../../shared/ui.service';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n@Component({\n  selector: 'app-tasks-card-list',\n  templateUrl: './tasks-card-list.component.html',\n  styleUrls: ['./tasks-card-list.component.css']\n})\nexport class TasksCardListComponent implements OnDestroy {\n  @Input() tasks: ITask[];\n  @Input() title: string;\n  @Input() forwardTooltip: string;\n  @Input() backTooltip: string;\n  @Input() isLoading: boolean;\n  @Output() edit = new EventEmitter();\n  private forward = false;\n  private backward = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    private taskHttpService: TaskHttpService,\n    private taskStateService: TaskStateService,\n    private uiService: UIService,\n    private dialog: MatDialog\n  ) {}\n\n  onEdit(id: string) {\n    this.taskStateService.getTaskId(id);\n    this.edit.emit();\n  }\n\n  /**\n   * Delete task.\n   * @param id -> task id.\n   */\n  onDelete(id: string) {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      data: { title: 'Delete Task', content: 'Are you sure you want to delete this task?' }\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        if (result) {\n          this.deleteTask(id);\n        }\n      });\n  }\n\n  private deleteTask(id: string) {\n    this.taskHttpService.deleteTask(id).subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Change status on forward.\n   * @param id -> task id.\n   */\n  onForward(id: string) {\n    this.backward = false;\n    this.forward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status on backward.\n   * @param id -> task id.\n   */\n  onBackward(id: string) {\n    this.forward = false;\n    this.backward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status.\n   * @param id -> task id.\n   * @returns promise\n   */\n  private async onChangeStatus(id: string): Promise {\n    try {\n      const task = await this.taskStateService.getMappedTask(id).toPromise();\n\n      let status: 'todo' | 'doing' | 'done';\n\n      if (this.forward) {\n        status = task.status.includes('todo') ? 'doing' : 'done';\n      }\n\n      if (this.backward) {\n        status = task.status.includes('done') ? 'doing' : 'todo';\n      }\n\n      this.taskHttpService\n        .updateTask(id, { status })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } catch (error) {\n      this.uiService.showSnackBar('Something went wrong! Try again later.', null, 5000, 'top');\n    }\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    \n      {{ task.title | uppercaseFirstLetter }}\n    \n\n    \n      {{ task.description | uppercaseFirstLetter }}\n    \n\n    \n      \n        undo\n      \n      \n        done\n        done_all\n      \n\n      \n        edit\n      \n\n      \n        delete\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tasks-card-list.component.css\n                \n                mat-expansion-panel:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}            {{ task.title | uppercaseFirstLetter }}              {{ task.description | uppercaseFirstLetter }}                      undo                    done        done_all                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                doingTasks$\n                            \n                            \n                                doneTasks$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                tasks\n                            \n                            \n                                tasks$\n                            \n                            \n                                todoTasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllTasks\n                            \n                            \n                                    Private\n                                getUpdatedTasksList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n                    Get tasks.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUpdatedTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedTasksList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:66\n                \n            \n\n\n            \n                \n                    Get new task.\n\n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:82\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModal\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:75\n                \n            \n\n\n            \n                \n                    Open/close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doingTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doneTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITask[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil, map, switchMap, finalize, share } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { TaskStateService } from './task-state.service';\nimport { ITask } from './task.model';\n\n/**\n * Tasks List Component\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n  isOpen = false;\n  isLoading = false;\n  tasks$: Observable;\n  todoTasks$: Observable;\n  doingTasks$: Observable;\n  doneTasks$: Observable;\n  private tasks: ITask[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n\n    this.tasks$ = this.taskStateService.tasksListListener$.pipe(\n      switchMap(() => this.getAllTasks()),\n      share()\n    );\n\n    this.todoTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('todo'))));\n    this.doingTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('doing'))));\n    this.doneTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('done'))));\n\n    this.getUpdatedTasksList();\n  }\n\n  /**\n   * Get tasks.\n   */\n  private getAllTasks(): Observable {\n    return this.taskHttpService.getTasks().pipe(\n      finalize(() => (this.isLoading = false)),\n      map(res => {\n        return res.body.tasks.map((task: any) => {\n          return {\n            id: task._id,\n            title: task.title,\n            description: task.description,\n            status: task.status,\n            creator: task.creator\n          };\n        });\n      })\n    );\n  }\n\n  /**\n   * Get new task.\n   */\n  private getUpdatedTasksList(): Subscription {\n    return this.taskStateService.taskListener$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Open/close modal.\n   */\n  toggleModal() {\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    add\n  \n\n\n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.css\n                \n                .tasks-container {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.list {\n  width: 300px;\n}\n\n.action {\n  display: flex;\n  margin: 20px;\n}\n\n.action .mat-mini-fab {\n  margin-left: auto;\n}\n\n@media only screen and (max-width: 1035px) {\n  mat-divider {\n    display: none;\n  }\n\n  app-tasks-card-list:not(:last-child) {\n    margin-bottom: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                ./topnav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleSidenav\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidenav\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidenav\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTheme\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:23\n                \n            \n\n\n            \n                \n                    Get authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:49\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:35\n                \n            \n\n\n            \n                \n                    Toggle side navigation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:42\n                \n            \n\n\n            \n                \n                    Change theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})\nexport class TopnavComponent implements OnInit {\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @Output() toggleSidenav = new EventEmitter();\n  @Output() toggleTheme = new EventEmitter();\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Get authentication status.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle side navigation.\n   */\n  onToggleSidenav() {\n    this.toggleSidenav.emit();\n  }\n\n  /**\n   * Change theme.\n   */\n  onToggleTheme() {\n    this.toggleTheme.emit();\n  }\n\n  /**\n   * Log out user.\n   */\n  onLogout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  devDo\n  \n  \n    \n      My Board\n    \n    \n      Sign Up\n    \n    \n      Log In\n    \n    \n      Log Out\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./topnav.component.css\n                \n                .mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 99;\n}\n\n.main-navigation {\n  display: flex;\n  align-self: baseline;\n}\n\n.spacer {\n  flex: 1 1 0;\n}\n\n.app-title {\n  font-size: 24px;\n  font-weight: 400;\n}\n\n.mat-nav-list .mat-list-item {\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu    devDo              My Board              Sign Up              Log In              Log Out        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:22\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  MatSnackBar,\n  MatSnackBarVerticalPosition\n} from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(\n    message: string,\n    action: any,\n    duration: number,\n    position: MatSnackBarVerticalPosition\n  ) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return;\n    }\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/user.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from './user.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly URL = environment.apiUrl + '/user';\n\n  constructor(private http: HttpClient) {}\n\n  update(id: string, user: Partial): Observable>> {\n    return this.http.put(`${this.URL}/${id}`, user, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyEmailComponent.html":{"url":"components/VerifyEmailComponent.html","title":"component - VerifyEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VerifyEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/email/verify-email/verify-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-email\n            \n\n            \n                styleUrls\n                ./verify-email.component.css\n            \n\n\n\n            \n                templateUrl\n                ./verify-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, userService: UserService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/email/verify-email/verify-email.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmailErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmailErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:52\n                \n            \n\n\n            \n                \n                    Handle email errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:29\n                \n            \n\n\n            \n                \n                    Validate user's email address.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:64\n                \n            \n\n\n            \n                \n                    Resend verification email with a new token.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/email/verify-email/verify-email.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { UserService } from '../../user.service';\nimport { map, concatMap, catchError } from 'rxjs/operators';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n  email: FormControl;\n  errorMessage: string;\n  isVisible: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Validate user's email address.\n   */\n  ngOnInit() {\n    this.route.paramMap\n      .pipe(\n        map(param => param.get('token')),\n        concatMap(token => this.authService.getEmailVerificationToken(token)),\n        concatMap(res => this.userService.update(res.token.userId, { isVerified: true })),\n        catchError(error => {\n          if (error.error.message === 'Your request to verify your email has expired.') {\n            this.isVisible = true;\n          } else {\n            this.isVisible = false;\n          }\n          return (this.errorMessage = error.error.message);\n        })\n      )\n      .subscribe();\n\n    this.email = new FormControl(null, [Validators.required, Validators.email]);\n  }\n\n  /**\n   * Handle email errors.\n   */\n  getEmailErrors(): string {\n    if (this.email.hasError('required')) {\n      return 'You must enter your email';\n    } else if (this.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Resend verification email with a new token.\n   */\n  onSubmit() {\n    this.authService.resendVerificationToken(this.email.value).subscribe(() => {\n      this.isVisible = false;\n      this.uiService.showSnackBar(\n        'A confirmation email is on its way to your inbox. Please confirm your email before login',\n        null,\n        5000,\n        'top'\n      );\n    });\n  }\n}\n\n    \n\n    \n        \n  Your email has been verfied. You can now log in.\n  {{ errorMessage }}\n\n  \n    Enter your email address to receive a new verification email.\n    \n      \n    \n    {{ getEmailErrors() }}\n    Submit\n  \n\n\n    \n\n    \n                \n                    ./verify-email.component.css\n                \n                .mat-card {\n  min-width: 300px;\n  width: 50%;\n  margin: 50px auto;\n  text-align: center;\n}\n\n.email {\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  width: 50%;\n  margin: auto;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your email has been verfied. You can now log in.  {{ errorMessage }}      Enter your email address to receive a new verification email.                  {{ getEmailErrors() }}    Submit  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'},{'name': 'VerifyEmailComponent', 'selector': 'app-verify-email'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/auth/email/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/email/verify-email/verify-email.component.ts\n            \n            component\n            VerifyEmailComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/board/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-http.service.ts\n            \n            injectable\n            TaskHttpService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-state.service.ts\n            \n            injectable\n            TaskStateService\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task.model.ts\n            \n            interface\n            ITask\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n            \n            component\n            TasksCardListComponent\n            \n                27 %\n                (5/18)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/board/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/core/navigation/topnav/topnav.component.ts\n            \n            component\n            TopnavComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.0.2\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            core-js : ^2.6.10\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 8.0.2.\nDocumentation\nThe documentation for this project can be found here.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_exports\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_declarations\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nMaterialModule->ModalModule\n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nMaterialModule->EmailModule\n\n\n\nAuthModule -->\n\nModalModule->AuthModule\n\n\n\nBoardModule -->\n\nModalModule->BoardModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nEmailModule -->\n\nResetPasswordComponent->EmailModule\n\n\n\n\n\nVerifyEmailComponent\n\nVerifyEmailComponent\n\nEmailModule -->\n\nVerifyEmailComponent->EmailModule\n\n\n\n\n\nEmailRoutingModule\n\nEmailRoutingModule\n\nEmailModule -->\n\nEmailRoutingModule->EmailModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskArrayResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            TaskResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            UserResponseType   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/board/tasks/task-http.service.ts\n    \n    \n        \n            \n                \n                    \n                    TaskArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    src/app/auth/auth.service.ts\n    \n    \n        \n            \n                \n                    \n                    UserResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: HEROKU_URL\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v2'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
