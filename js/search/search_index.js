var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.352,1,0.98]],["body/components/AppComponent.html",[0,0.626,1,1.673,2,1.677,3,0.269,4,0.238,5,1.333,6,1.333,7,1.333,8,1.333,9,0.238,10,3.069,11,1.033,12,3.299,13,1.574,14,2.467,15,1.25,16,2.373,17,1.962,18,1.677,19,5.483,20,1.677,21,4.858,22,0.564,23,1.221,24,2.637,25,0.853,26,2.435,27,2.473,28,1.072,29,3.62,30,0.853,31,0.025,32,1.058,33,0.607,34,0.748,35,3.62,36,4.858,37,1.574,38,4.118,39,0.91,40,1.25,41,0.451,42,0.302,43,3.62,44,0.269,45,0.336,46,1.173,47,3.62,48,0.853,49,1.788,50,1.788,51,1.333,52,2.157,53,1.333,54,1.333,55,0.97,56,1.333,57,1.033,58,1.173,59,1.333,60,0.97,61,1.333,62,0.97,63,1.333,64,0.97,65,1.333,66,0.97,67,1.173,68,1.333,69,1.033,70,1.333,71,0.97,72,1.333,73,1.033,74,1.173,75,1.173,76,1.333,77,1.033,78,1.333,79,1.033,80,1.333,81,1.333,82,1.333,83,0.013,84,0.017,85,0.013]],["title/modules/AppModule.html",[86,0.92,87,2.31]],["body/modules/AppModule.html",[1,1.951,3,0.28,4,0.247,9,0.247,17,1.075,31,0.025,41,0.619,42,0.314,44,0.28,45,0.349,48,0.887,83,0.013,84,0.017,85,0.013,86,1.009,87,4.667,88,1.3,89,1.694,90,2.91,91,2.91,92,2.91,93,1.48,94,3.192,95,3.192,96,3.192,97,3.192,98,3.192,99,3.311,100,3.9,101,3.9,102,3.9,103,2.595,104,1.959,105,1.48,106,3.765,107,2.244,108,4.986,109,4.227,110,2.814,111,2.095,112,4.986,113,3.765,114,4.986,115,5.591,116,2.307,117,2.307,118,3.765,119,3.765,120,3.765,121,3.765,122,4.986,123,4.986,124,4.986,125,2.595]],["title/modules/AppRoutingModule.html",[86,0.92,99,1.787]],["body/modules/AppRoutingModule.html",[0,0.558,3,0.321,4,0.284,9,0.284,31,0.025,37,1.399,41,0.6,42,0.36,44,0.321,45,0.401,62,1.46,66,1.46,67,1.766,83,0.015,84,0.019,85,0.015,88,1.491,93,1.698,99,2.836,107,1.944,111,2.29,126,3.662,127,3.229,128,3.362,129,4.074,130,2.248,131,4.32,132,3.666,133,4.32,134,4.32,135,2.906,136,3.662,137,2.248,138,4.833,139,2.647,140,5.45,141,4.32,142,4.32,143,3.662,144,4.32,145,4.32,146,3.666,147,4.32,148,4.32]],["title/guards/AuthGuard.html",[132,2.31,149,2.31]],["body/guards/AuthGuard.html",[3,0.29,4,0.256,9,0.256,11,1.114,12,2.198,13,1.265,22,0.608,23,1.284,25,0.92,26,2.626,27,2.526,28,1.128,30,1.204,31,0.025,32,0.986,33,0.856,34,1.055,37,1.655,39,0.981,41,0.56,42,0.326,44,0.29,45,0.362,46,1.265,83,0.014,84,0.018,85,0.014,130,2.032,132,3.435,137,2.032,143,5.119,149,3.435,150,3.904,151,3.31,152,6.718,153,5.108,154,4.896,155,3.904,156,5.108,157,3.904,158,3.435,159,5.108,160,4.33,161,5.108,162,5.108,163,5.108,164,5.108,165,3.205,166,4.33,167,3.818,168,1.88,169,1.187,170,2.626,171,2.393,172,1.437,173,4.826,174,3.904,175,1.88,176,3.31]],["title/interceptors/AuthInterceptor.html",[101,2.105,177,2.105]],["body/interceptors/AuthInterceptor.html",[3,0.309,4,0.273,9,0.273,11,1.187,13,1.347,22,0.648,23,1.337,25,0.98,26,2.797,27,2.57,28,1.175,30,1.254,31,0.025,32,1.027,33,0.892,34,1.099,39,1.045,41,0.544,42,0.347,44,0.309,45,0.386,46,1.347,83,0.014,84,0.019,85,0.014,101,3.261,116,2.549,137,2.769,168,1.959,170,2.797,175,1.531,177,3.261,178,3.526,179,3.526,180,3.579,181,4.511,182,4.159,183,4.511,184,5.243,185,4.974,186,5.243,187,4.159,188,3.579,189,5.321,190,5.321,191,3.526,192,4.511,193,5.321,194,4.159,195,4.159,196,4.159,197,4.159,198,4.159,199,4.159,200,4.159]],["title/modules/AuthModule.html",[86,0.92,201,2.31]],["body/modules/AuthModule.html",[3,0.313,4,0.276,9,0.276,31,0.025,41,0.618,42,0.351,44,0.313,45,0.39,48,0.992,64,1.757,71,1.757,83,0.015,84,0.019,85,0.015,86,1.127,88,1.453,89,1.893,90,3.07,91,2.19,92,2.19,93,1.654,103,2.79,104,2.19,105,1.654,107,2.412,111,2.252,117,2.579,201,4.672,202,3.567,203,3.567,204,3.567,205,4.019,206,2.951,207,4.208,208,3.285,209,2.369,210,4.544,211,2.369,212,3.145,213,4.208,214,3.567,215,3.567]],["title/modules/AuthRoutingModule.html",[86,0.92,205,2.105]],["body/modules/AuthRoutingModule.html",[0,0.591,3,0.353,4,0.311,9,0.311,31,0.025,41,0.601,42,0.396,44,0.353,45,0.44,64,1.547,71,1.547,83,0.017,84,0.02,85,0.017,88,1.638,93,1.865,107,2.135,111,2.427,127,3.546,128,3.507,129,4.318,130,2.469,137,2.469,138,4.318,205,3.54,214,4.022,215,4.022,216,4.744,217,3.546,218,3.546,219,4.022]],["title/injectables/AuthService.html",[27,1.35,168,1.265]],["body/injectables/AuthService.html",[3,0.138,4,0.122,9,0.122,12,1.045,22,0.289,23,0.746,25,0.699,27,1.166,28,1.374,30,1.09,31,0.025,32,0.893,33,0.868,34,0.956,37,1.916,39,1.46,40,1.788,41,0.48,42,0.155,44,0.138,45,0.172,58,0.961,83,0.006,84,0.01,85,0.006,105,1.456,116,1.138,125,1.544,130,0.966,137,3.078,154,3.872,167,1.388,168,1.092,169,0.564,171,1.138,172,2.448,175,1.817,176,1.574,180,3.979,188,1.995,217,2.77,218,2.218,220,1.138,221,1.388,222,0.847,223,3.705,224,3.705,225,6.088,226,3.705,227,4.232,228,4.232,229,4.232,230,3.164,231,4.232,232,4.232,233,4.232,234,2.967,235,2.967,236,1.574,237,3.588,238,2.331,239,1.856,240,2.515,241,1.856,242,1.818,243,1.856,244,2.967,245,3.024,246,4.232,247,4.232,248,1.856,249,5.547,250,1.856,251,2.967,252,2.967,253,2.383,254,1.856,255,2.967,256,1.856,257,2.581,258,2.967,259,3.619,260,1.856,261,2.847,262,3.319,263,1.856,264,2.967,265,4.934,266,1.856,267,2.515,268,2.967,269,3.141,270,1.856,271,2.967,272,2.515,273,1.856,274,3.164,275,1.856,276,2.77,277,1.092,278,1.024,279,1.939,280,2.492,281,4.934,282,1.856,283,1.79,284,1.856,285,1.856,286,1.856,287,1.856,288,1.388,289,1.249,290,1.574,291,1.574,292,1.388,293,1.388,294,1.388,295,4.232,296,1.856,297,3.141,298,3.705,299,1.856,300,1.856,301,2.515,302,3.705,303,1.67,304,1.856,305,1.856,306,1.574,307,1.856,308,2.967,309,1.856,310,1.856,311,2.967,312,2.967,313,2.967,314,3.141,315,1.856,316,2.967,317,2.515,318,2.967,319,2.086,320,2.967,321,1.995,322,1.856,323,2.967,324,1.856,325,2.967,326,1.856,327,0.897,328,1.856,329,1.856,330,1.856,331,1.856,332,1.856,333,1.856,334,1.856,335,1.856,336,1.856,337,1.856,338,1.856,339,1.856,340,1.856,341,1.856,342,1.856,343,1.856,344,1.856]],["title/components/BoardComponent.html",[0,0.352,55,0.92]],["body/components/BoardComponent.html",[0,0.616,1,0.987,2,1.626,3,0.257,4,0.227,5,1.273,6,1.273,7,1.273,8,1.273,9,0.227,11,0.987,13,1.526,14,2.41,15,1.194,16,2.358,17,1.949,18,1.626,20,1.626,22,0.539,23,1.184,24,2.588,25,1.262,28,1.04,31,0.025,32,0.909,39,0.869,40,1.194,41,0.321,42,0.289,44,0.257,45,0.321,48,0.815,49,1.734,50,1.734,51,1.273,52,2.117,53,1.273,54,1.273,55,1.541,56,1.273,57,0.987,58,1.12,59,1.273,60,0.927,61,1.273,62,0.927,63,1.273,64,0.927,65,1.273,66,0.927,67,1.12,68,1.273,69,0.987,70,1.273,71,0.927,72,1.273,73,0.987,74,1.12,75,1.12,76,1.273,77,0.987,78,1.273,79,0.987,80,1.273,81,1.273,82,1.273,83,0.012,84,0.016,85,0.012,139,3.687,242,2.119,327,2.588,345,2.932,346,5.357,347,4.71,348,3.459,349,3.459,350,2.451,351,2.652,352,2.451,353,2.585,354,2.119,355,2.932,356,3.016,357,3.459,358,3.993,359,2.326,360,1.8,361,2.932,362,2.932,363,2.585,364,1.947,365,2.119,366,4.71,367,3.459,368,2.326,369,2.326,370,2.326,371,2.932,372,2.932,373,1.947,374,2.932,375,2.932]],["title/modules/BoardModule.html",[86,0.92,376,2.31]],["body/modules/BoardModule.html",[3,0.274,4,0.242,9,0.242,31,0.025,41,0.627,42,0.308,44,0.274,45,0.342,48,0.869,55,1.695,57,1.806,73,1.806,75,1.593,77,1.806,83,0.013,84,0.017,85,0.013,86,0.988,88,1.273,89,1.659,90,2.88,91,1.919,92,1.919,93,1.449,103,2.559,104,1.919,105,1.449,107,2.213,111,2.066,117,2.259,139,2.259,206,2.846,208,3.014,209,2.076,210,4.169,211,2.076,212,2.756,376,4.729,377,3.126,378,3.126,379,3.126,380,3.877,381,3.877,382,3.877,383,3.687,384,4.918,385,3.126,386,3.687,387,3.687,388,2.756,389,3.687,390,3.126,391,2.756,392,3.687,393,3.687,394,2.756,395,3.687,396,3.687]],["title/modules/BoardRoutingModule.html",[86,0.92,381,2.105]],["body/modules/BoardRoutingModule.html",[0,0.503,3,0.366,4,0.322,9,0.322,31,0.025,41,0.586,42,0.41,44,0.366,45,0.456,55,1.581,83,0.017,84,0.021,85,0.017,88,1.696,93,1.931,107,2.211,111,2.479,127,3.673,128,3.56,129,4.411,130,2.557,137,2.557,138,3.673,219,4.166,381,3.616,385,4.166,397,4.914]],["title/modules/CoreModule.html",[86,0.92,100,2.105]],["body/modules/CoreModule.html",[3,0.3,4,0.265,9,0.265,17,1.152,31,0.025,41,0.612,42,0.337,44,0.3,45,0.374,48,0.951,62,1.738,66,1.738,67,1.308,83,0.014,84,0.018,85,0.014,86,1.081,88,1.394,89,1.816,90,3.01,91,2.101,92,2.101,93,2.273,99,3.376,100,4.287,103,2.716,104,2.101,105,1.587,107,2.349,111,2.193,117,2.474,135,2.715,136,3.422,206,2.919,208,3.199,209,2.273,212,3.018,398,3.422,399,3.422,400,3.422,401,3.422,402,4.232,403,4.037,404,4.037,405,4.037]],["title/components/CreateTaskComponent.html",[0,0.352,57,0.98]],["body/components/CreateTaskComponent.html",[0,0.452,1,0.484,2,0.952,3,0.126,4,0.111,5,0.624,6,1.015,7,0.624,8,0.624,9,0.111,11,1.615,13,0.893,14,1.569,15,0.585,16,2.056,17,1.7,18,0.952,20,0.952,22,0.543,23,0.693,24,1.807,25,0.4,28,1.332,30,0.4,31,0.025,32,0.673,33,0.794,34,0.35,39,1.307,40,1.386,41,0.439,42,0.141,44,0.126,45,0.157,46,0.549,48,0.4,49,1.015,50,1.015,51,0.624,52,1.479,53,0.624,54,0.624,55,0.454,56,0.624,57,1.146,58,1.998,59,0.624,60,0.454,61,0.624,62,0.454,63,0.624,64,0.454,65,0.624,66,0.454,67,0.549,68,0.624,69,0.484,70,0.624,71,0.454,72,0.624,73,0.484,74,1.129,75,0.893,76,0.624,77,0.484,78,0.624,79,0.484,80,0.624,81,0.624,82,0.624,83,0.006,84,0.01,85,0.006,169,0.516,172,1.838,175,1.915,188,1.855,211,0.955,222,0.787,242,1.039,257,1.861,267,2.338,277,0.624,278,0.585,279,2.045,314,1.438,319,1.963,321,1.855,327,2.135,350,2.465,351,1.963,352,1.814,353,1.268,356,1.553,359,1.141,360,0.883,363,1.268,364,0.955,365,1.69,373,0.955,388,4.562,406,5.174,407,1.438,408,2.338,409,2.758,410,1.963,411,3.436,412,3.486,413,2.758,414,2.606,415,4.419,416,3.486,417,3.486,418,3.486,419,4.736,420,4.736,421,2.261,422,4.016,423,4.016,424,2.062,425,4.419,426,2.062,427,2.949,428,1.141,429,2.465,430,2.81,431,2.758,432,2.606,433,1.696,434,1.696,435,2.701,436,1.696,437,1.696,438,1.553,439,2.062,440,2.261,441,1.696,442,2.758,443,3.731,444,1.696,445,2.955,446,1.696,447,4.56,448,2.606,449,1.696,450,1.696,451,3.002,452,1.696,453,1.696,454,1.696,455,1.696,456,4.016,457,4.419,458,1.696,459,1.696,460,2.758,461,2.062,462,1.438,463,2.606,464,1.268,465,0.819,466,1.141,467,1.268,468,1.696,469,2.338,470,2.062,471,2.338,472,1.696,473,1.696,474,1.696,475,2.758,476,4.016,477,2.758,478,1.696,479,1.696,480,1.696,481,1.696,482,1.268,483,1.268,484,1.696,485,1.696,486,1.696,487,2.338,488,1.696,489,2.338,490,2.062,491,3.405,492,1.696,493,2.758,494,1.438,495,1.696,496,1.696,497,1.696,498,2.338,499,1.438,500,2.758,501,2.758,502,2.338,503,2.338,504,1.696,505,1.696,506,1.696,507,1.696,508,1.268,509,1.268,510,1.696,511,2.338,512,1.696,513,1.69,514,2.758,515,1.553,516,1.855,517,1.696,518,1.438,519,1.268,520,1.438,521,1.696,522,2.338,523,1.141,524,1.696,525,3.002,526,1.268,527,1.438,528,1.268,529,1.696,530,1.696,531,1.696,532,1.696,533,1.696,534,1.268,535,1.268,536,1.696,537,1.438,538,1.696]],["title/components/DialogComponent.html",[0,0.352,60,0.92]],["body/components/DialogComponent.html",[0,0.547,1,0.983,2,1.622,3,0.256,4,0.226,5,1.268,6,1.268,7,1.268,8,1.268,9,0.226,15,1.189,16,2.356,17,1.948,18,1.622,20,1.622,22,0.536,25,0.812,28,1.037,30,0.812,31,0.025,32,1.032,33,0.788,34,0.712,41,0.436,42,0.287,44,0.256,45,0.32,48,0.812,49,1.73,50,1.73,51,1.268,52,2.114,53,1.268,54,1.268,55,0.923,56,1.268,57,0.983,58,1.116,59,1.268,60,1.538,61,1.268,62,0.923,63,1.268,64,0.923,65,1.268,66,0.923,67,1.116,68,1.268,69,0.983,70,1.268,71,0.923,72,1.268,73,0.983,74,1.116,75,1.116,76,1.268,77,0.983,78,1.268,79,0.983,80,1.268,81,1.268,82,1.268,83,0.012,84,0.016,85,0.012,222,1.341,245,3.519,257,1.846,350,1.793,351,2.645,352,1.793,356,1.94,360,1.793,364,1.94,365,2.111,373,1.94,427,1.664,511,3.983,528,2.575,534,2.575,535,2.575,539,2.575,540,3.512,541,4.532,542,3.983,543,4.532,544,3.445,545,4.042,546,3.445,547,2.921,548,3.445,549,3.445,550,2.921,551,2.921,552,2.317,553,1.55,554,2.921,555,4.698,556,4.698,557,3.983,558,3.445,559,2.921,560,2.921,561,3.445,562,3.445,563,2.575,564,3.445,565,3.445]],["title/interfaces/DialogData.html",[545,2.31,553,1.545]],["body/interfaces/DialogData.html",[0,0.586,3,0.348,4,0.307,9,0.307,16,1.616,17,1.336,18,1.616,20,1.616,22,0.729,31,0.025,33,0.961,41,0.531,42,0.391,44,0.348,45,0.434,60,1.254,83,0.016,84,0.02,85,0.016,222,1.636,245,2.869,257,2.647,360,3.358,427,3.117,539,3.5,540,3.5,541,3.969,542,3.969,543,3.969,545,4.165,550,3.969,551,3.969,552,3.149,553,2.107,554,3.969,566,3.149]],["title/modules/DialogModule.html",[86,0.92,382,2.105]],["body/modules/DialogModule.html",[3,0.329,4,0.29,9,0.29,31,0.025,41,0.586,42,0.368,44,0.329,45,0.41,48,1.041,60,1.887,83,0.015,84,0.019,85,0.015,86,1.183,88,1.524,89,1.987,90,3.139,91,2.298,92,2.298,93,2.371,103,2.876,104,2.298,105,1.735,107,2.487,111,2.322,206,2.987,208,3.387,209,2.486,382,4.21,567,3.744,568,3.744,569,4.416,570,3.744,571,4.416,572,5.526,573,4.416,574,3.744]],["title/interceptors/ErrorInterceptor.html",[102,2.105,177,2.105]],["body/interceptors/ErrorInterceptor.html",[3,0.292,4,0.258,9,0.258,11,1.122,13,1.273,22,0.612,23,1.289,25,0.926,28,1.132,30,1.209,31,0.025,32,0.99,33,0.86,34,1.06,39,0.988,41,0.582,42,0.328,44,0.292,45,0.364,46,1.273,83,0.014,84,0.018,85,0.014,102,3.144,116,2.409,168,1.889,169,1.195,175,1.889,177,3.144,178,3.332,181,5.132,183,4.349,184,5.132,185,4.841,186,5.132,191,3.332,192,4.349,238,2.898,303,2.888,319,2.213,435,3.45,465,1.899,515,2.213,575,3.332,576,3.93,577,3.93,578,3.93,579,4.269,580,5.13,581,3.93,582,3.93,583,3.93,584,3.93,585,3.93,586,5.13,587,3.93,588,3.93,589,2.938,590,3.332,591,3.332,592,3.332,593,3.93,594,3.93,595,5.13,596,3.93,597,3.332,598,3.93]],["title/components/HomeComponent.html",[0,0.352,62,0.92]],["body/components/HomeComponent.html",[0,0.551,1,0.737,2,1.321,3,0.192,4,0.17,5,0.951,6,0.951,7,0.951,8,0.951,9,0.17,11,0.737,13,1.24,14,2.052,15,0.892,16,2.25,17,1.86,18,1.321,20,1.321,22,0.402,23,0.962,24,2.268,25,0.609,27,2.293,28,1.244,30,0.609,31,0.025,32,0.88,33,0.642,34,0.534,37,1.24,39,1.146,40,1.574,41,0.468,42,0.216,44,0.192,45,0.24,46,0.837,48,0.609,49,1.409,50,1.409,51,0.951,52,1.856,53,0.951,54,0.951,55,0.692,56,0.951,57,0.737,58,0.837,59,0.951,60,0.692,61,0.951,62,1.351,63,0.951,64,0.692,65,0.951,66,0.692,67,1.744,68,0.951,69,0.737,70,0.951,71,0.692,72,0.951,73,0.737,74,0.837,75,0.837,76,0.951,77,0.737,78,0.951,79,0.737,80,0.951,81,0.951,82,0.951,83,0.009,84,0.013,85,0.009,130,1.344,154,4.214,169,0.786,172,1.856,173,4.274,222,1.093,230,1.931,242,1.583,277,0.951,278,0.892,283,1.849,327,2.435,350,1.344,351,2.155,352,2.623,354,3.299,356,1.455,359,1.738,360,1.344,364,1.455,365,2.794,368,1.738,369,1.738,370,1.738,410,2.567,421,2.838,438,2.155,513,2.346,515,1.455,516,1.738,518,3.245,519,2.861,520,2.19,523,3.067,534,1.931,535,1.931,559,2.19,560,2.19,599,2.19,600,4.779,601,4.559,602,3.828,603,4.559,604,5.041,605,2.583,606,3.828,607,2.583,608,2.861,609,2.583,610,2.583,611,3.828,612,3.391,613,3.391,614,3.067,615,2.583,616,1.931,617,3.828,618,2.19,619,2.583,620,2.583,621,2.583,622,2.583,623,2.861,624,3.828,625,3.828,626,3.828,627,3.245,628,3.828,629,3.828,630,3.828,631,3.828,632,2.583,633,2.583,634,2.583,635,2.583,636,3.245,637,2.19,638,2.19,639,2.583,640,2.19,641,2.583,642,3.828,643,2.19,644,2.583,645,2.583,646,2.583,647,2.583,648,2.583,649,1.931,650,1.931,651,2.583,652,2.19,653,2.19]],["title/interfaces/ITask.html",[553,1.545,654,1.787]],["body/interfaces/ITask.html",[3,0.333,4,0.294,9,0.294,11,1.866,22,0.698,31,0.025,33,1.096,34,1.313,44,0.333,83,0.016,84,0.019,85,0.016,222,1.592,253,3.578,257,2.753,411,2.524,427,3.07,440,3.578,553,2.017,566,3.015,654,2.903,655,3.8,656,3.8,657,5.387,658,5.148,659,5.148,660,5.148]],["title/components/LoginComponent.html",[0,0.352,64,0.92]],["body/components/LoginComponent.html",[0,0.432,1,0.649,2,1.201,3,0.169,4,0.149,5,0.837,6,0.837,7,0.837,8,0.837,9,0.149,13,1.126,14,1.9,15,0.785,16,2.196,17,1.816,18,1.201,20,1.201,22,0.354,23,0.874,24,2.127,25,0.536,26,1.53,27,2.111,28,1.373,30,0.536,31,0.025,32,0.815,33,0.793,34,0.47,37,1.126,39,1.28,40,1.458,41,0.472,42,0.19,44,0.169,45,0.211,46,0.737,48,0.536,49,1.28,50,1.28,51,0.837,52,1.741,53,0.837,54,0.837,55,0.609,56,0.837,57,0.649,58,1.368,59,0.837,60,0.609,61,0.837,62,0.609,63,0.837,64,1.267,65,0.837,66,0.609,67,0.737,68,0.837,69,0.649,70,0.837,71,0.609,72,0.837,73,0.649,74,0.737,75,0.737,76,0.837,77,0.649,78,0.837,79,0.649,80,0.837,81,0.837,82,0.837,83,0.008,84,0.012,85,0.008,125,1.81,169,0.692,170,1.53,172,2.058,175,1.978,211,1.281,218,3.534,222,0.993,230,1.7,238,2.515,257,0.894,259,3.18,261,3.877,262,3.759,277,1.28,278,1.201,279,1.659,283,2.04,319,1.958,410,2.377,421,2.662,426,2.599,435,3.18,438,1.958,443,4.416,451,3.534,462,1.928,463,3.156,469,2.948,470,2.599,589,3.808,608,2.599,614,3.426,618,1.928,661,1.928,662,4.222,663,3.477,664,3.579,665,4.319,666,3.426,667,3.579,668,4.222,669,4.554,670,4.008,671,4.554,672,3.477,673,2.274,674,4.008,675,4.319,676,2.948,677,2.274,678,2.274,679,2.948,680,2.948,681,2.274,682,3.477,683,2.274,684,2.274,685,2.274,686,2.274,687,2.274,688,1.928,689,2.274,690,1.928,691,2.948,692,2.274,693,2.599,694,2.274,695,1.928,696,2.274,697,1.928,698,1.928,699,1.928,700,2.948,701,2.274,702,2.274,703,1.928,704,1.928,705,1.928,706,2.948,707,2.948]],["title/modules/MaterialModule.html",[86,0.92,206,1.545]],["body/modules/MaterialModule.html",[3,0.302,4,0.266,9,0.266,31,0.025,41,0.653,42,0.338,44,0.302,45,0.376,83,0.014,84,0.018,85,0.014,88,1.4,93,1.594,111,2.199,206,2.355,552,2.728,708,4.055,709,5.235,710,3.031,711,5.235,712,4.055,713,4.055,714,5.235,715,4.055,716,5.235,717,4.055,718,5.235,719,4.055,720,5.235,721,4.055,722,5.235,723,4.055,724,5.235,725,4.055,726,5.235,727,3.438,728,5.235,729,4.055,730,5.235,731,4.055,732,4.055,733,5.235,734,3.438,735,3.438,736,5.235,737,4.055,738,5.235,739,4.055,740,3.031,741,5.235,742,4.055,743,5.235]],["title/modules/NavigationModule.html",[86,0.92,402,2.105]],["body/modules/NavigationModule.html",[3,0.311,4,0.274,9,0.274,31,0.025,41,0.607,42,0.349,44,0.311,45,0.388,48,0.985,69,1.981,79,1.868,83,0.015,84,0.019,85,0.015,86,1.119,88,1.443,89,1.88,90,3.06,91,2.174,92,2.174,93,2.311,99,3.406,103,2.777,104,2.174,105,1.642,107,2.401,111,2.242,117,2.561,126,3.542,206,2.945,208,3.27,209,2.353,402,4.272,574,3.542,744,3.542,745,3.542,746,4.178,747,3.542,748,4.178,749,4.178,750,4.178]],["title/components/PageNotFoundComponent.html",[0,0.352,66,0.92]],["body/components/PageNotFoundComponent.html",[0,0.611,1,0.963,2,1.599,3,0.251,4,0.221,5,1.242,6,1.242,7,1.242,8,1.242,9,0.221,11,0.963,15,1.165,16,2.349,17,1.942,18,1.599,20,1.599,25,1.246,28,0.745,31,0.025,32,0.894,41,0.313,42,0.281,44,0.251,45,0.313,48,0.795,49,1.705,50,1.705,51,1.242,52,2.096,53,1.242,54,1.242,55,0.904,56,1.242,57,0.963,58,1.093,59,1.242,60,0.904,61,1.242,62,0.904,63,1.242,64,0.904,65,1.242,66,1.525,67,2.204,68,1.242,69,0.963,70,1.242,71,0.904,72,1.242,73,0.963,74,1.093,75,1.093,76,1.242,77,0.963,78,1.242,79,0.963,80,1.242,81,1.242,82,1.242,83,0.012,84,0.016,85,0.012,135,3.115,146,3.828,303,3.205,352,1.756,354,2.838,368,2.269,369,2.269,370,2.269,513,2.838,515,1.9,516,2.269,525,4.255,526,2.522,527,2.86,600,3.926,636,3.926,637,2.86,638,2.86,640,2.86,649,2.522,650,2.522,652,2.86,653,2.86,751,3.926,752,2.86,753,5.692,754,5.288,755,4.631,756,3.374,757,4.631,758,4.631,759,4.631,760,4.631,761,4.631,762,4.631,763,3.926,764,3.374,765,3.374,766,2.522]],["title/components/SidenavComponent.html",[0,0.352,69,0.98]],["body/components/SidenavComponent.html",[0,0.484,1,0.784,2,1.382,3,0.204,4,0.18,5,1.011,6,1.011,7,1.011,8,1.011,9,0.18,13,1.297,14,2.126,15,0.948,16,2.274,17,1.88,18,1.382,20,1.382,22,0.428,23,1.006,24,2.336,25,0.647,27,2.338,28,1.346,30,0.647,31,0.025,32,0.912,33,0.87,34,0.567,37,1.682,39,1.187,40,1.631,41,0.534,42,0.229,44,0.204,45,0.255,46,0.89,48,0.647,49,1.474,50,1.474,51,1.011,52,1.911,53,1.011,54,1.011,55,0.736,56,1.011,57,0.784,58,0.89,59,1.011,60,0.736,61,1.011,62,0.736,63,1.011,64,0.736,65,1.011,66,0.736,67,0.89,68,1.011,69,1.482,70,1.011,71,0.736,72,1.011,73,0.784,74,0.89,75,0.89,76,1.011,77,0.784,78,1.011,79,0.784,80,1.011,81,1.011,82,1.011,83,0.01,84,0.014,85,0.01,105,2.04,139,2.453,158,2.693,165,3.107,169,0.835,172,1.011,222,1.143,261,3.875,277,1.011,278,0.948,283,2.508,317,3.394,352,1.429,354,1.683,465,1.327,523,1.847,547,2.328,612,2.693,613,2.693,616,2.053,710,2.053,727,2.328,740,2.993,766,2.053,767,2.328,768,5.192,769,4.724,770,4.003,771,4.724,772,4.724,773,4.005,774,4.401,775,4.401,776,4.401,777,2.328,778,4.884,779,4.003,780,2.746,781,3.394,782,4.005,783,2.746,784,2.746,785,3.394,786,4.724,787,4.003,788,4.003,789,2.746,790,2.746,791,2.746,792,2.746,793,1.683,794,3.394,795,2.328,796,2.328,797,2.328,798,2.328,799,2.328,800,2.328,801,4.003,802,2.328,803,2.746,804,3.394,805,2.746]],["title/components/SignupComponent.html",[0,0.352,71,0.92]],["body/components/SignupComponent.html",[0,0.372,1,0.514,2,0.999,3,0.134,4,0.118,5,0.663,6,0.663,7,0.663,8,0.663,9,0.118,13,0.938,14,1.633,15,0.621,16,2.087,17,1.725,18,0.999,20,0.999,22,0.28,23,0.727,24,1.871,25,0.424,27,2.011,28,1.35,30,0.424,31,0.025,32,0.701,33,0.697,34,0.372,37,0.938,39,1.286,40,1.253,41,0.451,42,0.15,44,0.134,45,0.167,46,0.583,48,0.424,49,1.066,50,1.066,51,0.663,52,1.531,53,0.663,54,0.663,55,0.482,56,0.663,57,0.514,58,1.176,59,0.663,60,0.482,61,0.663,62,0.482,63,0.663,64,0.482,65,0.663,66,0.482,67,0.583,68,0.663,69,0.514,70,0.663,71,1.114,72,0.663,73,0.514,74,0.583,75,0.583,76,0.663,77,0.514,78,0.663,79,0.514,80,0.663,81,0.663,82,0.663,83,0.006,84,0.01,85,0.006,125,2.164,160,2.454,169,0.547,170,1.211,172,1.959,175,2.195,211,1.014,217,3.109,222,0.826,238,2.302,259,3.874,262,3.693,274,2.164,276,3.406,277,1.336,278,1.253,283,1.754,319,2.341,327,1.398,410,2.044,421,2.341,426,2.164,435,3.578,438,1.63,443,4.573,451,2.714,463,1.346,470,3.109,471,1.526,489,3.525,490,2.164,491,3.525,537,4.51,557,3.525,589,2.164,608,2.164,612,3.946,613,3.946,614,3.065,664,3.077,665,3.863,666,2.797,667,3.077,669,4.126,670,3.525,671,4.126,674,4.51,675,4.51,676,4.126,679,2.454,680,2.454,688,1.526,690,1.526,691,2.454,693,2.164,695,1.526,697,1.526,698,1.526,699,1.526,700,2.454,703,1.526,704,1.526,705,1.526,706,3.525,707,3.525,806,1.526,807,3.63,808,2.894,809,4.556,810,3.63,811,4.867,812,4.867,813,1.8,814,4.867,815,2.894,816,1.8,817,2.894,818,2.454,819,1.8,820,1.8,821,1.8,822,1.8,823,1.8,824,2.894,825,4.159,826,1.8,827,1.8,828,1.8,829,1.8,830,1.8,831,1.8,832,1.8,833,2.894,834,2.894,835,2.454,836,1.346,837,1.8,838,1.8,839,1.8,840,1.8,841,1.8,842,1.526,843,1.8,844,1.8,845,1.8,846,1.8,847,1.8,848,1.8,849,1.8,850,1.8,851,1.8,852,1.8,853,1.8,854,1.8,855,2.894]],["title/injectables/TaskHttpService.html",[168,1.265,429,1.787]],["body/injectables/TaskHttpService.html",[3,0.192,4,0.17,9,0.17,11,1.44,12,1.457,22,0.403,23,0.963,25,0.61,28,1.289,30,1.269,31,0.025,32,1.04,33,0.978,34,1.113,39,1.565,41,0.541,42,0.216,44,0.192,45,0.24,46,0.838,58,1.634,74,1.241,83,0.009,84,0.013,85,0.009,116,1.585,165,3.82,168,1.411,169,0.787,171,1.585,172,1.857,175,1.983,220,1.585,222,1.094,236,2.193,237,4.277,238,2.626,240,3.248,257,2.406,277,0.953,278,0.893,279,1.983,280,1.74,288,1.934,289,1.74,290,2.193,292,3.411,294,2.864,297,2.193,301,4.566,411,3.915,429,1.994,440,3.601,465,1.25,499,3.248,579,3.771,654,2.625,781,4.566,793,1.585,856,4.032,857,1.934,858,4.563,859,3.248,860,3.832,861,5.045,862,3.832,863,3.832,864,3.832,865,2.587,866,3.869,867,3.248,868,2.587,869,3.248,870,3.832,871,2.587,872,3.832,873,2.587,874,3.248,875,5.386,876,2.587,877,3.248,878,3.869,879,1.74,880,2.193,881,2.193,882,4.216,883,2.587,884,2.587,885,2.587,886,2.587,887,2.587]],["title/injectables/TaskStateService.html",[168,1.265,430,1.934]],["body/injectables/TaskStateService.html",[3,0.204,4,0.18,9,0.18,11,1.573,12,1.542,22,0.426,23,1.004,25,0.645,28,1.412,30,1.299,31,0.025,32,1.064,33,0.924,34,1.139,39,1.385,40,1.628,41,0.511,42,0.228,44,0.204,45,0.254,46,0.887,74,1.973,83,0.01,84,0.014,85,0.01,165,3.104,168,1.471,169,0.832,171,1.678,172,2.287,175,1.471,220,1.678,222,1.14,253,1.542,257,2.262,277,2.119,278,1.987,279,2.262,280,1.842,411,3.677,427,1.323,428,1.842,429,2.995,430,2.249,440,3.601,465,1.323,466,1.842,654,3.092,793,2.89,856,4.351,866,3.386,877,3.386,879,1.842,882,3.875,888,2.321,889,5.755,890,5.755,891,5.755,892,3.994,893,3.994,894,3.994,895,3.994,896,3.994,897,3.994,898,2.738,899,3.994,900,2.738,901,3.994,902,2.738,903,3.386,904,3.487,905,3.994,906,2.738,907,5.755,908,2.738,909,3.994,910,2.738,911,3.994,912,2.738,913,2.738,914,3.994,915,2.738,916,2.738,917,2.738,918,2.738,919,2.738,920,2.738,921,2.738,922,2.738,923,2.738,924,2.738]],["title/components/TasksCardListComponent.html",[0,0.352,73,0.98]],["body/components/TasksCardListComponent.html",[0,0.347,1,0.465,2,0.921,3,0.121,4,0.107,5,0.599,6,0.599,7,0.599,8,0.599,9,0.107,11,1.119,13,0.864,15,0.562,16,2.035,17,1.682,18,0.921,20,0.921,22,0.253,23,0.67,25,0.629,28,1.349,30,1.156,31,0.025,32,1.023,33,0.973,34,1.013,39,1.287,40,1.604,41,0.492,42,0.136,44,0.121,45,0.151,48,0.384,49,0.982,50,0.982,51,0.599,52,1.443,53,0.599,54,0.599,55,0.436,56,0.599,57,0.465,58,0.527,59,0.599,60,0.715,61,0.599,62,0.436,63,0.599,64,0.436,65,0.599,66,0.436,67,0.527,68,0.599,69,0.465,70,0.599,71,0.436,72,0.599,73,1.119,74,1.81,75,2.214,76,0.599,77,0.465,78,0.599,79,0.465,80,0.599,81,0.599,82,0.599,83,0.009,84,0.009,85,0.006,125,1.388,137,1.388,166,3.323,167,1.994,169,0.495,172,2.292,222,0.761,238,2.207,245,0.998,253,3.071,257,2.529,277,1.248,278,1.17,279,1.332,283,2.244,288,1.217,303,0.917,319,0.917,321,1.095,356,0.917,360,0.847,373,0.917,394,4.613,410,1.908,411,3.364,414,2.533,421,2.207,424,1.994,427,2.244,428,1.095,429,2.418,430,2.762,432,2.533,438,1.502,439,1.994,440,3.474,447,3.667,448,2.533,461,1.994,464,1.217,465,0.786,466,1.095,467,1.217,482,1.994,483,1.994,498,1.38,502,1.38,503,1.38,508,1.217,509,1.217,515,0.917,540,2.533,552,1.095,563,1.217,590,2.262,591,1.38,592,1.38,597,1.38,654,1.764,658,2.262,659,2.873,660,3.323,666,2.28,859,2.262,867,2.262,869,3.938,874,1.38,879,1.095,882,2.93,904,1.794,925,5.231,926,1.38,927,3.389,928,2.668,929,4.325,930,4.325,931,2.668,932,3.389,933,2.668,934,2.668,935,2.668,936,2.668,937,2.668,938,3.389,939,3.389,940,3.919,941,2.668,942,1.628,943,1.628,944,1.628,945,1.628,946,1.628,947,1.628,948,1.628,949,1.628,950,2.668,951,1.628,952,3.125,953,2.668,954,1.628,955,2.668,956,1.628,957,2.668,958,1.628,959,2.668,960,1.628,961,1.628,962,1.628,963,4.646,964,1.628,965,1.628,966,1.628,967,2.668,968,1.628,969,1.628,970,1.628,971,1.628,972,1.38,973,1.628,974,1.628,975,1.628,976,1.38,977,3.389,978,3.389,979,2.668,980,1.628,981,1.628,982,1.38,983,1.38,984,1.628,985,1.628,986,1.628,987,1.628,988,3.323,989,2.668,990,2.668,991,1.628,992,1.628,993,1.38]],["title/components/TasksComponent.html",[0,0.352,77,0.98]],["body/components/TasksComponent.html",[0,0.506,1,0.608,2,1.142,3,0.159,4,0.14,5,0.784,6,0.784,7,0.784,8,0.784,9,0.14,11,0.944,13,1.071,14,1.824,15,0.736,16,2.167,17,1.81,18,1.142,20,1.142,22,0.332,23,0.831,24,2.055,25,0.502,28,1.386,30,0.502,31,0.025,32,0.782,33,0.877,34,0.44,39,1.243,40,1.399,41,0.485,42,0.178,44,0.159,45,0.198,46,0.69,48,0.502,49,1.217,50,1.217,51,0.784,52,1.682,53,0.784,54,0.784,55,0.571,56,0.784,57,0.608,58,0.69,59,0.784,60,0.571,61,0.784,62,0.571,63,0.784,64,0.571,65,0.784,66,0.571,67,0.69,68,0.784,69,0.608,70,0.784,71,0.571,72,0.784,73,0.608,74,2.054,75,1.071,76,0.784,77,1.304,78,0.784,79,0.608,80,0.784,81,0.784,82,0.784,83,0.007,84,0.012,85,0.007,125,1.109,165,3.396,169,0.648,172,2.285,175,1.682,222,0.944,242,2.027,253,1.2,277,1.682,278,1.577,279,1.795,283,2.389,306,1.806,321,1.433,327,1.029,350,2.109,351,2.282,352,2.109,353,1.593,354,1.306,355,1.806,356,2.572,358,2.804,359,1.433,360,1.109,361,1.806,362,1.806,363,1.593,364,1.2,365,1.306,368,1.433,369,1.433,370,1.433,371,1.806,372,1.806,373,1.862,374,1.806,375,1.806,410,2.282,411,2.572,414,3.029,421,2.572,427,1.029,428,1.433,429,2.723,430,3.074,438,1.862,439,2.472,440,1.2,445,2.804,448,3.029,464,1.593,465,1.029,466,1.433,467,1.593,482,1.593,483,1.593,487,2.804,508,1.593,509,1.593,516,1.433,528,1.593,563,1.593,614,2.726,654,2.109,657,1.806,666,2.726,693,2.472,766,1.593,793,1.306,879,1.433,904,2.726,972,1.806,976,1.806,982,1.806,983,1.806,993,1.806,994,1.806,995,4.053,996,3.307,997,4.053,998,4.053,999,4.053,1000,4.053,1001,4.568,1002,4.568,1003,4.568,1004,3.307,1005,2.131,1006,2.131,1007,2.131,1008,2.131,1009,2.131,1010,3.307,1011,2.131,1012,2.131,1013,2.131,1014,2.131,1015,2.131,1016,2.131,1017,2.131,1018,3.307,1019,3.307,1020,3.307,1021,2.131,1022,2.131,1023,2.131,1024,2.131,1025,4.053,1026,4.053,1027,2.131,1028,2.131,1029,2.131,1030,2.131,1031,2.131,1032,2.131,1033,2.131,1034,2.131,1035,2.131,1036,2.131,1037,2.131,1038,3.307,1039,2.804,1040,2.131,1041,2.131,1042,2.131]],["title/components/TopnavComponent.html",[0,0.352,79,0.98]],["body/components/TopnavComponent.html",[0,0.466,1,0.736,2,1.32,3,0.192,4,0.169,5,0.95,6,0.95,7,0.95,8,0.95,9,0.169,13,1.239,14,2.05,15,0.891,16,2.25,17,1.875,18,1.32,20,1.32,22,0.595,23,0.961,24,2.267,25,0.608,27,2.292,28,1.35,30,0.608,31,0.025,32,0.879,33,0.902,34,0.533,37,1.239,39,1.266,40,1.739,41,0.499,42,0.215,44,0.192,45,0.239,46,0.836,48,0.608,49,1.408,50,1.408,51,0.95,52,1.855,53,0.95,54,0.95,55,0.691,56,0.95,57,0.736,58,0.836,59,0.95,60,0.691,61,0.95,62,0.691,63,0.95,64,0.691,65,0.95,66,0.691,67,0.836,68,0.95,69,0.736,70,0.95,71,0.691,72,0.95,73,0.736,74,0.836,75,0.836,76,0.95,77,0.736,78,0.95,79,1.438,80,1.677,81,0.95,82,0.95,83,0.009,84,0.013,85,0.009,105,1.98,139,2.343,165,3.029,169,0.784,172,0.95,180,2.572,222,1.091,253,2.153,261,3.79,279,1.503,327,1.847,350,1.342,351,2.153,364,1.452,373,2.565,424,2.858,427,1.246,432,4.021,461,3.405,465,1.246,513,1.581,515,1.452,519,1.928,522,2.187,612,2.572,613,2.572,616,1.928,623,2.858,643,2.187,649,2.858,650,1.928,710,1.928,740,2.858,773,3.862,774,4.271,775,4.271,776,4.271,777,2.187,778,4.777,782,2.187,785,3.241,793,1.581,794,3.241,795,2.187,796,2.187,797,2.187,798,2.187,799,2.187,800,2.187,802,2.187,804,3.241,904,2.572,952,2.572,1043,2.187,1044,4.556,1045,3.823,1046,5.038,1047,4.556,1048,4.556,1049,3.823,1050,2.58,1051,2.58,1052,2.58,1053,2.58,1054,3.823,1055,4.556,1056,2.58,1057,2.58,1058,2.58,1059,2.58,1060,2.58,1061,2.58,1062,2.58,1063,2.58,1064,2.58,1065,2.58,1066,2.58,1067,2.58,1068,2.58,1069,3.241,1070,2.58,1071,2.58,1072,2.58,1073,2.58,1074,2.58]],["title/injectables/UIService.html",[168,1.265,238,1.545]],["body/injectables/UIService.html",[3,0.29,4,0.256,9,0.256,11,1.114,12,2.198,22,0.608,23,1.284,25,0.92,28,1.257,30,1.204,31,0.025,32,0.986,33,0.856,34,1.055,37,1.956,39,0.981,40,1.348,41,0.528,42,0.326,44,0.29,45,0.362,46,1.265,83,0.014,84,0.018,85,0.014,168,1.88,169,1.187,171,2.393,220,2.393,222,1.458,238,2.298,257,2.237,269,4.826,272,5.119,277,1.437,278,1.348,279,2.007,280,2.626,303,2.876,350,2.658,513,3.7,553,2.298,734,3.31,735,4.826,952,3.435,1039,5.119,1075,3.31,1076,5.108,1077,5.692,1078,5.692,1079,3.904,1080,6.038,1081,5.108,1082,5.108,1083,3.904,1084,6.038,1085,3.904,1086,5.108,1087,5.108,1088,5.108,1089,5.108,1090,3.904,1091,3.904]],["title/pipes/UppercaseFirstLetterPipe.html",[380,2.105,1092,2.31]],["body/pipes/UppercaseFirstLetterPipe.html",[3,0.344,4,0.303,9,0.303,11,1.319,13,1.497,15,1.595,23,1.162,28,1.02,30,1.089,31,0.025,32,1.188,33,0.775,34,0.955,39,1.162,41,0.429,42,0.386,44,0.344,45,0.429,83,0.016,84,0.02,85,0.016,175,2.093,278,1.962,380,3.484,390,4.819,391,4.801,526,4.602,988,4.819,1092,3.823,1093,4.621,1094,4.819,1095,3.918,1096,5.684,1097,5.684,1098,4.621,1099,5.684,1100,4.621,1101,4.621]],["title/interfaces/User.html",[37,1.113,553,1.545]],["body/interfaces/User.html",[3,0.349,4,0.308,9,0.308,11,1.34,22,0.731,31,0.024,33,1.083,34,1.334,37,1.859,44,0.349,83,0.016,84,0.02,85,0.016,180,3.157,222,1.638,245,2.877,257,2.769,259,4.344,262,4.344,274,4.827,276,4.827,553,2.582,566,3.157,656,3.98,1102,3.98,1103,4.694]],["title/coverage.html",[1104,3.975]],["body/coverage.html",[0,0.693,1,1.011,9,0.232,10,3.002,27,1.392,31,0.025,33,0.594,37,1.147,55,0.949,57,1.011,60,0.949,62,0.949,64,0.949,66,0.949,69,1.011,71,0.949,73,1.011,75,1.55,77,1.011,79,1.011,83,0.012,84,0.017,85,0.012,101,2.17,102,2.17,132,2.382,135,2.382,149,2.382,151,3.002,168,2.138,177,2.933,179,3.002,221,3.578,238,1.593,279,1.392,289,3.219,293,2.647,327,2.806,345,3.002,380,2.17,388,2.647,391,2.647,394,2.647,406,3.002,407,3.002,429,1.843,430,1.994,494,3.002,523,3.647,525,4.053,539,3.578,545,2.382,553,2.44,575,3.002,599,3.002,654,1.843,655,3.002,661,3.002,751,3.002,752,3.002,767,3.002,806,3.002,836,2.647,856,3.219,857,2.647,888,3.002,925,3.002,926,3.002,994,3.002,1043,3.002,1075,3.002,1092,2.382,1094,3.002,1095,3.002,1102,3.002,1104,3.002,1105,3.002,1106,3.541,1107,3.541,1108,5.807,1109,5.807,1110,3.541,1111,3.541,1112,5.422,1113,5.422,1114,3.541,1115,3.541,1116,3.002,1117,3.002,1118,3.541,1119,3.541,1120,3.541,1121,3.541,1122,5.807,1123,3.541,1124,3.541,1125,3.541,1126,3.541,1127,3.541,1128,3.541,1129,3.541,1130,3.541,1131,3.541,1132,3.541,1133,4.786,1134,3.541,1135,3.541,1136,3.541,1137,3.541,1138,3.541,1139,3.541,1140,3.541,1141,3.002,1142,4.786,1143,3.002,1144,3.541,1145,3.541]],["title/dependencies.html",[89,1.859,1146,2.868]],["body/dependencies.html",[31,0.025,42,0.402,83,0.017,84,0.02,85,0.017,89,2.169,109,4.945,110,4.36,130,2.509,169,1.466,209,2.714,211,2.714,408,4.087,1147,4.821,1148,6.923,1149,4.821,1150,4.087,1151,4.821,1152,4.821,1153,4.821,1154,4.821,1155,4.821,1156,4.821,1157,4.821,1158,4.821,1159,4.821,1160,4.821,1161,4.821,1162,4.821,1163,4.821]],["title/miscellaneous/functions.html",[1164,1.615,1165,3.502]],["body/miscellaneous/functions.html",[22,0.782,30,1.184,31,0.022,32,0.97,34,1.038,83,0.018,84,0.021,85,0.018,146,3.379,158,3.379,175,1.85,188,3.379,303,3.367,818,4.259,835,4.259,836,4.47,842,5.069,1116,4.259,1117,5.069,1164,2.829,1165,4.259,1166,5.024,1167,5.024,1168,5.979,1169,5.024,1170,5.024,1171,5.024,1172,5.024,1173,5.979,1174,5.024,1175,5.024,1176,5.024]],["title/index.html",[22,0.447,1177,2.868,1178,2.868]],["body/index.html",[0,0.608,4,0.281,17,1.221,31,0.019,32,0.826,38,3.627,83,0.015,84,0.019,85,0.015,105,1.681,146,2.878,158,2.878,279,1.681,579,4.049,623,3.198,627,5.04,763,3.627,903,3.627,952,2.878,1105,4.593,1150,3.627,1179,4.278,1180,5.945,1181,5.945,1182,4.278,1183,4.278,1184,4.278,1185,6.447,1186,6.689,1187,4.278,1188,4.278,1189,4.278,1190,4.278,1191,4.278,1192,4.278,1193,4.278,1194,5.945,1195,5.945,1196,4.278,1197,6.447,1198,4.278,1199,4.278,1200,4.278,1201,4.278,1202,4.278,1203,4.278,1204,3.627,1205,5.417,1206,5.417,1207,6.249,1208,4.278,1209,5.417,1210,5.417,1211,4.278,1212,6.249,1213,4.278,1214,4.278,1215,4.278,1216,5.945,1217,4.278,1218,4.278]],["title/modules.html",[88,1.619]],["body/modules.html",[31,0.02,83,0.017,84,0.02,85,0.017,87,3.269,88,1.678,99,2.529,100,2.978,110,5.079,201,3.269,205,2.978,206,2.187,376,3.269,381,2.978,382,2.978,402,2.978,1219,6.795,1220,6.795,1221,7.018,1222,6.535,1223,6.535]],["title/overview.html",[1224,3.975]],["body/overview.html",[1,1.78,2,1.114,31,0.025,48,0.761,55,1.384,57,1.474,60,1.671,62,1.384,64,1.384,66,1.384,69,1.78,71,1.384,73,1.474,77,1.474,79,1.474,83,0.011,84,0.016,85,0.011,86,0.865,87,4.518,88,1.114,89,1.452,90,1.68,91,1.68,92,1.68,93,1.268,94,2.736,95,2.736,96,2.736,97,2.736,98,2.736,99,3.055,100,4.143,101,3.166,102,3.166,103,2.337,104,1.68,105,1.268,128,1.817,149,2.171,201,4.399,202,2.736,203,2.736,204,2.736,205,3.166,206,2.806,220,1.978,376,4.634,377,2.736,378,2.736,379,2.736,380,3.166,381,3.166,382,3.897,398,2.736,399,2.736,400,2.736,401,2.736,402,4.187,490,2.413,566,2.171,567,2.736,568,2.736,570,2.736,744,2.736,745,2.736,747,2.736,1069,3.808,1092,2.171,1224,2.736,1225,3.227,1226,3.227,1227,3.227,1228,3.227]],["title/routes.html",[128,2.64]],["body/routes.html",[31,0.022,83,0.019,84,0.022,85,0.019,128,3.128]],["title/miscellaneous/typealiases.html",[1164,1.615,1229,4.131]],["body/miscellaneous/typealiases.html",[22,0.826,31,0.022,33,0.89,83,0.018,84,0.022,85,0.018,856,3.57,857,4.882,878,5.236,880,5.236,881,5.236,1164,2.988,1230,5.308,1231,6.176]],["title/miscellaneous/variables.html",[1164,1.615,1232,3.502]],["body/miscellaneous/variables.html",[22,0.757,31,0.025,33,0.983,37,1.574,83,0.017,84,0.02,85,0.017,125,2.529,221,3.633,277,2.317,278,2.173,283,2.348,289,4.395,291,4.12,292,3.633,293,4.382,294,3.633,1141,4.12,1143,4.12,1164,2.737,1204,4.969,1232,4.12,1233,4.86,1234,4.86,1235,4.86,1236,5.862,1237,5.862,1238,4.86,1239,4.86]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["0.6",{"_index":521,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["0.7",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.9.1",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1069,"title":{},"body":{"components/TopnavComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.6",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/1",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1225,"title":{},"body":{"overview.html":{}}}],["100",{"_index":523,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["100vw",{"_index":517,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["1035px",{"_index":371,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["10px",{"_index":993,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["11",{"_index":1228,"title":{},"body":{"overview.html":{}}}],["11/17",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1226,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["2.0.8",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["2.6.10",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":494,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["200",{"_index":529,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["200px",{"_index":805,"title":{},"body":{"components/SidenavComponent.html":{}}}],["20px",{"_index":372,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["24px",{"_index":1070,"title":{},"body":{"components/TopnavComponent.html":{}}}],["25rem",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["27",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":490,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["3/7",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["3000",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["300px",{"_index":528,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/TasksComponent.html":{}}}],["30px",{"_index":565,"title":{},"body":{"components/DialogComponent.html":{}}}],["33",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1227,"title":{},"body":{"overview.html":{}}}],["4/10",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1072,"title":{},"body":{"components/TopnavComponent.html":{}}}],["404",{"_index":753,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40px",{"_index":357,"title":{},"body":{"components/BoardComponent.html":{}}}],["41",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["450",{"_index":765,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["46",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":532,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["5/12",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["5/15",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["5/18",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":525,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["5000",{"_index":597,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["56px",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["599px",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["5px",{"_index":367,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":825,"title":{},"body":{"components/SignupComponent.html":{}}}],["6.5.3",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["66",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["8.0.2",{"_index":1150,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.14",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":355,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["8px",{"_index":538,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["90",{"_index":353,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["99",{"_index":1064,"title":{},"body":{"components/TopnavComponent.html":{}}}],["absolute",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["abstractcontrol",{"_index":457,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["access",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignupComponent.html":{}}}],["accessors",{"_index":426,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["action",{"_index":1039,"title":{},"body":{"components/TasksComponent.html":{},"injectables/UIService.html":{}}}],["actual_component",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["add",{"_index":487,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["afterclosed",{"_index":971,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["again",{"_index":591,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["aliases",{"_index":1230,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":364,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["already",{"_index":1172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular",{"_index":1180,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":712,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":710,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["angular/common",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{}}}],["angular/compiler",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":715,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":742,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":552,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/MaterialModule.html":{},"components/TasksCardListComponent.html":{}}}],["angular/material/divider",{"_index":717,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":719,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":721,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":723,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":725,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":731,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":727,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/slide",{"_index":739,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":734,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["angular/material/toolbar",{"_index":729,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":737,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["another",{"_index":1171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["api_url",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["app.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":87,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":99,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":362,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["artifacts",{"_index":1198,"title":{},"body":{"index.html":{}}}],["async",{"_index":932,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["auth",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["auth/auth.guard",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.interceptor",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["authdata",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdata).subscribe",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticate",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["authenticathion",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/TopnavComponent.html":{},"interfaces/User.html":{}}}],["authguard",{"_index":132,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.expirationdate.gettime",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinterceptor",{"_index":101,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authlistenersubscription",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["authmodule",{"_index":201,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authrequest",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":205,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":27,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussubscription",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["authtoken",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["autoauthuser",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["available",{"_index":1223,"title":{},"body":{"modules.html":{}}}],["await",{"_index":980,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backdrop",{"_index":512,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["background",{"_index":518,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{}}}],["backtooltip",{"_index":938,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["backward",{"_index":929,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["bar",{"_index":735,"title":{},"body":{"modules/MaterialModule.html":{},"injectables/UIService.html":{}}}],["baseline",{"_index":1067,"title":{},"body":{"components/TopnavComponent.html":{}}}],["bearer",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["behaviorsubject",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["behaviorsubject(null",{"_index":907,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["behaviorsubject(true",{"_index":1089,"title":{},"body":{"injectables/UIService.html":{}}}],["board",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["board'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["board.component",{"_index":385,"title":{},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{}}}],["board.component.css",{"_index":346,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":347,"title":{},"body":{"components/BoardComponent.html":{}}}],["board__item",{"_index":366,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":55,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardmodule",{"_index":376,"title":{"modules/BoardModule.html":{}},"body":{"modules/BoardModule.html":{},"modules.html":{},"overview.html":{}}}],["boardroutingmodule",{"_index":381,"title":{"modules/BoardRoutingModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/TasksCardListComponent.html":{}}}],["bootstrap",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["border",{"_index":530,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["bottom",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["breakpointobserver",{"_index":778,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["breakpoints",{"_index":782,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["browse",{"_index":1221,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1197,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["button:not(:last",{"_index":562,"title":{},"body":{"components/DialogComponent.html":{}}}],["calc(100",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["call",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["cancel",{"_index":511,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{}}}],["canload",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canload(route",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{}}}],["catch",{"_index":984,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["catcherror",{"_index":581,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":585,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":365,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["center/cover",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":952,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"index.html":{}}}],["changes",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["characters",{"_index":491,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["child",{"_index":563,"title":{},"body":{"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["class",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["clear",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearauthdata",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["cleartimeout(this.tokentimer",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1181,"title":{},"body":{"index.html":{}}}],["close",{"_index":425,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["cluster_appmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_boardmodule",{"_index":377,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_declarations",{"_index":378,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_boardmodule_imports",{"_index":379,"title":{},"body":{"modules/BoardModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_dialogmodule",{"_index":567,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_declarations",{"_index":568,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_exports",{"_index":570,"title":{},"body":{"modules/DialogModule.html":{},"overview.html":{}}}],["cluster_dialogmodule_imports",{"_index":569,"title":{},"body":{"modules/DialogModule.html":{}}}],["cluster_navigationmodule",{"_index":744,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_declarations",{"_index":745,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_exports",{"_index":747,"title":{},"body":{"modules/NavigationModule.html":{},"overview.html":{}}}],["cluster_navigationmodule_imports",{"_index":746,"title":{},"body":{"modules/NavigationModule.html":{}}}],["code",{"_index":1192,"title":{},"body":{"index.html":{}}}],["color",{"_index":519,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["column",{"_index":535,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["commonmodule",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"modules/BoardRoutingModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["components/dialog/dialog.module",{"_index":396,"title":{},"body":{"modules/BoardModule.html":{}}}],["confirm",{"_index":557,"title":{},"body":{"components/DialogComponent.html":{},"components/SignupComponent.html":{}}}],["confirmpassword",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["confirmpassworderrorhandler",{"_index":811,"title":{},"body":{"components/SignupComponent.html":{}}}],["const",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BoardRoutingModule.html":{},"components/TasksCardListComponent.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":554,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["constructor(authservice",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(breakpointobserver",{"_index":777,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["constructor(data",{"_index":544,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(formbuilder",{"_index":813,"title":{},"body":{"components/SignupComponent.html":{}}}],["constructor(http",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["constructor(router",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(snackbar",{"_index":1079,"title":{},"body":{"injectables/UIService.html":{}}}],["constructor(taskhttpservice",{"_index":428,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["constructor(uiservice",{"_index":576,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":766,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["content",{"_index":360,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["control",{"_index":456,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["controlname",{"_index":1176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["core",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["core/core.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["core/home/home.component",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/page",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["coremodule",{"_index":100,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1104,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["created",{"_index":866,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["createtask",{"_index":499,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{}}}],["createtask(task",{"_index":864,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["createtaskcomponent",{"_index":57,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":409,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creator",{"_index":657,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksComponent.html":{}}}],["custom",{"_index":1169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{},"interfaces/User.html":{}}}],["data.content",{"_index":556,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.title",{"_index":555,"title":{},"body":{"components/DialogComponent.html":{}}}],["date",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(expirationdate",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["deadline",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["decorators",{"_index":547,"title":{},"body":{"components/DialogComponent.html":{},"components/SidenavComponent.html":{}}}],["default",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["defining",{"_index":1103,"title":{},"body":{"interfaces/User.html":{}}}],["delete",{"_index":869,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deleted",{"_index":759,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["deletetask",{"_index":859,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["deletetask(id",{"_index":867,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["dependencies",{"_index":89,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/PageNotFoundComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["descriptipon",{"_index":460,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["destroy",{"_index":414,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["dev",{"_index":1188,"title":{},"body":{"index.html":{}}}],["devdo",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{},"index.html":{}}}],["development",{"_index":1184,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":540,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/TasksCardListComponent.html":{}}}],["dialog'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["dialog.component",{"_index":573,"title":{},"body":{"modules/DialogModule.html":{}}}],["dialog.component.css",{"_index":541,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialog.component.html",{"_index":542,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["dialogcomponent",{"_index":60,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogdata",{"_index":545,"title":{"interfaces/DialogData.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":382,"title":{"modules/DialogModule.html":{}},"body":{"modules/BoardModule.html":{},"modules/DialogModule.html":{},"modules.html":{},"overview.html":{}}}],["dialogref",{"_index":967,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["direction",{"_index":534,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["directives",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1196,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1201,"title":{},"body":{"index.html":{}}}],["display",{"_index":350,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["dist",{"_index":1200,"title":{},"body":{"index.html":{}}}],["divider",{"_index":374,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["documentation",{"_index":1105,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doing",{"_index":659,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["doingtasks",{"_index":997,"title":{},"body":{"components/TasksComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["done",{"_index":660,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["done_all",{"_index":990,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["donetasks",{"_index":998,"title":{},"body":{"components/TasksComponent.html":{}}}],["dragdropmodule",{"_index":711,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":771,"title":{},"body":{"components/SidenavComponent.html":{}}}],["drop",{"_index":713,"title":{},"body":{"modules/MaterialModule.html":{}}}],["duration",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["dynamic",{"_index":408,"title":{},"body":{"components/CreateTaskComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":1213,"title":{},"body":{"index.html":{}}}],["easy",{"_index":834,"title":{},"body":{"components/SignupComponent.html":{}}}],["edit",{"_index":447,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["element",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["email",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["emailerrorhandler",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["end",{"_index":1212,"title":{},"body":{"index.html":{}}}],["enter",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["entrycomponents",{"_index":572,"title":{},"body":{"modules/DialogModule.html":{}}}],["environment",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["error",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"miscellaneous/functions.html":{}}}],["error.error.message",{"_index":595,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":102,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":586,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errors",{"_index":435,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["eventemitter",{"_index":432,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["execute",{"_index":1209,"title":{},"body":{"index.html":{}}}],["exist",{"_index":758,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["expansion",{"_index":991,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["expirationdate",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationdate.toisostring",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinduration",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["exports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["fab",{"_index":1041,"title":{},"body":{"components/TasksComponent.html":{}}}],["fails",{"_index":1175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{},"components/TopnavComponent.html":{}}}],["field",{"_index":537,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["fields",{"_index":835,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":1191,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":1019,"title":{},"body":{"components/TasksComponent.html":{}}}],["first",{"_index":391,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["fixed",{"_index":514,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["flag",{"_index":1203,"title":{},"body":{"index.html":{}}}],["flex",{"_index":351,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["font",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["form",{"_index":443,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["form.password.value?.length",{"_index":855,"title":{},"body":{"components/SignupComponent.html":{}}}],["formbuilder",{"_index":814,"title":{},"body":{"components/SignupComponent.html":{}}}],["formcontrol",{"_index":462,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{}}}],["formcontrol(null",{"_index":469,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{}}}],["formgroup",{"_index":451,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":384,"title":{},"body":{"modules/BoardModule.html":{}}}],["forward",{"_index":930,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["forwardtooltip",{"_index":939,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["found",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["found'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["found.component",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.css",{"_index":754,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":755,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":752,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":756,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["function",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1165,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1215,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1194,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1179,"title":{},"body":{"index.html":{}}}],["getalltasks",{"_index":1001,"title":{},"body":{"components/TasksComponent.html":{}}}],["getauthdata",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["getdescription",{"_index":458,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getdescriptionerrors",{"_index":419,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getform",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getisauth",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmappedtask",{"_index":892,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(id",{"_index":897,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["getmappedtask(this.taskid",{"_index":479,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettask",{"_index":860,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettask(id",{"_index":870,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["gettaskid",{"_index":893,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettaskid(id",{"_index":899,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["gettasks",{"_index":861,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["getter",{"_index":833,"title":{},"body":{"components/SignupComponent.html":{}}}],["getting",{"_index":1177,"title":{"index.html":{}},"body":{}}],["gettitle",{"_index":454,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettitleerrors",{"_index":420,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettoken",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["getupdatedtaskslist",{"_index":1002,"title":{},"body":{"components/TasksComponent.html":{}}}],["go",{"_index":763,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["graph",{"_index":1222,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":149,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hammerjs",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["header",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headers",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["heading",{"_index":764,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["height",{"_index":354,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["help",{"_index":1216,"title":{},"body":{"index.html":{}}}],["helps",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1183,"title":{},"body":{"index.html":{}}}],["heroku_url",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hideconfirmpassword",{"_index":809,"title":{},"body":{"components/SignupComponent.html":{}}}],["hidepassword",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["home",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["home.component.css",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{}}}],["home__cta",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":62,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":558,"title":{},"body":{"components/DialogComponent.html":{}}}],["html",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["http",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["http.service",{"_index":466,"title":{},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["http.service.ts",{"_index":857,"title":{},"body":{"injectables/TaskHttpService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["http.service.ts:16",{"_index":863,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:25",{"_index":865,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:34",{"_index":873,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:45",{"_index":876,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:54",{"_index":868,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http.service.ts:63",{"_index":871,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["http://localhost:3000/api/v2",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1190,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["httpclientmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":580,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":184,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpresponse",{"_index":878,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":440,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["identifier",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["image.jpg",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["import('./auth/auth.module').then(m",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./board/board.module').then(m",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{}}}],["inconvinience",{"_index":594,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{}}}],["inform",{"_index":1087,"title":{},"body":{"injectables/UIService.html":{}}}],["initialize",{"_index":442,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["inject",{"_index":550,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["inject(mat_dialog_data",{"_index":548,"title":{},"body":{"components/DialogComponent.html":{}}}],["injectable",{"_index":168,"title":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["injectables",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{},"overview.html":{}}}],["input",{"_index":963,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["inputs",{"_index":937,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["intercept",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":177,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":178,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":553,"title":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/User.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isauth",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["isauthenticated",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarktheme",{"_index":772,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ishandset",{"_index":773,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isloading",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["isloggedin",{"_index":774,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["isopen",{"_index":999,"title":{},"body":{"components/TasksComponent.html":{}}}],["itask",{"_index":654,"title":{"interfaces/ITask.html":{}},"body":{"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["item",{"_index":1074,"title":{},"body":{"components/TopnavComponent.html":{}}}],["items",{"_index":560,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["js",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":359,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/TasksComponent.html":{}}}],["karma",{"_index":1211,"title":{},"body":{"index.html":{}}}],["keep",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["later",{"_index":592,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["layoutmodule",{"_index":709,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":516,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["legend",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"modules/DialogModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"overview.html":{}}}],["letter",{"_index":1096,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["letter.pipe",{"_index":392,"title":{},"body":{"modules/BoardModule.html":{}}}],["letter.pipe.ts",{"_index":1095,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["letter.pipe.ts:10",{"_index":1098,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["line",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":904,"title":{},"body":{"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["list'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["list.component",{"_index":395,"title":{},"body":{"modules/BoardModule.html":{}}}],["list.component.css",{"_index":927,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.html",{"_index":928,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts",{"_index":926,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:112",{"_index":949,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:17",{"_index":945,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:18",{"_index":946,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:19",{"_index":943,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:20",{"_index":942,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:21",{"_index":944,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:22",{"_index":947,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:23",{"_index":962,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:24",{"_index":961,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:25",{"_index":941,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:34",{"_index":958,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:43",{"_index":956,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:58",{"_index":948,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:66",{"_index":960,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:76",{"_index":951,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list.component.ts:87",{"_index":954,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["list/tasks",{"_index":394,"title":{},"body":{"modules/BoardModule.html":{},"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["list:not(:last",{"_index":1042,"title":{},"body":{"components/TasksComponent.html":{}}}],["listen",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadchildren",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loadingstatechanged",{"_index":1077,"title":{},"body":{"injectables/UIService.html":{}}}],["loadingsubscription",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["local",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('expiration",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('expiration",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('expiration",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["logged",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"components/SidenavComponent.html":{}}}],["login",{"_index":218,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["login(email",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincomponent",{"_index":64,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":757,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["lost",{"_index":761,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["m.authmodule",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.boardmodule",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":1065,"title":{},"body":{"components/TopnavComponent.html":{}}}],["map",{"_index":793,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["map((res",{"_index":917,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["map(res",{"_index":1032,"title":{},"body":{"components/TasksComponent.html":{}}}],["map(result",{"_index":797,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["margin",{"_index":356,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["mat",{"_index":373,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["mat_dialog_data",{"_index":551,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["matbuttonmodule",{"_index":714,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":741,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":818,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["match.validator",{"_index":837,"title":{},"body":{"components/SignupComponent.html":{}}}],["match.validator.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrol",{"_index":1173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingcontrolname",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":940,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["matdialogmodule",{"_index":743,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdividermodule",{"_index":716,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.module",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{}}}],["materialmodule",{"_index":206,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":718,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":720,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":722,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":724,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":730,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":786,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":726,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":738,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":1080,"title":{},"body":{"injectables/UIService.html":{}}}],["matsnackbarmodule",{"_index":733,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarverticalposition",{"_index":1084,"title":{},"body":{"injectables/UIService.html":{}}}],["mattoolbarmodule",{"_index":728,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":736,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":370,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["maximum",{"_index":493,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["media",{"_index":368,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["menu",{"_index":804,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["message",{"_index":1088,"title":{},"body":{"injectables/UIService.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["min",{"_index":559,"title":{},"body":{"components/DialogComponent.html":{},"components/HomeComponent.html":{}}}],["mini",{"_index":1040,"title":{},"body":{"components/TasksComponent.html":{}}}],["minimum",{"_index":489,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":1164,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["modal",{"_index":445,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["modal.mat",{"_index":524,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modal__actions",{"_index":536,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modal__form",{"_index":533,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["modaltitle",{"_index":415,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["mode",{"_index":416,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["model",{"_index":656,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/User.html":{}}}],["module",{"_index":86,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["modules",{"_index":88,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":588,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["more",{"_index":1217,"title":{},"body":{"index.html":{}}}],["multi",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":836,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":843,"title":{},"body":{"components/SignupComponent.html":{}}}],["mustmatch(controlname",{"_index":1167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":1073,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigate",{"_index":1189,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1055,"title":{},"body":{"components/TopnavComponent.html":{}}}],["navigation/navigation.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["navigationmodule",{"_index":402,"title":{"modules/NavigationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/NavigationModule.html":{},"modules.html":{},"overview.html":{}}}],["need",{"_index":762,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["never",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(authrequest",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":584,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1186,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{}}}],["ngondestroy",{"_index":421,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["none",{"_index":375,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["now",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["now.gettime",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["null",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{}}}],["number",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UIService.html":{}}}],["object",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["observables",{"_index":439,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["observe",{"_index":781,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{}}}],["onbackward",{"_index":931,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onbackward(id",{"_index":950,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus",{"_index":933,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onchangestatus(id",{"_index":953,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onclose",{"_index":422,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["ondelete",{"_index":934,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondelete(id",{"_index":955,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["ondestroy",{"_index":410,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["onedit",{"_index":935,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onedit(id",{"_index":957,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward",{"_index":936,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["onforward(id",{"_index":959,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["onlogout",{"_index":775,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["onsave",{"_index":423,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["onsignup",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ontogglesidenav",{"_index":1046,"title":{},"body":{"components/TopnavComponent.html":{}}}],["ontoggletheme",{"_index":776,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["open/close",{"_index":1010,"title":{},"body":{"components/TasksComponent.html":{}}}],["optional",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":461,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["outputs",{"_index":424,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["overlay",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":1224,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1146,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["pagenotfoundcomponent",{"_index":66,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardComponent.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["panel:not(:last",{"_index":992,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["param",{"_index":882,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":875,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["passworderrorhandler",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["passwords",{"_index":817,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["permissions",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pipe",{"_index":1092,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":972,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["pipes",{"_index":1093,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["pipetransform",{"_index":1099,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["please",{"_index":589,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["position",{"_index":513,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["post(`${api_url}login",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["primary",{"_index":1062,"title":{},"body":{"components/TopnavComponent.html":{}}}],["private",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["probably",{"_index":760,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["prod",{"_index":1202,"title":{},"body":{"index.html":{}}}],["production",{"_index":1204,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{},"components/TasksCardListComponent.html":{}}}],["properties",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{}}}],["protected",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protection",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protractor",{"_index":1214,"title":{},"body":{"index.html":{}}}],["provide",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["providers",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["public",{"_index":543,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{}}}],["radius",{"_index":531,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["raised",{"_index":561,"title":{},"body":{"components/DialogComponent.html":{}}}],["reactive",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiveformsmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"modules/BoardModule.html":{}}}],["readme",{"_index":1218,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":858,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["redirect",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirectto",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relative",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["reload",{"_index":903,"title":{},"body":{"injectables/TaskStateService.html":{},"index.html":{}}}],["reloadtasks",{"_index":894,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["reloadtasks(tasks",{"_index":901,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["repeat",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["req",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["req.clone",{"_index":196,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["res.body._id",{"_index":918,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.description",{"_index":920,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.status",{"_index":921,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["res.body.tasks.map((task",{"_index":1033,"title":{},"body":{"components/TasksComponent.html":{}}}],["res.body.title",{"_index":919,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["reset",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}],["responding",{"_index":587,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["response",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["response.expiresin",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":798,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["results",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["rgba(0",{"_index":520,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{}}}],["right",{"_index":564,"title":{},"body":{"components/DialogComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"injectables/UIService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["route",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":219,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":128,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/NavigationModule.html":{}}}],["routing.module.ts",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/BoardRoutingModule.html":{}}}],["run",{"_index":1185,"title":{},"body":{"index.html":{}}}],["running",{"_index":1205,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":465,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/SidenavComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["save",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{}}}],["saveauthdata",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(token",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1193,"title":{},"body":{"index.html":{}}}],["screen",{"_index":369,"title":{},"body":{"components/BoardComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["self",{"_index":1066,"title":{},"body":{"components/TopnavComponent.html":{}}}],["serve",{"_index":1187,"title":{},"body":{"index.html":{}}}],["server",{"_index":579,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/TaskHttpService.html":{},"index.html":{}}}],["service",{"_index":1076,"title":{},"body":{"injectables/UIService.html":{}}}],["set",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"miscellaneous/functions.html":{}}}],["setauthtimer",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["setauthtimer(duration",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["share",{"_index":1020,"title":{},"body":{"components/TasksComponent.html":{}}}],["shared/error.interceptor",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/ui.service",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["sharereplay",{"_index":794,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["short",{"_index":824,"title":{},"body":{"components/SignupComponent.html":{}}}],["showsnackbar",{"_index":1078,"title":{},"body":{"injectables/UIService.html":{}}}],["showsnackbar(message",{"_index":1083,"title":{},"body":{"injectables/UIService.html":{}}}],["side",{"_index":1054,"title":{},"body":{"components/TopnavComponent.html":{}}}],["sidenav",{"_index":768,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["sidenav.component.css",{"_index":769,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.html",{"_index":770,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":750,"title":{},"body":{"modules/NavigationModule.html":{}}}],["sidenavcomponent",{"_index":69,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["signup",{"_index":217,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["signup(username",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.component.css",{"_index":807,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":808,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["signupcomponent",{"_index":71,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":810,"title":{},"body":{"components/SignupComponent.html":{}}}],["single",{"_index":872,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["size",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TopnavComponent.html":{}}}],["snack",{"_index":1086,"title":{},"body":{"injectables/UIService.html":{}}}],["snackbar",{"_index":1082,"title":{},"body":{"injectables/UIService.html":{}}}],["sorry",{"_index":593,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"modules/BoardRoutingModule.html":{},"modules/CoreModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"modules/DialogModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"index.html":{}}}],["space",{"_index":361,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["spacer",{"_index":1068,"title":{},"body":{"components/TopnavComponent.html":{}}}],["spinner",{"_index":732,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../auth.service.ts",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":1231,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":216,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:12",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:19",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.interceptor.ts",{"_index":179,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/auth.interceptor.ts:13",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.interceptor.ts:19",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/auth.module.ts",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.service.ts:115",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:133",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:151",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:160",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:168",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:176",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:18",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:19",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:23",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:34",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:48",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:77",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:14",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:16",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:24",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:45",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:57",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:67",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:77",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/signup/must",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth/signup/signup.component.ts",{"_index":806,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/auth/signup/signup.component.ts:101",{"_index":822,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:114",{"_index":820,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:14",{"_index":831,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:15",{"_index":828,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:16",{"_index":827,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:17",{"_index":829,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:18",{"_index":830,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:19",{"_index":815,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:26",{"_index":821,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:46",{"_index":832,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:53",{"_index":826,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:65",{"_index":819,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:77",{"_index":823,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/signup/signup.component.ts:89",{"_index":816,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/auth/user.model.ts",{"_index":1102,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/board/board",{"_index":397,"title":{},"body":{"modules/BoardRoutingModule.html":{}}}],["src/app/board/board.component.ts",{"_index":345,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":348,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":349,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.module.ts",{"_index":383,"title":{},"body":{"modules/BoardModule.html":{}}}],["src/app/board/tasks/create",{"_index":406,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/task",{"_index":856,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/board/tasks/task.model.ts",{"_index":655,"title":{},"body":{"interfaces/ITask.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks",{"_index":925,"title":{},"body":{"components/TasksCardListComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts",{"_index":994,"title":{},"body":{"components/TasksComponent.html":{},"coverage.html":{}}}],["src/app/board/tasks/tasks.component.ts:17",{"_index":1014,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:18",{"_index":1013,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:19",{"_index":1016,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:20",{"_index":1017,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:21",{"_index":1011,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:22",{"_index":1012,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:23",{"_index":1015,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:24",{"_index":1004,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:28",{"_index":1008,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:46",{"_index":1005,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:66",{"_index":1006,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:75",{"_index":1009,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/tasks/tasks.component.ts:82",{"_index":1007,"title":{},"body":{"components/TasksComponent.html":{}}}],["src/app/board/uppercase",{"_index":1094,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component",{"_index":964,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts",{"_index":539,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/components/dialog/dialog.component.ts:14",{"_index":546,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.component.ts:15",{"_index":549,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/components/dialog/dialog.module.ts",{"_index":571,"title":{},"body":{"modules/DialogModule.html":{}}}],["src/app/core/core.module.ts",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/home/home.component.ts",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/home/home.component.ts:15",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:16",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:20",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:31",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/home/home.component.ts:38",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/core/navigation/navigation.module.ts",{"_index":748,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts",{"_index":767,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:14",{"_index":789,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:15",{"_index":790,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:16",{"_index":791,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:17",{"_index":779,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:25",{"_index":780,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:37",{"_index":784,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/sidenav/sidenav.component.ts:44",{"_index":783,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts",{"_index":1043,"title":{},"body":{"components/TopnavComponent.html":{},"coverage.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:13",{"_index":1057,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:14",{"_index":1058,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:15",{"_index":1050,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:16",{"_index":1049,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:23",{"_index":1051,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:35",{"_index":1053,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:42",{"_index":1056,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/navigation/topnav/topnav.component.ts:49",{"_index":1052,"title":{},"body":{"components/TopnavComponent.html":{}}}],["src/app/core/page",{"_index":751,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/material.module",{"_index":574,"title":{},"body":{"modules/DialogModule.html":{},"modules/NavigationModule.html":{}}}],["src/app/material.module.ts",{"_index":708,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/error.interceptor.ts",{"_index":575,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/error.interceptor.ts:16",{"_index":577,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/error.interceptor.ts:22",{"_index":578,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/ui.service",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/shared/ui.service.ts",{"_index":1075,"title":{},"body":{"injectables/UIService.html":{},"coverage.html":{}}}],["src/app/shared/ui.service.ts:15",{"_index":1081,"title":{},"body":{"injectables/UIService.html":{}}}],["src/app/shared/ui.service.ts:22",{"_index":1085,"title":{},"body":{"injectables/UIService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1178,"title":{"index.html":{}},"body":{}}],["state.service",{"_index":467,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["state.service.ts",{"_index":888,"title":{},"body":{"injectables/TaskStateService.html":{},"coverage.html":{}}}],["state.service.ts:11",{"_index":910,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:12",{"_index":912,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:13",{"_index":913,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:14",{"_index":915,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:15",{"_index":908,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:16",{"_index":896,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:25",{"_index":898,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:42",{"_index":906,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:50",{"_index":902,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["state.service.ts:58",{"_index":900,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["statements",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":788,"title":{},"body":{"components/SidenavComponent.html":{}}}],["status",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["sticky",{"_index":1063,"title":{},"body":{"components/TopnavComponent.html":{}}}],["storage",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1199,"title":{},"body":{"index.html":{}}}],["string",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["subject",{"_index":448,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["subscribe",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"components/TasksComponent.html":{}}}],["subscribe(authstatus",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(isauth",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":502,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["subscribe(result",{"_index":973,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["subscribe(task",{"_index":480,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["subscription",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["subscriptions",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":1219,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":969,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["svg",{"_index":1220,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":1018,"title":{},"body":{"components/TasksComponent.html":{}}}],["table",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":464,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task",{"_index":411,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/ITask.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["task._id",{"_index":1034,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.component",{"_index":389,"title":{},"body":{"modules/BoardModule.html":{}}}],["task.component.css",{"_index":412,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.html",{"_index":413,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts",{"_index":407,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:114",{"_index":444,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:122",{"_index":437,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:17",{"_index":452,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:18",{"_index":450,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:19",{"_index":449,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:20",{"_index":433,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:21",{"_index":453,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:22",{"_index":431,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:29",{"_index":441,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:56",{"_index":455,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:63",{"_index":459,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:70",{"_index":436,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:83",{"_index":434,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:96",{"_index":446,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.creator",{"_index":1036,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.description",{"_index":483,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.model",{"_index":879,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status",{"_index":1035,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('doing",{"_index":1028,"title":{},"body":{"components/TasksComponent.html":{}}}],["task.status.includes('done",{"_index":983,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.status.includes('todo",{"_index":982,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task.title",{"_index":482,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["task/create",{"_index":388,"title":{},"body":{"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["taskarrayresponsetype",{"_index":881,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["taskform",{"_index":417,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskhttpservice",{"_index":429,"title":{"injectables/TaskHttpService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["taskid",{"_index":418,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["taskidlistener",{"_index":889,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["tasklistener",{"_index":890,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskresponsetype",{"_index":880,"title":{},"body":{"injectables/TaskHttpService.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["tasks'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["tasks.component.css",{"_index":995,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.component.html",{"_index":996,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks.filter(task",{"_index":1026,"title":{},"body":{"components/TasksComponent.html":{}}}],["tasks/create",{"_index":387,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks",{"_index":393,"title":{},"body":{"modules/BoardModule.html":{}}}],["tasks/tasks.component",{"_index":386,"title":{},"body":{"modules/BoardModule.html":{}}}],["taskscardlistcomponent",{"_index":73,"title":{"components/TasksCardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskscomponent",{"_index":77,"title":{"components/TasksComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"modules/BoardModule.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskslistlistener",{"_index":891,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["taskstateservice",{"_index":430,"title":{"injectables/TaskStateService.html":{}},"body":{"components/CreateTaskComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["test",{"_index":1208,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1207,"title":{},"body":{"index.html":{}}}],["text",{"_index":363,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/TasksComponent.html":{}}}],["theme",{"_index":785,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authlistenersubscription",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authlistenersubscription.unsubscribe",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.autoauthuser",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.getauthstatuslistener().pipe(map(isloggedin",{"_index":800,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.getauthstatuslistener().subscribe(authstatus",{"_index":838,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authservice.getisauth",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.gettoken",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.login(this.form.email.value",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":802,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.authservice.signup",{"_index":851,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(false",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(true",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussubscription",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authstatussubscription.unsubscribe",{"_index":705,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.backward",{"_index":977,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":796,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.clearauthdata",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.close.emit",{"_index":507,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.deletetask(id",{"_index":974,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.description.haserror('maxlength",{"_index":497,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('minlength",{"_index":496,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.haserror('required",{"_index":495,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.description.value",{"_index":501,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.destroy$.next",{"_index":508,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.destroy$.unsubscribe",{"_index":509,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":968,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.doingtasks",{"_index":1027,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.donetasks",{"_index":1029,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.drawer.close",{"_index":803,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.edit.emit",{"_index":966,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.form.confirmpassword.haserror('mustmatch",{"_index":849,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.confirmpassword.haserror('required",{"_index":848,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.confirmpassword.value",{"_index":854,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.email.haserror('email",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.haserror('required",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.email.value",{"_index":853,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('minlength",{"_index":847,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.password.haserror('required",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.password.value",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.form.username.haserror('minlength",{"_index":846,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.username.haserror('required",{"_index":845,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.form.username.value",{"_index":852,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.formbuilder.group",{"_index":840,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.forward",{"_index":978,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.getalltasks",{"_index":1023,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.getauthdata",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getupdatedtaskslist",{"_index":1030,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.http",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete(`${this.url}/${id",{"_index":886,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(`${this.url}/${id",{"_index":887,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.get(this.url",{"_index":884,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.post(`${api_url}signup",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.url",{"_index":883,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.http.put(`${this.url}/${id",{"_index":885,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["this.isauth",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.isauthenticated",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarktheme",{"_index":801,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.ishandset",{"_index":795,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isloading",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksComponent.html":{}}}],["this.isloggedin",{"_index":799,"title":{},"body":{"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["this.isopen",{"_index":1038,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.loadingsubscription",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.loadingsubscription.unsubscribe",{"_index":704,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.loginform",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.modaltitle",{"_index":477,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.mode",{"_index":476,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.onchangestatus(id",{"_index":979,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.onclose",{"_index":506,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.router.navigate",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/board",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/user/login",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/user/signup",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.saveauthdata(token",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresin",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setauthtimer(expiresinduration",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signupform",{"_index":839,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupform.controls",{"_index":844,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.snackbar.open(message",{"_index":1090,"title":{},"body":{"injectables/UIService.html":{}}}],["this.taskform",{"_index":468,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('description",{"_index":485,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.get('title",{"_index":484,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.reset",{"_index":505,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskform.setvalue",{"_index":481,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskhttpservice",{"_index":498,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.deletetask(id).subscribe",{"_index":975,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskhttpservice.gettask(id).pipe",{"_index":916,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskhttpservice.gettasks().pipe",{"_index":1031,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskid",{"_index":475,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskidlistener.asobservable",{"_index":909,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskidlistener.next(id",{"_index":924,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.asobservable",{"_index":911,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasklistener.next(task",{"_index":922,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.tasks",{"_index":1021,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.tasks$.pipe(map(tasks",{"_index":1025,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskslistlistener.asobservable",{"_index":914,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskslistlistener.next(tasks",{"_index":923,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["this.taskstateservice",{"_index":478,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.getmappedtask(id).topromise",{"_index":981,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(id",{"_index":965,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.taskstateservice.gettaskid(null",{"_index":510,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.reloadtasks([...this.tasks",{"_index":976,"title":{},"body":{"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["this.taskstateservice.taskidlistener$.pipe(takeuntil(this.destroy$)).subscribe(id",{"_index":474,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.taskstateservice.tasklistener",{"_index":1037,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.taskslistlistener$.pipe",{"_index":1022,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.taskstateservice.updatetaskslist(res.body.task",{"_index":503,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TasksCardListComponent.html":{}}}],["this.title.haserror('maxlength",{"_index":492,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('minlength",{"_index":488,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.haserror('required",{"_index":486,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.title.value",{"_index":500,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.todotasks",{"_index":1024,"title":{},"body":{"components/TasksComponent.html":{}}}],["this.togglesidenav.emit",{"_index":1059,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.toggletheme.emit",{"_index":1060,"title":{},"body":{"components/TopnavComponent.html":{}}}],["this.token",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokentimer",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(false",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.loadingstatechanged.next(true",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{}}}],["this.uiservice.loadingstatechanged.subscribe",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.uiservice.loadingstatechanged.subscribe(isloading",{"_index":850,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.uiservice.showsnackbar",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uiservice.showsnackbar('something",{"_index":985,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["this.uiservice.showsnackbar(errormessage",{"_index":596,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror",{"_index":582,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":598,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["timer",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["title",{"_index":427,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/ITask.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["todo",{"_index":658,"title":{},"body":{"interfaces/ITask.html":{},"components/TasksCardListComponent.html":{}}}],["todotasks",{"_index":1000,"title":{},"body":{"components/TasksComponent.html":{}}}],["toggle",{"_index":740,"title":{},"body":{"modules/MaterialModule.html":{},"components/SidenavComponent.html":{},"components/TopnavComponent.html":{}}}],["togglemodal",{"_index":1003,"title":{},"body":{"components/TasksComponent.html":{}}}],["togglesidenav",{"_index":1047,"title":{},"body":{"components/TopnavComponent.html":{}}}],["toggletheme",{"_index":1048,"title":{},"body":{"components/TopnavComponent.html":{}}}],["token",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentimer",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar.mat",{"_index":1061,"title":{},"body":{"components/TopnavComponent.html":{}}}],["top",{"_index":515,"title":{},"body":{"components/CreateTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/TasksCardListComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["topnav.component.css",{"_index":1044,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav.component.html",{"_index":1045,"title":{},"body":{"components/TopnavComponent.html":{}}}],["topnav/topnav.component",{"_index":749,"title":{},"body":{"modules/NavigationModule.html":{}}}],["topnavcomponent",{"_index":79,"title":{"components/TopnavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/NavigationModule.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["track",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":526,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["transform(value",{"_index":1097,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["translate",{"_index":527,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["true",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":590,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/TasksCardListComponent.html":{}}}],["tslib",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"interfaces/ITask.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1229,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui.service",{"_index":583,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["uiservice",{"_index":238,"title":{"injectables/UIService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{},"injectables/UIService.html":{},"coverage.html":{}}}],["undo",{"_index":989,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["unit",{"_index":1206,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":438,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{}}}],["up",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{}}}],["update",{"_index":877,"title":{},"body":{"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{}}}],["updatetask",{"_index":862,"title":{},"body":{"injectables/TaskHttpService.html":{}}}],["updatetask(id",{"_index":874,"title":{},"body":{"injectables/TaskHttpService.html":{},"components/TasksCardListComponent.html":{}}}],["updatetask(this.taskid",{"_index":504,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["updatetaskslist",{"_index":895,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["updatetaskslist(task",{"_index":905,"title":{},"body":{"injectables/TaskStateService.html":{}}}],["uppercase",{"_index":390,"title":{},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletter",{"_index":988,"title":{},"body":{"components/TasksCardListComponent.html":{},"pipes/UppercaseFirstLetterPipe.html":{}}}],["uppercasefirstletterpipe",{"_index":380,"title":{"pipes/UppercaseFirstLetterPipe.html":{}},"body":{"modules/BoardModule.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskHttpService.html":{},"miscellaneous/variables.html":{}}}],["url(/assets/img/home",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1195,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":37,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.model",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"interfaces/User.html":{}}}],["usernameerrorhandler",{"_index":812,"title":{},"body":{"components/SignupComponent.html":{}}}],["valid",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validate",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validation",{"_index":1174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":842,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":463,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["validators.maxlength(1000",{"_index":473,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.maxlength(20",{"_index":472,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["validators.minlength(3",{"_index":471,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/SignupComponent.html":{}}}],["validators.minlength(6",{"_index":841,"title":{},"body":{"components/SignupComponent.html":{}}}],["validators.required",{"_index":470,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskHttpService.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"injectables/UIService.html":{},"pipes/UppercaseFirstLetterPipe.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercase",{"_index":1100,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["value.slice(1",{"_index":1101,"title":{},"body":{"pipes/UppercaseFirstLetterPipe.html":{}}}],["var",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{}}}],["variable",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1232,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1182,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1091,"title":{},"body":{"injectables/UIService.html":{}}}],["via",{"_index":1210,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":792,"title":{},"body":{"components/SidenavComponent.html":{}}}],["viewchild('drawer",{"_index":787,"title":{},"body":{"components/SidenavComponent.html":{}}}],["visibility",{"_index":707,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["visibility_off",{"_index":706,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/SignupComponent.html":{},"injectables/TaskStateService.html":{},"components/TasksCardListComponent.html":{},"components/TasksComponent.html":{},"components/TopnavComponent.html":{},"injectables/UIService.html":{}}}],["want",{"_index":970,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["weight",{"_index":1071,"title":{},"body":{"components/TopnavComponent.html":{}}}],["went",{"_index":986,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["width",{"_index":352,"title":{},"body":{"components/BoardComponent.html":{},"components/CreateTaskComponent.html":{},"components/DialogComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SidenavComponent.html":{},"components/TasksComponent.html":{}}}],["wrap",{"_index":358,"title":{},"body":{"components/BoardComponent.html":{},"components/TasksComponent.html":{}}}],["wrong",{"_index":987,"title":{},"body":{"components/TasksCardListComponent.html":{}}}],["z",{"_index":522,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/TopnavComponent.html":{}}}],["zone.js",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BoardModule.html":{},"modules/CoreModule.html":{},"modules/DialogModule.html":{},"modules/NavigationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Root component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n                    Authenticate user automatically\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n/**\n * Root component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Authenticate user automatically\n   */\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ErrorInterceptor } from './shared/error.interceptor';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule, CoreModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'board',\n    loadChildren: () => \"import('./board/board.module').then(m => m.BoardModule)\",\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'user',\n    loadChildren: () => \"import('./auth/auth.module').then(m => m.AuthModule)\"\n  },\n  { path: 'page-not-found', component: PageNotFoundComponent },\n  { path: '**', redirectTo: 'page-not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard for route protection.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad(route: Route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:19\n                \n            \n\n\n            \n                \n                    Check if the user has permissions to access\na protected route before the bundle is loaded.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Route\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanLoad, Route, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Guard for route protection.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Check if the user has permissions to access\n   * a protected route before the bundle is loaded.\n   */\n  canLoad(route: Route): Observable | Promise | boolean {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      return this.router.navigate(['/user/login']);\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Authentication interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n                    Set Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n/**\n * Authentication interceptor.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Set Authorization header.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                    Private\n                                tokenTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                    Private\n                                setAuthTimer\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoAuthUser\n                        \n                        \n                    \n                \n            \n            \n                \nautoAuthUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n                    Auto user authentication.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:168\n                \n            \n\n\n            \n                \n                    Clear authentication data from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:176\n                \n            \n\n\n            \n                \n                    Get authentication data.\n\n\n                    \n                        Returns :     { token: any; expirationDate: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Listen to changes in authentication status.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Get authenticathion status.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:34\n                \n            \n\n\n            \n                \n                    Get token.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:77\n                \n            \n\n\n            \n                \n                    Log in user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:133\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string, expirationDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:160\n                \n            \n\n\n            \n                \n                    Save authentication data in local storage.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expirationDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setAuthTimer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthTimer(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:151\n                \n            \n\n\n            \n                \n                    Set authentication timer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \nsignup(username: string, email: string, password: string, confirmPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n                    Create user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.isAuthenticated\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokenTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UIService } from '../shared/ui.service';\nimport { environment } from '../../environments/environment';\n\n/**\n * API URL\n */\nconst API_URL = environment.apiUrl + '/user/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private token: string;\n  private isAuthenticated = false;\n  private tokenTimer: any;\n  private authStatusListener = new BehaviorSubject(\n    this.isAuthenticated\n  );\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private uiService: UIService\n  ) {}\n\n  /**\n   * Get token.\n   */\n  getToken() {\n    return this.token;\n  }\n\n  /**\n   * Get authenticathion status.\n   */\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  /**\n   * Listen to changes in authentication status.\n   */\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  /**\n   * Create user.\n   */\n  signup(\n    username: string,\n    email: string,\n    password: string,\n    confirmPassword: string\n  ) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: User = { username, email, password, confirmPassword };\n    this.http.post(`${API_URL}signup`, authData).subscribe(\n      response => {\n        this.router.navigate(['/user/login']);\n        this.uiService.loadingStateChanged.next(false);\n      },\n      error => {\n        this.uiService.loadingStateChanged.next(false);\n      }\n    );\n  }\n\n  /**\n   * Log in user.\n   */\n  login(email: string, password: string) {\n    this.uiService.loadingStateChanged.next(true);\n    const authData: User = { email, password };\n    this.http\n      .post(`${API_URL}login`, authData)\n      .subscribe(\n        response => {\n          const token = response.token;\n          if (token) {\n            const expiresInDuration = response.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.token = token;\n            this.isAuthenticated = true;\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000\n            );\n            this.saveAuthData(token, expirationDate);\n            this.uiService.showSnackBar(\n              'Logged in successfully!',\n              null,\n              3000,\n              'bottom'\n            );\n            this.uiService.loadingStateChanged.next(true);\n            this.router.navigate(['/board']);\n          }\n        },\n        error => {\n          this.uiService.loadingStateChanged.next(false);\n        }\n      );\n  }\n\n  /**\n   * Auto user authentication.\n   */\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  /**\n   * Log out user.\n   */\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.uiService.showSnackBar(\n      'Logged out successfully!',\n      null,\n      3000,\n      'bottom'\n    );\n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Set authentication timer.\n   */\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  /**\n   * Save authentication data in local storage.\n   */\n  private saveAuthData(token: string, expirationDate: Date) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n  }\n\n  /**\n   * Clear authentication data from local storage.\n   */\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  /**\n   * Get authentication data.\n   */\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate)\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Board Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Board Component\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n  \n -->\n\n\n    \n\n    \n                \n                    ./board.component.css\n                \n                .board {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 40px auto 0;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.board__item {\n  margin: 0 5px;\n}\n\n@media only screen and (max-width: 1035px) {\n  .board__item {\n    margin: 0 20px;\n  }\n\n  mat-divider {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardModule.html":{"url":"modules/BoardModule.html","title":"module - BoardModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            TasksCardListComponent\n                        \n                        \n                            TasksComponent\n                        \n                        \n                            UppercaseFirstLetterPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BoardRoutingModule\n                        \n                        \n                            DialogModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\n\nimport { BoardRoutingModule } from './board-routing.module';\nimport { BoardComponent } from './board.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { CreateTaskComponent } from './tasks/create-task/create-task.component';\nimport { UppercaseFirstLetterPipe } from './uppercase-first-letter.pipe';\nimport { TasksCardListComponent } from './tasks/tasks-card-list/tasks-card-list.component';\nimport { DialogModule } from '../components/dialog/dialog.module';\n\n@NgModule({\n  declarations: [BoardComponent, TasksComponent, CreateTaskComponent, UppercaseFirstLetterPipe, TasksCardListComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, BoardRoutingModule, MaterialModule, DialogModule]\n})\nexport class BoardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BoardRoutingModule.html":{"url":"modules/BoardRoutingModule.html","title":"module - BoardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BoardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/board-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BoardComponent } from './board.component';\n\nconst routes: Routes = [{ path: '', component: BoardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BoardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NavigationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material.module';\n\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { NavigationModule } from './navigation/navigation.module';\n\n@NgModule({\n  declarations: [HomeComponent, PageNotFoundComponent],\n  imports: [CommonModule, AppRoutingModule, MaterialModule, NavigationModule],\n  exports: [NavigationModule]\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/create-task/create-task.component.ts\n\n\n    \n        Description\n    \n    \n        Dynamic component for creating new tasks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                modalTitle\n                            \n                            \n                                mode\n                            \n                            \n                                taskForm\n                            \n                            \n                                    Private\n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptionErrors\n                            \n                            \n                                getTitleErrors\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                onSave\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    title\n                                \n                                \n                                    description\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDescriptionErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetDescriptionErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:83\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:70\n                \n            \n\n\n            \n                \n                    Display title errors.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:122\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\nSet task id null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:29\n                \n            \n\n\n            \n                \n                    Initialize task form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:114\n                \n            \n\n\n            \n                \n                    Close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSave\n                        \n                        \n                    \n                \n            \n            \n                \nonSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/create-task/create-task.component.ts:96\n                \n            \n\n\n            \n                \n                    Create or edit task.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Create Task\" | \"Edit Task\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"create\" | \"edit\"\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:56\n                                \n                            \n                    \n                        \n                                Get title form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/board/tasks/create-task/create-task.component.ts:63\n                                \n                            \n                    \n                        \n                                Get descriptipon form control.\n\n\n                                \n                                    Returns :         AbstractControl\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n/**\n * Dynamic component for creating new tasks\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n  taskForm: FormGroup;\n  mode: 'create' | 'edit';\n  modalTitle: 'Create Task' | 'Edit Task';\n  @Output() close = new EventEmitter();\n  private taskId: string;\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  /**\n   * Initialize task form.\n   */\n  ngOnInit() {\n    this.taskForm = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(20)]\n      }),\n      description: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3), Validators.maxLength(1000)]\n      })\n    });\n\n    this.taskStateService.taskIdListener$.pipe(takeUntil(this.destroy$)).subscribe(id => (this.taskId = id));\n\n    if (this.taskId) {\n      this.mode = 'edit';\n      this.modalTitle = 'Edit Task';\n      this.taskStateService\n        .getMappedTask(this.taskId)\n        .subscribe(task => this.taskForm.setValue({ title: task.title, description: task.description }));\n    } else {\n      this.mode = 'create';\n      this.modalTitle = 'Create Task';\n    }\n  }\n\n  /**\n   * Get title form control.\n   */\n  get title(): AbstractControl {\n    return this.taskForm.get('title');\n  }\n\n  /**\n   * Get descriptipon form control.\n   */\n  get description(): AbstractControl {\n    return this.taskForm.get('description');\n  }\n\n  /**\n   * Display title errors.\n   */\n  getTitleErrors(): string {\n    if (this.title.hasError('required')) {\n      return 'You must add a title!';\n    } else if (this.title.hasError('minlength')) {\n      return 'The title must have minimum 3 characters';\n    } else if (this.title.hasError('maxlength')) {\n      return 'The title must have maximum 20 characters';\n    }\n  }\n\n  /**\n   * Display title errors.\n   */\n  getDescriptionErrors(): string {\n    if (this.description.hasError('required')) {\n      return 'You must add a description!';\n    } else if (this.description.hasError('minlength')) {\n      return 'The description must have minimum 3 characters';\n    } else if (this.description.hasError('maxlength')) {\n      return 'The description must have maximum 1000 characters';\n    }\n  }\n\n  /**\n   * Create or edit task.\n   */\n  onSave() {\n    if (this.mode === 'create') {\n      this.taskHttpService\n        .createTask({ id: null, title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } else if (this.mode === 'edit') {\n      this.taskHttpService\n        .updateTask(this.taskId, { title: this.title.value, description: this.description.value })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    }\n\n    this.taskForm.reset();\n    this.onClose();\n  }\n\n  /**\n   * Close modal.\n   */\n  onClose() {\n    this.close.emit();\n  }\n\n  /**\n   * Unsubscribe from observables.\n   * Set task id null.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.taskStateService.getTaskId(null);\n  }\n}\n\n    \n\n    \n        \n\n  {{ modalTitle }}\n  \n    \n      \n        \n         {{ getTitleErrors() }} \n      \n      \n        \n         {{ getDescriptionErrors() }} \n      \n      \n        SAVE\n        CANCEL\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                .backdrop {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 100;\n}\n\n/* Modal styles. */\n.modal.mat-card {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 300px;\n  text-align: center;\n  z-index: 200;\n  border-radius: 4px;\n}\n\n.modal__form {\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: auto;\n}\n\n.modal__actions {\n  display: flex;\n  justify-content: center;\n}\n\nmat-form-field {\n  margin-bottom: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ modalTitle }}                             {{ getTitleErrors() }}                              {{ getDescriptionErrors() }}                     SAVE        CANCEL            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialog/dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialog/dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dialog/dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n    \n        {{ data.title }}\n{{ data.content }}\n\n  \n    Confirm\n  \n  \n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./dialog.component.css\n                \n                :host {\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mat-raised-button:not(:last-child) {\n  margin-right: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}{{ data.content }}      Confirm        Cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/dialog/dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\ninterface DialogData {\n  title: string;\n  content: string;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DialogModule.html":{"url":"modules/DialogModule.html","title":"module - DialogModule","body":"\n                   \n\n\n\n\n    Modules\n    DialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_imports\n\n\n\ncluster_DialogModule_exports\n\n\n\n\nDialogComponent\n\nDialogComponent\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dialog/dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog.component';\nimport { MaterialModule } from 'src/app/material.module';\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [CommonModule, MaterialModule],\n  exports: [DialogComponent],\n  entryComponents: [DialogComponent]\n})\nexport class DialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Error interceptor.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/error.interceptor.ts:22\n                \n            \n\n\n            \n                \n                    Intercept server errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { UIService } from './ui.service';\nimport { Injectable } from '@angular/core';\n\n/**\n * Error interceptor.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private uiService: UIService) {}\n\n  /**\n   * Intercept server errors.\n   */\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = `Server is not responding at the moment. Please try again later.\n           We are sorry for any inconvinience.`;\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.uiService.showSnackBar(errorMessage, null, 5000, 'top');\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home page component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubscription\n                            \n                            \n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:38\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSignUp\n                        \n                        \n                    \n                \n            \n            \n                \nonSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/home/home.component.ts:31\n                \n            \n\n\n            \n                \n                    Redirect user to sign up page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n/**\n * Home page component\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private authListenerSubscription: Subscription;\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authListenerSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(isAuth => {\n        this.isAuth = isAuth;\n      });\n  }\n\n  /**\n   * Redirect user to sign up page\n   */\n  onSignUp() {\n    this.router.navigate(['/user/signup']);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.authListenerSubscription) {\n      this.authListenerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        devDo helps you to keep track of your project progress and never miss a\n        deadline.\n      \n      \n        Sign Up!\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .home {\n  background: url(/assets/img/home-image.jpg) no-repeat center center/cover;\n  height: calc(100% - 64px);\n  position: relative;\n}\n\n.overlay {\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.home__cta {\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  width: 30%;\n  min-width: 25rem;\n  height: 100%;\n}\n\n.home__cta p {\n  line-height: 1.6;\n  font-size: 1.2rem;\n}\n\n@media only screen and (max-width: 599px) {\n  .home {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    devDo helps you to keep track of your project progress and never miss a        deadline.                    Sign Up!            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task.model.ts\n        \n\n            \n                Description\n            \n            \n                Task model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     \"todo\" | \"doing\" | \"done\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"todo\" | \"doing\" | \"done\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITask {\n  id: string;\n  title: string;\n  description: string;\n  status?: 'todo' | 'doing' | 'done';\n  creator?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> email.\n\n\n                    \n                        Returns :     \"Please enter your email\" | \"Please enter a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:77\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:24\n                \n            \n\n\n            \n                \n                    Create and validate the reactive login form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:67\n                \n            \n\n\n            \n                \n                    Call log in user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:57\n                \n            \n\n\n            \n                \n                    Handle log in form errors -> password.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  hidePassword = true;\n  loginForm: FormGroup;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive login form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService\n      .getAuthStatusListener()\n      .subscribe(authStatus => {\n        this.isLoading = false;\n      });\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email]\n      }),\n      password: new FormControl(null, { validators: Validators.required })\n    });\n  }\n\n  get form() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   *  Handle log in form errors -> email.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'Please enter your email';\n    } else if (this.form.email.hasError('email')) {\n      return 'Please enter a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle log in form errors -> password.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'Please enter your password';\n    }\n    return null;\n  }\n\n  /**\n   * Call log in user.\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(\n      isLoading => (this.isLoading = isLoading)\n    );\n    this.authService.login(this.form.email.value, this.form.password.value);\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      {{ emailErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ passwordErrorHandler() }}\n    \n  \n  \n    Log In\n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ emailErrorHandler() }}                      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}              {{ passwordErrorHandler() }}            Log In  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    LayoutModule,\n    DragDropModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatCardModule,\n    MatDialogModule\n  ]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_imports\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                        \n                            TopnavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { MaterialModule } from 'src/app/material.module';\n\nimport { TopnavComponent } from './topnav/topnav.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\n@NgModule({\n  declarations: [TopnavComponent, SidenavComponent],\n  imports: [CommonModule, MaterialModule, AppRoutingModule],\n  exports: [SidenavComponent]\n})\nexport class NavigationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error Page component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * 404 Error Page component\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  \n    404 Error\n    The page you are looking for does not exist or have been deleted.\n    Probably you got lost and you need to go home.\n  \n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                .page-not-found {\n  position: relative;\n  height: calc(100% - 64px);\n}\n\n.heading {\n  font-size: 450%;\n}\n\n.container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@media only screen and (max-width: 599px) {\n  .page-not-found {\n    height: calc(100% - 56px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      404 Error    The page you are looking for does not exist or have been deleted.    Probably you got lost and you need to go home.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drawer\n                            \n                            \n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:25\n                \n            \n\n\n            \n                \n                    Observe breakpoints.\nCheck if user is logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:44\n                \n            \n\n\n            \n                \n                    Log out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:37\n                \n            \n\n\n            \n                \n                    Toggle theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('drawer', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/sidenav/sidenav.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  isDarkTheme = false;\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @ViewChild('drawer', { static: false }) drawer: MatSidenav;\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Observe breakpoints.\n   * Check if user is logged in.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle theme.\n   */\n  onToggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n  }\n\n  /**\n   * Log out user\n   */\n  onLogout() {\n    this.authService.logout();\n    this.drawer.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n        My Board\n      \n      \n        Sign Up\n      \n      \n        Log In\n      \n      Log Out\n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                  My Board                    Sign Up                    Log In            Log Out                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusSubscription\n                            \n                            \n                                hideConfirmPassword\n                            \n                            \n                                hidePassword\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                loadingSubscription\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPasswordErrorHandler\n                            \n                            \n                                emailErrorHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordErrorHandler\n                            \n                            \n                                usernameErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmPasswordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmPasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:89\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> confirm-password field.\n\n\n                    \n                        Returns :     \"You must confirm your password\" | \"Passwords do not match\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nemailErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:65\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :     \"You must enter a valid email\" | \"This is not a valid email\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:114\n                \n            \n\n\n            \n                \n                    Unsubscribe from subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:26\n                \n            \n\n\n            \n                \n                    Create and validate the reactive sign up form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:101\n                \n            \n\n\n            \n                \n                    Signup user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \npasswordErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:77\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> password field.\n\n\n                    \n                        Returns :     \"You must enter a password\" | \"The password is too short. Please enter minimum 6 characters\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            usernameErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nusernameErrorHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/signup/signup.component.ts:53\n                \n            \n\n\n            \n                \n                    Handle sign up form errors -> email field.\n\n\n                    \n                        Returns :         \"You must enter a valid username\" | \"Username must have minimum 3 characters\"\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideConfirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/signup/signup.component.ts:46\n                                \n                            \n                    \n                        \n                                Getter for easy access to form fields.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\nimport { UIService } from 'src/app/shared/ui.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  signupForm: FormGroup;\n  hidePassword = true;\n  hideConfirmPassword = true;\n  isLoading = false;\n  private loadingSubscription: Subscription;\n  private authStatusSubscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private uiService: UIService) {}\n\n  /**\n   * Create and validate the reactive sign up form.\n   */\n  ngOnInit() {\n    this.authStatusSubscription = this.authService.getAuthStatusListener().subscribe(authStatus => {\n      this.isLoading = false;\n    });\n    this.signupForm = this.formBuilder.group(\n      {\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      },\n      {\n        validator: MustMatch('password', 'confirmPassword')\n      }\n    );\n  }\n\n  /**\n   *  Getter for easy access to form fields.\n   */\n  get form() {\n    return this.signupForm.controls;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  usernameErrorHandler() {\n    if (this.form.username.hasError('required')) {\n      return 'You must enter a valid username';\n    } else if (this.form.username.hasError('minlength')) {\n      return 'Username must have minimum 3 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> email field.\n   */\n  emailErrorHandler() {\n    if (this.form.email.hasError('required')) {\n      return 'You must enter a valid email';\n    } else if (this.form.email.hasError('email')) {\n      return 'This is not a valid email';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> password field.\n   */\n  passwordErrorHandler() {\n    if (this.form.password.hasError('required')) {\n      return 'You must enter a password';\n    } else if (this.form.password.hasError('minlength')) {\n      return 'The password is too short. Please enter minimum 6 characters';\n    }\n    return null;\n  }\n\n  /**\n   * Handle sign up form errors -> confirm-password field.\n   */\n  confirmPasswordErrorHandler() {\n    if (this.form.confirmPassword.hasError('required')) {\n      return 'You must confirm your password';\n    } else if (this.form.confirmPassword.hasError('mustMatch')) {\n      return 'Passwords do not match';\n    }\n    return null;\n  }\n\n  /**\n   * Signup user\n   */\n  onSubmit() {\n    this.loadingSubscription = this.uiService.loadingStateChanged.subscribe(isLoading => (this.isLoading = isLoading));\n    this.authService.signup(\n      this.form.username.value,\n      this.form.email.value,\n      this.form.password.value,\n      this.form.confirmPassword.value\n    );\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    if (this.loadingSubscription) {\n      this.loadingSubscription.unsubscribe();\n    }\n\n    if (this.authStatusSubscription) {\n      this.authStatusSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ usernameErrorHandler() }}\n  \n\n  \n    \n    {{ emailErrorHandler() }}\n  \n\n  \n    \n    \n      {{ hidePassword ? \"visibility_off\" : \"visibility\" }}\n    \n    {{ form.password.value?.length || 0 }}/6\n    \n      {{ passwordErrorHandler() }}\n    \n  \n\n  \n    \n    \n      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}\n    \n    \n      {{ confirmPasswordErrorHandler() }}\n    \n  \n  \n    Sign Up\n  \n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ usernameErrorHandler() }}            {{ emailErrorHandler() }}                  {{ hidePassword ? \"visibility_off\" : \"visibility\" }}        {{ form.password.value?.length || 0 }}/6          {{ passwordErrorHandler() }}                      {{ hideConfirmPassword ? \"visibility_off\" : \"visibility\" }}              {{ confirmPasswordErrorHandler() }}            Sign Up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskHttpService.html":{"url":"injectables/TaskHttpService.html","title":"injectable - TaskHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, uiService: UIService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTask\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTask(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:54\n                \n            \n\n\n            \n                \n                    Delete task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:63\n                \n            \n\n\n            \n                \n                    Get a single task from server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTasks\n                        \n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:34\n                \n            \n\n\n            \n                \n                    Create a new task.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTask\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTask(id: string, task: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-http.service.ts:45\n                \n            \n\n\n            \n                \n                    Update task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> Partial task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/tasks'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-http.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { ITask } from './task.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UIService } from '../../shared/ui.service';\nimport { environment } from '../../../environments/environment';\nimport { map } from 'rxjs/operators';\n\ntype TaskResponseType = HttpResponse;\ntype TaskArrayResponseType = HttpResponse;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskHttpService {\n  private readonly URL = environment.apiUrl + '/tasks';\n\n  constructor(private http: HttpClient, private uiService: UIService) {}\n\n  /**\n   * Create a new task.\n   * @param task -> created task\n   * @returns observable.\n   */\n  createTask(task: ITask): Observable {\n    return this.http.post(`${this.URL}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Create a new task.\n   * @param task -> created task.\n   * @returns observable.\n   */\n  getTasks(): Observable {\n    this.uiService.loadingStateChanged.next(true);\n    return this.http.get(this.URL, { observe: 'response' });\n  }\n\n  /**\n   * Update task.\n   * @param id -> task id.\n   * @param task -> Partial task.\n   * @returns observable.\n   */\n  updateTask(id: string, task: Partial): Observable {\n    return this.http.put(`${this.URL}/${id}`, task, { observe: 'response' });\n  }\n\n  /**\n   * Delete task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  deleteTask(id: string): Observable> {\n    return this.http.delete(`${this.URL}/${id}`, { observe: 'response' });\n  }\n\n  /**\n   * Get a single task from server.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getTask(id: string): Observable {\n    return this.http.get(`${this.URL}/${id}`, { observe: 'response' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskStateService.html":{"url":"injectables/TaskStateService.html","title":"injectable - TaskStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tasks/task-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                taskIdListener\n                            \n                            \n                                taskIdListener$\n                            \n                            \n                                    Private\n                                taskListener\n                            \n                            \n                                taskListener$\n                            \n                            \n                                    Private\n                                tasksListListener\n                            \n                            \n                                tasksListListener$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMappedTask\n                            \n                            \n                                getTaskId\n                            \n                            \n                                reloadTasks\n                            \n                            \n                                updateTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedTask\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:25\n                \n            \n\n\n            \n                \n                    Map task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskId\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:58\n                \n            \n\n\n            \n                \n                    Get task id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadTasks\n                        \n                        \n                    \n                \n            \n            \n                \nreloadTasks(tasks: ITask[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:50\n                \n            \n\n\n            \n                \n                    Reload tasks.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                ITask[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> tasks list.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTasksList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTasksList(task: ITask)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/task-state.service.ts:42\n                \n            \n\n\n            \n                \n                    Update tasks list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                ITask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> created task.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskIdListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskIdListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskIdListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            taskListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.taskListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasksListListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksListListener$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tasksListListener.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/task-state.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { ITask } from './task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStateService {\n  private taskListener = new BehaviorSubject(null);\n  taskListener$ = this.taskListener.asObservable();\n  private tasksListListener = new BehaviorSubject(null);\n  tasksListListener$ = this.tasksListListener.asObservable();\n  private taskIdListener = new BehaviorSubject(null);\n  taskIdListener$ = this.taskIdListener.asObservable();\n\n  constructor(private taskHttpService: TaskHttpService) {}\n\n  /**\n   * Map task.\n   * @param id -> task id.\n   * @returns observable.\n   */\n  getMappedTask(id: string): Observable {\n    return this.taskHttpService.getTask(id).pipe(\n      map((res: any) => {\n        return {\n          id: res.body._id,\n          title: res.body.title,\n          description: res.body.description,\n          status: res.body.status\n        };\n      })\n    );\n  }\n\n  /**\n   * Update tasks list.\n   * @param task -> created task.\n   */\n  updateTasksList(task: ITask) {\n    this.taskListener.next(task);\n  }\n\n  /**\n   * Reload tasks.\n   * @param tasks -> tasks list.\n   */\n  reloadTasks(tasks: ITask[]) {\n    this.tasksListListener.next(tasks);\n  }\n\n  /**\n   * Get task id.\n   * @param id -> task id.\n   */\n  getTaskId(id: string) {\n    this.taskIdListener.next(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksCardListComponent.html":{"url":"components/TasksCardListComponent.html","title":"component - TasksCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-card-list\n            \n\n            \n                styleUrls\n                ./tasks-card-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backward\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                forward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deleteTask\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBackward\n                            \n                            \n                                    Private\n                                    Async\n                                onChangeStatus\n                            \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onForward\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backTooltip\n                            \n                            \n                                forwardTooltip\n                            \n                            \n                                isLoading\n                            \n                            \n                                tasks\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService, uiService: UIService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forwardTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n                \n                    \n                        Type :         ITask[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deleteTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:112\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBackward\n                        \n                        \n                    \n                \n            \n            \n                \nonBackward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:76\n                \n            \n\n\n            \n                \n                    Change status on backward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            onChangeStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangeStatus(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:87\n                \n            \n\n\n            \n                \n                    Change status.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDelete\n                        \n                        \n                    \n                \n            \n            \n                \nonDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:43\n                \n            \n\n\n            \n                \n                    Delete task.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEdit\n                        \n                        \n                    \n                \n            \n            \n                \nonEdit(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onForward\n                        \n                        \n                    \n                \n            \n            \n                \nonForward(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:66\n                \n            \n\n\n            \n                \n                    Change status on forward.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -> task id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            backward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { ITask } from '../task.model';\nimport { UIService } from '../../../shared/ui.service';\nimport { DialogComponent } from 'src/app/components/dialog/dialog.component';\nimport { TaskHttpService } from '../task-http.service';\nimport { TaskStateService } from '../task-state.service';\n\n@Component({\n  selector: 'app-tasks-card-list',\n  templateUrl: './tasks-card-list.component.html',\n  styleUrls: ['./tasks-card-list.component.css']\n})\nexport class TasksCardListComponent implements OnDestroy {\n  @Input() tasks: ITask[];\n  @Input() title: string;\n  @Input() forwardTooltip: string;\n  @Input() backTooltip: string;\n  @Input() isLoading: boolean;\n  @Output() edit = new EventEmitter();\n  private forward = false;\n  private backward = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    private taskHttpService: TaskHttpService,\n    private taskStateService: TaskStateService,\n    private uiService: UIService,\n    private dialog: MatDialog\n  ) {}\n\n  onEdit(id: string) {\n    this.taskStateService.getTaskId(id);\n    this.edit.emit();\n  }\n\n  /**\n   * Delete task.\n   * @param id -> task id.\n   */\n  onDelete(id: string) {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      data: { title: 'Delete Task', content: 'Are you sure you want to delete this task?' }\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        if (result) {\n          this.deleteTask(id);\n        }\n      });\n  }\n\n  private deleteTask(id: string) {\n    this.taskHttpService.deleteTask(id).subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Change status on forward.\n   * @param id -> task id.\n   */\n  onForward(id: string) {\n    this.backward = false;\n    this.forward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status on backward.\n   * @param id -> task id.\n   */\n  onBackward(id: string) {\n    this.forward = false;\n    this.backward = true;\n    this.onChangeStatus(id);\n  }\n\n  /**\n   * Change status.\n   * @param id -> task id.\n   * @returns promise\n   */\n  private async onChangeStatus(id: string): Promise {\n    try {\n      const task = await this.taskStateService.getMappedTask(id).toPromise();\n\n      let status: 'todo' | 'doing' | 'done';\n\n      if (this.forward) {\n        status = task.status.includes('todo') ? 'doing' : 'done';\n      }\n\n      if (this.backward) {\n        status = task.status.includes('done') ? 'doing' : 'todo';\n      }\n\n      this.taskHttpService\n        .updateTask(id, { status })\n        .subscribe(res => this.taskStateService.updateTasksList(res.body.task));\n    } catch (error) {\n      this.uiService.showSnackBar('Something went wrong! Try again later.', null, 5000, 'top');\n    }\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        {{ title }}\n\n  \n    \n      {{ task.title | uppercaseFirstLetter }}\n    \n\n    \n      {{ task.description | uppercaseFirstLetter }}\n    \n\n    \n      \n        undo\n      \n      \n        done\n        done_all\n      \n\n      \n        edit\n      \n\n      \n        delete\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./tasks-card-list.component.css\n                \n                mat-expansion-panel:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}            {{ task.title | uppercaseFirstLetter }}              {{ task.description | uppercaseFirstLetter }}                      undo                    done        done_all                    edit                    delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksComponent.html":{"url":"components/TasksComponent.html","title":"component - TasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/tasks/tasks.component.ts\n\n\n    \n        Description\n    \n    \n        Tasks List Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks\n            \n\n            \n                styleUrls\n                ./tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                doingTasks$\n                            \n                            \n                                doneTasks$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                tasks\n                            \n                            \n                                tasks$\n                            \n                            \n                                todoTasks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllTasks\n                            \n                            \n                                    Private\n                                getUpdatedTasksList\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskHttpService: TaskHttpService, taskStateService: TaskStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskHttpService\n                                                  \n                                                        \n                                                                        TaskHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskStateService\n                                                  \n                                                        \n                                                                        TaskStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAllTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:46\n                \n            \n\n\n            \n                \n                    Get tasks.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUpdatedTasksList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedTasksList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:66\n                \n            \n\n\n            \n                \n                    Get new task.\n\n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:82\n                \n            \n\n\n            \n                \n                    Unsubscribe from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModal\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tasks/tasks.component.ts:75\n                \n            \n\n\n            \n                \n                    Open/close modal.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doingTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doneTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ITask[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            todoTasks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tasks/tasks.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil, map, switchMap, finalize, share } from 'rxjs/operators';\nimport { TaskHttpService } from './task-http.service';\nimport { TaskStateService } from './task-state.service';\nimport { ITask } from './task.model';\n\n/**\n * Tasks List Component\n */\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n  isOpen = false;\n  isLoading = false;\n  tasks$: Observable;\n  todoTasks$: Observable;\n  doingTasks$: Observable;\n  doneTasks$: Observable;\n  private tasks: ITask[] = [];\n  private destroy$ = new Subject();\n\n  constructor(private taskHttpService: TaskHttpService, private taskStateService: TaskStateService) {}\n\n  ngOnInit() {\n    this.isLoading = true;\n\n    this.tasks$ = this.taskStateService.tasksListListener$.pipe(\n      switchMap(() => this.getAllTasks()),\n      share()\n    );\n\n    this.todoTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('todo'))));\n    this.doingTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('doing'))));\n    this.doneTasks$ = this.tasks$.pipe(map(tasks => tasks.filter(task => task.status.includes('done'))));\n\n    this.getUpdatedTasksList();\n  }\n\n  /**\n   * Get tasks.\n   */\n  private getAllTasks(): Observable {\n    return this.taskHttpService.getTasks().pipe(\n      finalize(() => (this.isLoading = false)),\n      map(res => {\n        return res.body.tasks.map((task: any) => {\n          return {\n            id: task._id,\n            title: task.title,\n            description: task.description,\n            status: task.status,\n            creator: task.creator\n          };\n        });\n      })\n    );\n  }\n\n  /**\n   * Get new task.\n   */\n  private getUpdatedTasksList(): Subscription {\n    return this.taskStateService.taskListener$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.taskStateService.reloadTasks([...this.tasks]));\n  }\n\n  /**\n   * Open/close modal.\n   */\n  toggleModal() {\n    this.isOpen = !this.isOpen;\n  }\n\n  /**\n   * Unsubscribe from observables.\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    add\n  \n\n\n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n  \n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./tasks.component.css\n                \n                .tasks-container {\n  display: flex;\n  width: 90%;\n  height: 80%;\n  margin: 0 auto;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  text-align: center;\n}\n\n.list {\n  width: 300px;\n}\n\n.action {\n  display: flex;\n  margin: 20px;\n}\n\n.action .mat-mini-fab {\n  margin-left: auto;\n}\n\n@media only screen and (max-width: 1035px) {\n  mat-divider {\n    display: none;\n  }\n\n  app-tasks-card-list:not(:last-child) {\n    margin-bottom: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopnavComponent.html":{"url":"components/TopnavComponent.html","title":"component - TopnavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopnavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/navigation/topnav/topnav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topnav\n            \n\n            \n                styleUrls\n                ./topnav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./topnav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                onToggleSidenav\n                            \n                            \n                                onToggleTheme\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidenav\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidenav\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleTheme\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:23\n                \n            \n\n\n            \n                \n                    Get authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:49\n                \n            \n\n\n            \n                \n                    Log out user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:35\n                \n            \n\n\n            \n                \n                    Toggle side navigation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/navigation/topnav/topnav.component.ts:42\n                \n            \n\n\n            \n                \n                    Change theme.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/navigation/topnav/topnav.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})\nexport class TopnavComponent implements OnInit {\n  isHandset$: Observable;\n  isLoggedIn$: Observable;\n  @Output() toggleSidenav = new EventEmitter();\n  @Output() toggleTheme = new EventEmitter();\n\n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n\n  /**\n   * Get authentication status.\n   */\n  ngOnInit() {\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n    this.isLoggedIn$ = this.authService.getAuthStatusListener().pipe(map(isLoggedIn => isLoggedIn));\n  }\n\n  /**\n   * Toggle side navigation.\n   */\n  onToggleSidenav() {\n    this.toggleSidenav.emit();\n  }\n\n  /**\n   * Change theme.\n   */\n  onToggleTheme() {\n    this.toggleTheme.emit();\n  }\n\n  /**\n   * Log out user.\n   */\n  onLogout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  devDo\n  \n  \n    \n      My Board\n    \n    \n      Sign Up\n    \n    \n      Log In\n    \n    \n      Log Out\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./topnav.component.css\n                \n                .mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 99;\n}\n\n.main-navigation {\n  display: flex;\n  align-self: baseline;\n}\n\n.spacer {\n  flex: 1 1 0;\n}\n\n.app-title {\n  font-size: 24px;\n  font-weight: 400;\n}\n\n.mat-nav-list .mat-list-item {\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu    devDo              My Board              Sign Up              Log In              Log Out        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'TasksCardListComponent', 'selector': 'app-tasks-card-list'},{'name': 'TasksComponent', 'selector': 'app-tasks'},{'name': 'TopnavComponent', 'selector': 'app-topnav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopnavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIService.html":{"url":"injectables/UIService.html","title":"injectable - UIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                User interface service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadingStateChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowSnackBar(message: string, action: any, duration: number, position: MatSnackBarVerticalPosition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/ui.service.ts:22\n                \n            \n\n\n            \n                \n                    Display a snack bar to inform user about a change or error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                            MatSnackBarVerticalPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStateChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ui.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  MatSnackBar,\n  MatSnackBarVerticalPosition\n} from '@angular/material/snack-bar';\n\n/**\n * User interface service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIService {\n  loadingStateChanged = new BehaviorSubject(true);\n\n  constructor(private snackBar: MatSnackBar) {}\n\n  /**\n   * Display a snack bar to inform user about a change or error\n   */\n  showSnackBar(\n    message: string,\n    action: any,\n    duration: number,\n    position: MatSnackBarVerticalPosition\n  ) {\n    this.snackBar.open(message, action, {\n      duration,\n      verticalPosition: position\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UppercaseFirstLetterPipe.html":{"url":"pipes/UppercaseFirstLetterPipe.html","title":"pipe - UppercaseFirstLetterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UppercaseFirstLetterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/board/uppercase-first-letter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transform first letter into uppercase.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uppercaseFirstLetter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/uppercase-first-letter.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Transform first letter into uppercase.\n */\n@Pipe({\n  name: 'uppercaseFirstLetter'\n})\nexport class UppercaseFirstLetterPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) {\n      return;\n    }\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for defining the data-authentication model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        confirmPassword\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  username?: string;\n  email: string;\n  password: string;\n  confirmPassword?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            variable\n            API_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/auth/signup/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/auth/user.model.ts\n            \n            interface\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/board/tasks/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-http.service.ts\n            \n            injectable\n            TaskHttpService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task-state.service.ts\n            \n            injectable\n            TaskStateService\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/board/tasks/task.model.ts\n            \n            interface\n            ITask\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks-card-list/tasks-card-list.component.ts\n            \n            component\n            TasksCardListComponent\n            \n                27 %\n                (5/18)\n            \n        \n        \n            \n                \n                src/app/board/tasks/tasks.component.ts\n            \n            component\n            TasksComponent\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/board/uppercase-first-letter.pipe.ts\n            \n            pipe\n            UppercaseFirstLetterPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dialog/dialog.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/core/navigation/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/core/navigation/topnav/topnav.component.ts\n            \n            component\n            TopnavComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/core/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/ui.service.ts\n            \n            injectable\n            UIService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.0.2\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            core-js : ^2.6.10\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/signup/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n                    Custom validator to check that two fields match.\nReturn if another validator has already found an error on the matchingControl.\nSet error on matchingControl if validation fails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevdo\nThis project was generated with Angular CLI version 8.0.2.\nDocumentation\nThe documentation for this project can be found here.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BoardModule\n\n\n\ncluster_BoardModule_declarations\n\n\n\ncluster_BoardModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DialogModule\n\n\n\ncluster_DialogModule_declarations\n\n\n\ncluster_DialogModule_exports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAppRoutingModule->CoreModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nAppRoutingModule->NavigationModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nNavigationModule \n\nNavigationModule \n\nNavigationModule  -->\n\nCoreModule->NavigationModule \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nCoreModule -->\n\nMaterialModule->CoreModule\n\n\n\nAuthModule -->\n\nMaterialModule->AuthModule\n\n\n\n\n\nBoardModule\n\nBoardModule\n\nBoardModule -->\n\nMaterialModule->BoardModule\n\n\n\n\n\nDialogModule\n\nDialogModule\n\nDialogModule -->\n\nMaterialModule->DialogModule\n\n\n\nNavigationModule -->\n\nMaterialModule->NavigationModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nBoardModule -->\n\nBoardComponent->BoardModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nBoardModule -->\n\nCreateTaskComponent->BoardModule\n\n\n\n\n\nTasksCardListComponent\n\nTasksCardListComponent\n\nBoardModule -->\n\nTasksCardListComponent->BoardModule\n\n\n\n\n\nTasksComponent\n\nTasksComponent\n\nBoardModule -->\n\nTasksComponent->BoardModule\n\n\n\n\n\nUppercaseFirstLetterPipe\n\nUppercaseFirstLetterPipe\n\nBoardModule -->\n\nUppercaseFirstLetterPipe->BoardModule\n\n\n\n\n\nBoardRoutingModule\n\nBoardRoutingModule\n\nBoardModule -->\n\nBoardRoutingModule->BoardModule\n\n\n\nBoardModule -->\n\nDialogModule->BoardModule\n\n\n\n\n\nDialogComponent \n\nDialogComponent \n\nDialogComponent  -->\n\nDialogModule->DialogComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nCoreModule -->\n\nHomeComponent->CoreModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nCoreModule -->\n\nPageNotFoundComponent->CoreModule\n\n\n\nCoreModule -->\n\nNavigationModule->CoreModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nNavigationModule->SidenavComponent \n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nDialogModule -->\n\nDialogComponent->DialogModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nNavigationModule -->\n\nSidenavComponent->NavigationModule\n\n\n\n\n\nTopnavComponent\n\nTopnavComponent\n\nNavigationModule -->\n\nTopnavComponent->NavigationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskArrayResponseType   (src/.../task-http.service.ts)\n                        \n                        \n                            TaskResponseType   (src/.../task-http.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/board/tasks/task-http.service.ts\n    \n    \n        \n            \n                \n                    \n                    TaskArrayResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskResponseType\n                \n            \n            \n                \n                        HttpResponse\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../auth.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl + '/user/'\n                        \n                    \n\n                \n                    \n                        API URL\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  apiUrl: HEROKU_URL\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  apiUrl: 'http://localhost:3000/api/v2'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
